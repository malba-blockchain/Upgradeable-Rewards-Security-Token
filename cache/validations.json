{
  "version": "3.4",
  "log": [
    {
      "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:AccessControlUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:50",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:ERC165Upgradeable",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/access/IAccessControl.sol:IAccessControl",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)",
          "hasRole(bytes32,address)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)24_storage)": {
              "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
              "numberOfBytes": "32"
            },
            "t_struct(AccessControlStorage)34_storage": {
              "label": "struct AccessControlUpgradeable.AccessControlStorage",
              "members": [
                {
                  "label": "_roles",
                  "type": "t_mapping(t_bytes32,t_struct(RoleData)24_storage)",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(InitializableStorage)261_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(RoleData)24_storage": {
              "label": "struct AccessControlUpgradeable.RoleData",
              "members": [
                {
                  "label": "hasRole",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.AccessControl": [
              {
                "contract": "AccessControlUpgradeable",
                "label": "_roles",
                "type": "t_mapping(t_bytes32,t_struct(RoleData)24_storage)",
                "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:60",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/access/extensions/AccessControlEnumerableUpgradeable.sol:AccessControlEnumerableUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\access\\extensions\\AccessControlEnumerableUpgradeable.sol:14",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:AccessControlUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:ERC165Upgradeable",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/access/extensions/IAccessControlEnumerable.sol:IAccessControlEnumerable",
          "@openzeppelin/contracts/access/IAccessControl.sol:IAccessControl",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/structs/EnumerableSet.sol:EnumerableSet"
        ],
        "methods": [
          "supportsInterface(bytes4)",
          "getRoleMember(bytes32,uint256)",
          "getRoleMemberCount(bytes32)",
          "getRoleMembers(bytes32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(AddressSet)1082_storage)": {
              "label": "mapping(bytes32 => struct EnumerableSet.AddressSet)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)24_storage)": {
              "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(AccessControlEnumerableStorage)175_storage": {
              "label": "struct AccessControlEnumerableUpgradeable.AccessControlEnumerableStorage",
              "members": [
                {
                  "label": "_roleMembers",
                  "type": "t_mapping(t_bytes32,t_struct(AddressSet)1082_storage)",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(AccessControlStorage)34_storage": {
              "label": "struct AccessControlUpgradeable.AccessControlStorage",
              "members": [
                {
                  "label": "_roles",
                  "type": "t_mapping(t_bytes32,t_struct(RoleData)24_storage)",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(AddressSet)1082_storage": {
              "label": "struct EnumerableSet.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)950_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(InitializableStorage)261_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(RoleData)24_storage": {
              "label": "struct AccessControlUpgradeable.RoleData",
              "members": [
                {
                  "label": "hasRole",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Set)950_storage": {
              "label": "struct EnumerableSet.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_positions",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.AccessControlEnumerable": [
              {
                "contract": "AccessControlEnumerableUpgradeable",
                "label": "_roleMembers",
                "type": "t_mapping(t_bytes32,t_struct(AddressSet)1082_storage)",
                "src": "@openzeppelin\\contracts-upgradeable\\access\\extensions\\AccessControlEnumerableUpgradeable.sol:19",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.AccessControl": [
              {
                "contract": "AccessControlUpgradeable",
                "label": "_roles",
                "type": "t_mapping(t_bytes32,t_struct(RoleData)24_storage)",
                "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:60",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable": {
        "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:56",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)261_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:17",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)261_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:PausableUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\PausableUpgradeable.sol:18",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)261_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(PausableStorage)353_storage": {
              "label": "struct PausableUpgradeable.PausableStorage",
              "members": [
                {
                  "label": "_paused",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Pausable": [
              {
                "contract": "PausableUpgradeable",
                "label": "_paused",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\utils\\PausableUpgradeable.sol:21",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\ReentrancyGuardUpgradeable.sol:26",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)261_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(ReentrancyGuardStorage)424_storage": {
              "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
              "members": [
                {
                  "label": "_status",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.ReentrancyGuard": [
              {
                "contract": "ReentrancyGuardUpgradeable",
                "label": "_status",
                "type": "t_uint256",
                "src": "@openzeppelin\\contracts-upgradeable\\utils\\ReentrancyGuardUpgradeable.sol:43",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:ERC165Upgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:21",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)261_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/access/IAccessControl.sol:IAccessControl": {
        "src": "@openzeppelin\\contracts\\access\\IAccessControl.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "hasRole(bytes32,address)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/access/extensions/IAccessControlEnumerable.sol:IAccessControlEnumerable": {
        "src": "@openzeppelin\\contracts\\access\\extensions\\IAccessControlEnumerable.sol:11",
        "inherit": [
          "@openzeppelin/contracts/access/IAccessControl.sol:IAccessControl"
        ],
        "libraries": [],
        "methods": [
          "getRoleMember(bytes32,uint256)",
          "getRoleMemberCount(bytes32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/IERC1363.sol:IERC1363": {
        "src": "@openzeppelin\\contracts\\interfaces\\IERC1363.sol:16",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "transferAndCall(address,uint256)",
          "transferAndCall(address,uint256,bytes)",
          "transferFromAndCall(address,address,uint256)",
          "transferFromAndCall(address,address,uint256,bytes)",
          "approveAndCall(address,uint256)",
          "approveAndCall(address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\utils\\SafeERC20.sol:19",
        "version": {
          "withMetadata": "4d5aa21551e02fafd7e8e0863ec3bfc2fcfe1250d5cec5955817896d6c5e05c4",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Address.sol:Address": {
        "src": "@openzeppelin\\contracts\\utils\\Address.sol:11",
        "version": {
          "withMetadata": "69a075d4917289a08ca838ba8291f9f039e47da5778b41c00c35bf1b1ec28419",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/Errors.sol:Errors"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:97"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Errors.sol:Errors": {
        "src": "@openzeppelin\\contracts\\utils\\Errors.sol:14",
        "version": {
          "withMetadata": "42072139bd52bf9a3af0fbefb19f69284420288655a62921f71240c9b7664073",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165": {
        "src": "@openzeppelin\\contracts\\utils\\introspection\\IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/structs/EnumerableSet.sol:EnumerableSet": {
        "src": "@openzeppelin\\contracts\\utils\\structs\\EnumerableSet.sol:41",
        "version": {
          "withMetadata": "13a150fcbfd403376bfbcaed0b0d1341ebbb76c82d86a507556b9c449888cf79",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UpgradeableHYAXRewards.sol:IHyaxToken": {
        "src": "contracts\\UpgradeableHYAXRewards.sol:18",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "symbol()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UpgradeableHYAXRewards.sol:UpgradeableHYAXRewards": {
        "src": "contracts\\UpgradeableHYAXRewards.sol:22",
        "version": {
          "withMetadata": "9928f9d5ffd09c2183ec60744144e5083da7b1afc2b29310a61a9f3b78a32482",
          "withoutMetadata": "aebe57618cc00ff5d70080079fd618f9487274a2f848be3343bf32ce86a9f153",
          "linkedWithoutMetadata": "aebe57618cc00ff5d70080079fd618f9487274a2f848be3343bf32ce86a9f153"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:PausableUpgradeable",
          "@openzeppelin/contracts-upgradeable/access/extensions/AccessControlEnumerableUpgradeable.sol:AccessControlEnumerableUpgradeable",
          "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:AccessControlUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:ERC165Upgradeable",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/access/extensions/IAccessControlEnumerable.sol:IAccessControlEnumerable",
          "@openzeppelin/contracts/access/IAccessControl.sol:IAccessControl",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "initialize(address)",
          "addWalletToWhitelist(address,bool,uint256)",
          "updateWhitelistStatus(address,bool)",
          "updateBlacklistStatus(address,bool)",
          "fundSmartContract(uint8,uint256)",
          "withdrawGrowthTokens()",
          "withdrawTeamTokens()",
          "calculateYearForTeamTokens()",
          "updateRewardsBatch(address[],uint256[])",
          "updateRewardsSingle(address,uint256)",
          "withdrawRewardTokens()",
          "withdrawTokensToBurn(uint8,uint256)",
          "updateTeamMemberWallet(address,address)",
          "updateWhiteListerAddress(address)",
          "updateRewardsUpdaterAddress(address)",
          "updateHyaxTokenAddress(address)",
          "updateMaximumBatchSizeForUpdateRewards(uint8)",
          "owner()",
          "pause()",
          "unpause()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_placeholder",
              "offset": 0,
              "slot": "0",
              "type": "t_struct(Placeholder)2849_storage",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:31"
            },
            {
              "label": "hyaxTokenAddress",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:159"
            },
            {
              "label": "hyaxToken",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(IHyaxToken)2840",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:161"
            },
            {
              "label": "growthTokensFunded",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:179"
            },
            {
              "label": "growthTokensWithdrawn",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:181"
            },
            {
              "label": "growthTokensInSmartContract",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:183"
            },
            {
              "label": "growthTokensLastWithdrawalTime",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:185"
            },
            {
              "label": "growthTokensStartFundingTime",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:187"
            },
            {
              "label": "growthTokensFundingStarted",
              "offset": 0,
              "slot": "8",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:189"
            },
            {
              "label": "teamTokensFunded",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:200"
            },
            {
              "label": "teamTokensWithdrawn",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:202"
            },
            {
              "label": "teamTokensInSmartContract",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:204"
            },
            {
              "label": "teamTokensStartFundingTime",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:206"
            },
            {
              "label": "teamTokensFundingStarted",
              "offset": 0,
              "slot": "13",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:208"
            },
            {
              "label": "rewardTokensFunded",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:219"
            },
            {
              "label": "rewardTokensDistributed",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:221"
            },
            {
              "label": "rewardTokensWithdrawn",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:223"
            },
            {
              "label": "rewardTokensInSmartContract",
              "offset": 0,
              "slot": "17",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:225"
            },
            {
              "label": "rewardTokensStartFundingTime",
              "offset": 0,
              "slot": "18",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:227"
            },
            {
              "label": "rewardTokensFundingStarted",
              "offset": 0,
              "slot": "19",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:229"
            },
            {
              "label": "whiteListerAddress",
              "offset": 1,
              "slot": "19",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:234"
            },
            {
              "label": "rewardsUpdaterAddress",
              "offset": 0,
              "slot": "20",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:236"
            },
            {
              "label": "maximumBatchSizeForUpdateRewards",
              "offset": 20,
              "slot": "20",
              "type": "t_uint8",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:256"
            },
            {
              "label": "wallets",
              "offset": 0,
              "slot": "21",
              "type": "t_mapping(t_address,t_struct(WalletData)3122_storage)",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:258"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(AddressSet)1082_storage)": {
              "label": "mapping(bytes32 => struct EnumerableSet.AddressSet)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)24_storage)": {
              "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(AccessControlEnumerableStorage)175_storage": {
              "label": "struct AccessControlEnumerableUpgradeable.AccessControlEnumerableStorage",
              "members": [
                {
                  "label": "_roleMembers",
                  "type": "t_mapping(t_bytes32,t_struct(AddressSet)1082_storage)",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(AccessControlStorage)34_storage": {
              "label": "struct AccessControlUpgradeable.AccessControlStorage",
              "members": [
                {
                  "label": "_roles",
                  "type": "t_mapping(t_bytes32,t_struct(RoleData)24_storage)",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(AddressSet)1082_storage": {
              "label": "struct EnumerableSet.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)950_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(InitializableStorage)261_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(PausableStorage)353_storage": {
              "label": "struct PausableUpgradeable.PausableStorage",
              "members": [
                {
                  "label": "_paused",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(ReentrancyGuardStorage)424_storage": {
              "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
              "members": [
                {
                  "label": "_status",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(RoleData)24_storage": {
              "label": "struct AccessControlUpgradeable.RoleData",
              "members": [
                {
                  "label": "hasRole",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Set)950_storage": {
              "label": "struct EnumerableSet.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_positions",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            },
            "t_contract(IHyaxToken)2840": {
              "label": "contract IHyaxToken",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_struct(WalletData)3122_storage)": {
              "label": "mapping(address => struct UpgradeableHYAXRewards.WalletData)",
              "numberOfBytes": "32"
            },
            "t_struct(Placeholder)2849_storage": {
              "label": "struct UpgradeableHYAXRewards.Placeholder",
              "members": [
                {
                  "label": "_unused",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(WalletData)3122_storage": {
              "label": "struct UpgradeableHYAXRewards.WalletData",
              "members": [
                {
                  "label": "hyaxHoldingAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "hyaxHoldingAmountAtWhitelistTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "totalHyaxRewardsAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "currentRewardsAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "rewardsWithdrawn",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "addedToWhitelistTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "teamTokenWithdrawalTimes",
                  "type": "t_uint8",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "lastRewardsWithdrawalTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "lastRewardsUpdateTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "isTeamWallet",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "isWhitelisted",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "9"
                },
                {
                  "label": "isBlacklisted",
                  "type": "t_bool",
                  "offset": 2,
                  "slot": "9"
                }
              ],
              "numberOfBytes": "320"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {
            "erc7201:openzeppelin.storage.ReentrancyGuard": [
              {
                "contract": "ReentrancyGuardUpgradeable",
                "label": "_status",
                "type": "t_uint256",
                "src": "@openzeppelin\\contracts-upgradeable\\utils\\ReentrancyGuardUpgradeable.sol:43",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Pausable": [
              {
                "contract": "PausableUpgradeable",
                "label": "_paused",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\utils\\PausableUpgradeable.sol:21",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.AccessControlEnumerable": [
              {
                "contract": "AccessControlEnumerableUpgradeable",
                "label": "_roleMembers",
                "type": "t_mapping(t_bytes32,t_struct(AddressSet)1082_storage)",
                "src": "@openzeppelin\\contracts-upgradeable\\access\\extensions\\AccessControlEnumerableUpgradeable.sol:19",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.AccessControl": [
              {
                "contract": "AccessControlUpgradeable",
                "label": "_roles",
                "type": "t_mapping(t_bytes32,t_struct(RoleData)24_storage)",
                "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:60",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      }
    },
    {
      "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:AccessControlUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:50",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:ERC165Upgradeable",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/access/IAccessControl.sol:IAccessControl",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)",
          "hasRole(bytes32,address)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)24_storage)": {
              "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
              "numberOfBytes": "32"
            },
            "t_struct(AccessControlStorage)34_storage": {
              "label": "struct AccessControlUpgradeable.AccessControlStorage",
              "members": [
                {
                  "label": "_roles",
                  "type": "t_mapping(t_bytes32,t_struct(RoleData)24_storage)",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(InitializableStorage)261_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(RoleData)24_storage": {
              "label": "struct AccessControlUpgradeable.RoleData",
              "members": [
                {
                  "label": "hasRole",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.AccessControl": [
              {
                "contract": "AccessControlUpgradeable",
                "label": "_roles",
                "type": "t_mapping(t_bytes32,t_struct(RoleData)24_storage)",
                "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:60",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/access/extensions/AccessControlEnumerableUpgradeable.sol:AccessControlEnumerableUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\access\\extensions\\AccessControlEnumerableUpgradeable.sol:14",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:AccessControlUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:ERC165Upgradeable",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/access/extensions/IAccessControlEnumerable.sol:IAccessControlEnumerable",
          "@openzeppelin/contracts/access/IAccessControl.sol:IAccessControl",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/structs/EnumerableSet.sol:EnumerableSet"
        ],
        "methods": [
          "supportsInterface(bytes4)",
          "getRoleMember(bytes32,uint256)",
          "getRoleMemberCount(bytes32)",
          "getRoleMembers(bytes32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(AddressSet)1082_storage)": {
              "label": "mapping(bytes32 => struct EnumerableSet.AddressSet)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)24_storage)": {
              "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(AccessControlEnumerableStorage)175_storage": {
              "label": "struct AccessControlEnumerableUpgradeable.AccessControlEnumerableStorage",
              "members": [
                {
                  "label": "_roleMembers",
                  "type": "t_mapping(t_bytes32,t_struct(AddressSet)1082_storage)",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(AccessControlStorage)34_storage": {
              "label": "struct AccessControlUpgradeable.AccessControlStorage",
              "members": [
                {
                  "label": "_roles",
                  "type": "t_mapping(t_bytes32,t_struct(RoleData)24_storage)",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(AddressSet)1082_storage": {
              "label": "struct EnumerableSet.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)950_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(InitializableStorage)261_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(RoleData)24_storage": {
              "label": "struct AccessControlUpgradeable.RoleData",
              "members": [
                {
                  "label": "hasRole",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Set)950_storage": {
              "label": "struct EnumerableSet.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_positions",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.AccessControlEnumerable": [
              {
                "contract": "AccessControlEnumerableUpgradeable",
                "label": "_roleMembers",
                "type": "t_mapping(t_bytes32,t_struct(AddressSet)1082_storage)",
                "src": "@openzeppelin\\contracts-upgradeable\\access\\extensions\\AccessControlEnumerableUpgradeable.sol:19",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.AccessControl": [
              {
                "contract": "AccessControlUpgradeable",
                "label": "_roles",
                "type": "t_mapping(t_bytes32,t_struct(RoleData)24_storage)",
                "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:60",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable": {
        "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:56",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)261_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:17",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)261_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:PausableUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\PausableUpgradeable.sol:18",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)261_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(PausableStorage)353_storage": {
              "label": "struct PausableUpgradeable.PausableStorage",
              "members": [
                {
                  "label": "_paused",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Pausable": [
              {
                "contract": "PausableUpgradeable",
                "label": "_paused",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\utils\\PausableUpgradeable.sol:21",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\ReentrancyGuardUpgradeable.sol:26",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)261_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(ReentrancyGuardStorage)424_storage": {
              "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
              "members": [
                {
                  "label": "_status",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.ReentrancyGuard": [
              {
                "contract": "ReentrancyGuardUpgradeable",
                "label": "_status",
                "type": "t_uint256",
                "src": "@openzeppelin\\contracts-upgradeable\\utils\\ReentrancyGuardUpgradeable.sol:43",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:ERC165Upgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:21",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)261_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/access/IAccessControl.sol:IAccessControl": {
        "src": "@openzeppelin\\contracts\\access\\IAccessControl.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "hasRole(bytes32,address)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/access/extensions/IAccessControlEnumerable.sol:IAccessControlEnumerable": {
        "src": "@openzeppelin\\contracts\\access\\extensions\\IAccessControlEnumerable.sol:11",
        "inherit": [
          "@openzeppelin/contracts/access/IAccessControl.sol:IAccessControl"
        ],
        "libraries": [],
        "methods": [
          "getRoleMember(bytes32,uint256)",
          "getRoleMemberCount(bytes32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/IERC1363.sol:IERC1363": {
        "src": "@openzeppelin\\contracts\\interfaces\\IERC1363.sol:16",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "transferAndCall(address,uint256)",
          "transferAndCall(address,uint256,bytes)",
          "transferFromAndCall(address,address,uint256)",
          "transferFromAndCall(address,address,uint256,bytes)",
          "approveAndCall(address,uint256)",
          "approveAndCall(address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\utils\\SafeERC20.sol:19",
        "version": {
          "withMetadata": "4d5aa21551e02fafd7e8e0863ec3bfc2fcfe1250d5cec5955817896d6c5e05c4",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Address.sol:Address": {
        "src": "@openzeppelin\\contracts\\utils\\Address.sol:11",
        "version": {
          "withMetadata": "69a075d4917289a08ca838ba8291f9f039e47da5778b41c00c35bf1b1ec28419",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/Errors.sol:Errors"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:97"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Errors.sol:Errors": {
        "src": "@openzeppelin\\contracts\\utils\\Errors.sol:14",
        "version": {
          "withMetadata": "42072139bd52bf9a3af0fbefb19f69284420288655a62921f71240c9b7664073",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165": {
        "src": "@openzeppelin\\contracts\\utils\\introspection\\IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/structs/EnumerableSet.sol:EnumerableSet": {
        "src": "@openzeppelin\\contracts\\utils\\structs\\EnumerableSet.sol:41",
        "version": {
          "withMetadata": "13a150fcbfd403376bfbcaed0b0d1341ebbb76c82d86a507556b9c449888cf79",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UpgradeableHYAXRewardsV2.sol:IHyaxToken": {
        "src": "contracts\\UpgradeableHYAXRewardsV2.sol:18",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "symbol()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UpgradeableHYAXRewardsV2.sol:UpgradeableHYAXRewardsV2": {
        "src": "contracts\\UpgradeableHYAXRewardsV2.sol:22",
        "version": {
          "withMetadata": "28839752d28293b63632ac48d9e14e2e7db9985223d815740b096100a7f5e497",
          "withoutMetadata": "6f7496d9c02a63ff719898aa8651281193c23c899c572368a939e431a548455a",
          "linkedWithoutMetadata": "6f7496d9c02a63ff719898aa8651281193c23c899c572368a939e431a548455a"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:PausableUpgradeable",
          "@openzeppelin/contracts-upgradeable/access/extensions/AccessControlEnumerableUpgradeable.sol:AccessControlEnumerableUpgradeable",
          "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:AccessControlUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:ERC165Upgradeable",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/access/extensions/IAccessControlEnumerable.sol:IAccessControlEnumerable",
          "@openzeppelin/contracts/access/IAccessControl.sol:IAccessControl",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "initialize(address)",
          "addWalletToWhitelist(address,bool,uint256)",
          "updateWhitelistStatus(address,bool)",
          "updateBlacklistStatus(address,bool)",
          "fundSmartContract(uint8,uint256)",
          "withdrawGrowthTokens()",
          "withdrawTeamTokens()",
          "calculateYearForTeamTokens()",
          "updateRewardsBatch(address[],uint256[])",
          "updateRewardsSingle(address,uint256)",
          "withdrawRewardTokens()",
          "withdrawTokensToBurn(uint8,uint256)",
          "updateTeamMemberWallet(address,address)",
          "updateWhiteListerAddress(address)",
          "updateRewardsUpdaterAddress(address)",
          "updateHyaxTokenAddress(address)",
          "updateMaximumBatchSizeForUpdateRewards(uint8)",
          "owner()",
          "pause()",
          "unpause()",
          "transferOwnership(address)",
          "newFunction()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_placeholder",
              "offset": 0,
              "slot": "0",
              "type": "t_struct(Placeholder)2849_storage",
              "contract": "UpgradeableHYAXRewardsV2",
              "src": "contracts\\UpgradeableHYAXRewardsV2.sol:31"
            },
            {
              "label": "hyaxTokenAddress",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewardsV2",
              "src": "contracts\\UpgradeableHYAXRewardsV2.sol:159"
            },
            {
              "label": "hyaxToken",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(IHyaxToken)2840",
              "contract": "UpgradeableHYAXRewardsV2",
              "src": "contracts\\UpgradeableHYAXRewardsV2.sol:161"
            },
            {
              "label": "growthTokensFunded",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewardsV2",
              "src": "contracts\\UpgradeableHYAXRewardsV2.sol:179"
            },
            {
              "label": "growthTokensWithdrawn",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewardsV2",
              "src": "contracts\\UpgradeableHYAXRewardsV2.sol:181"
            },
            {
              "label": "growthTokensInSmartContract",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewardsV2",
              "src": "contracts\\UpgradeableHYAXRewardsV2.sol:183"
            },
            {
              "label": "growthTokensLastWithdrawalTime",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewardsV2",
              "src": "contracts\\UpgradeableHYAXRewardsV2.sol:185"
            },
            {
              "label": "growthTokensStartFundingTime",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewardsV2",
              "src": "contracts\\UpgradeableHYAXRewardsV2.sol:187"
            },
            {
              "label": "growthTokensFundingStarted",
              "offset": 0,
              "slot": "8",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewardsV2",
              "src": "contracts\\UpgradeableHYAXRewardsV2.sol:189"
            },
            {
              "label": "teamTokensFunded",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewardsV2",
              "src": "contracts\\UpgradeableHYAXRewardsV2.sol:200"
            },
            {
              "label": "teamTokensWithdrawn",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewardsV2",
              "src": "contracts\\UpgradeableHYAXRewardsV2.sol:202"
            },
            {
              "label": "teamTokensInSmartContract",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewardsV2",
              "src": "contracts\\UpgradeableHYAXRewardsV2.sol:204"
            },
            {
              "label": "teamTokensStartFundingTime",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewardsV2",
              "src": "contracts\\UpgradeableHYAXRewardsV2.sol:206"
            },
            {
              "label": "teamTokensFundingStarted",
              "offset": 0,
              "slot": "13",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewardsV2",
              "src": "contracts\\UpgradeableHYAXRewardsV2.sol:208"
            },
            {
              "label": "rewardTokensFunded",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewardsV2",
              "src": "contracts\\UpgradeableHYAXRewardsV2.sol:219"
            },
            {
              "label": "rewardTokensDistributed",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewardsV2",
              "src": "contracts\\UpgradeableHYAXRewardsV2.sol:221"
            },
            {
              "label": "rewardTokensWithdrawn",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewardsV2",
              "src": "contracts\\UpgradeableHYAXRewardsV2.sol:223"
            },
            {
              "label": "rewardTokensInSmartContract",
              "offset": 0,
              "slot": "17",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewardsV2",
              "src": "contracts\\UpgradeableHYAXRewardsV2.sol:225"
            },
            {
              "label": "rewardTokensStartFundingTime",
              "offset": 0,
              "slot": "18",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewardsV2",
              "src": "contracts\\UpgradeableHYAXRewardsV2.sol:227"
            },
            {
              "label": "rewardTokensFundingStarted",
              "offset": 0,
              "slot": "19",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewardsV2",
              "src": "contracts\\UpgradeableHYAXRewardsV2.sol:229"
            },
            {
              "label": "whiteListerAddress",
              "offset": 1,
              "slot": "19",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewardsV2",
              "src": "contracts\\UpgradeableHYAXRewardsV2.sol:234"
            },
            {
              "label": "rewardsUpdaterAddress",
              "offset": 0,
              "slot": "20",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewardsV2",
              "src": "contracts\\UpgradeableHYAXRewardsV2.sol:236"
            },
            {
              "label": "maximumBatchSizeForUpdateRewards",
              "offset": 20,
              "slot": "20",
              "type": "t_uint8",
              "contract": "UpgradeableHYAXRewardsV2",
              "src": "contracts\\UpgradeableHYAXRewardsV2.sol:256"
            },
            {
              "label": "wallets",
              "offset": 0,
              "slot": "21",
              "type": "t_mapping(t_address,t_struct(WalletData)3122_storage)",
              "contract": "UpgradeableHYAXRewardsV2",
              "src": "contracts\\UpgradeableHYAXRewardsV2.sol:258"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(AddressSet)1082_storage)": {
              "label": "mapping(bytes32 => struct EnumerableSet.AddressSet)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)24_storage)": {
              "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(AccessControlEnumerableStorage)175_storage": {
              "label": "struct AccessControlEnumerableUpgradeable.AccessControlEnumerableStorage",
              "members": [
                {
                  "label": "_roleMembers",
                  "type": "t_mapping(t_bytes32,t_struct(AddressSet)1082_storage)",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(AccessControlStorage)34_storage": {
              "label": "struct AccessControlUpgradeable.AccessControlStorage",
              "members": [
                {
                  "label": "_roles",
                  "type": "t_mapping(t_bytes32,t_struct(RoleData)24_storage)",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(AddressSet)1082_storage": {
              "label": "struct EnumerableSet.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)950_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(InitializableStorage)261_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(PausableStorage)353_storage": {
              "label": "struct PausableUpgradeable.PausableStorage",
              "members": [
                {
                  "label": "_paused",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(ReentrancyGuardStorage)424_storage": {
              "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
              "members": [
                {
                  "label": "_status",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(RoleData)24_storage": {
              "label": "struct AccessControlUpgradeable.RoleData",
              "members": [
                {
                  "label": "hasRole",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Set)950_storage": {
              "label": "struct EnumerableSet.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_positions",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            },
            "t_contract(IHyaxToken)2840": {
              "label": "contract IHyaxToken",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_struct(WalletData)3122_storage)": {
              "label": "mapping(address => struct UpgradeableHYAXRewardsV2.WalletData)",
              "numberOfBytes": "32"
            },
            "t_struct(Placeholder)2849_storage": {
              "label": "struct UpgradeableHYAXRewardsV2.Placeholder",
              "members": [
                {
                  "label": "_unused",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(WalletData)3122_storage": {
              "label": "struct UpgradeableHYAXRewardsV2.WalletData",
              "members": [
                {
                  "label": "hyaxHoldingAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "hyaxHoldingAmountAtWhitelistTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "totalHyaxRewardsAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "currentRewardsAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "rewardsWithdrawn",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "addedToWhitelistTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "teamTokenWithdrawalTimes",
                  "type": "t_uint8",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "lastRewardsWithdrawalTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "lastRewardsUpdateTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "isTeamWallet",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "isWhitelisted",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "9"
                },
                {
                  "label": "isBlacklisted",
                  "type": "t_bool",
                  "offset": 2,
                  "slot": "9"
                }
              ],
              "numberOfBytes": "320"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {
            "erc7201:openzeppelin.storage.ReentrancyGuard": [
              {
                "contract": "ReentrancyGuardUpgradeable",
                "label": "_status",
                "type": "t_uint256",
                "src": "@openzeppelin\\contracts-upgradeable\\utils\\ReentrancyGuardUpgradeable.sol:43",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Pausable": [
              {
                "contract": "PausableUpgradeable",
                "label": "_paused",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\utils\\PausableUpgradeable.sol:21",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.AccessControlEnumerable": [
              {
                "contract": "AccessControlEnumerableUpgradeable",
                "label": "_roleMembers",
                "type": "t_mapping(t_bytes32,t_struct(AddressSet)1082_storage)",
                "src": "@openzeppelin\\contracts-upgradeable\\access\\extensions\\AccessControlEnumerableUpgradeable.sol:19",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.AccessControl": [
              {
                "contract": "AccessControlUpgradeable",
                "label": "_roles",
                "type": "t_mapping(t_bytes32,t_struct(RoleData)24_storage)",
                "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:60",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      }
    },
    {
      "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:AccessControlUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:50",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:ERC165Upgradeable",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/access/IAccessControl.sol:IAccessControl",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)",
          "hasRole(bytes32,address)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)24_storage)": {
              "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
              "numberOfBytes": "32"
            },
            "t_struct(AccessControlStorage)34_storage": {
              "label": "struct AccessControlUpgradeable.AccessControlStorage",
              "members": [
                {
                  "label": "_roles",
                  "type": "t_mapping(t_bytes32,t_struct(RoleData)24_storage)",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(InitializableStorage)261_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(RoleData)24_storage": {
              "label": "struct AccessControlUpgradeable.RoleData",
              "members": [
                {
                  "label": "hasRole",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.AccessControl": [
              {
                "contract": "AccessControlUpgradeable",
                "label": "_roles",
                "type": "t_mapping(t_bytes32,t_struct(RoleData)24_storage)",
                "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:60",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/access/extensions/AccessControlEnumerableUpgradeable.sol:AccessControlEnumerableUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\access\\extensions\\AccessControlEnumerableUpgradeable.sol:14",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:AccessControlUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:ERC165Upgradeable",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/access/extensions/IAccessControlEnumerable.sol:IAccessControlEnumerable",
          "@openzeppelin/contracts/access/IAccessControl.sol:IAccessControl",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/structs/EnumerableSet.sol:EnumerableSet"
        ],
        "methods": [
          "supportsInterface(bytes4)",
          "getRoleMember(bytes32,uint256)",
          "getRoleMemberCount(bytes32)",
          "getRoleMembers(bytes32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(AddressSet)1082_storage)": {
              "label": "mapping(bytes32 => struct EnumerableSet.AddressSet)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)24_storage)": {
              "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(AccessControlEnumerableStorage)175_storage": {
              "label": "struct AccessControlEnumerableUpgradeable.AccessControlEnumerableStorage",
              "members": [
                {
                  "label": "_roleMembers",
                  "type": "t_mapping(t_bytes32,t_struct(AddressSet)1082_storage)",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(AccessControlStorage)34_storage": {
              "label": "struct AccessControlUpgradeable.AccessControlStorage",
              "members": [
                {
                  "label": "_roles",
                  "type": "t_mapping(t_bytes32,t_struct(RoleData)24_storage)",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(AddressSet)1082_storage": {
              "label": "struct EnumerableSet.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)950_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(InitializableStorage)261_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(RoleData)24_storage": {
              "label": "struct AccessControlUpgradeable.RoleData",
              "members": [
                {
                  "label": "hasRole",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Set)950_storage": {
              "label": "struct EnumerableSet.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_positions",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.AccessControlEnumerable": [
              {
                "contract": "AccessControlEnumerableUpgradeable",
                "label": "_roleMembers",
                "type": "t_mapping(t_bytes32,t_struct(AddressSet)1082_storage)",
                "src": "@openzeppelin\\contracts-upgradeable\\access\\extensions\\AccessControlEnumerableUpgradeable.sol:19",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.AccessControl": [
              {
                "contract": "AccessControlUpgradeable",
                "label": "_roles",
                "type": "t_mapping(t_bytes32,t_struct(RoleData)24_storage)",
                "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:60",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable": {
        "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:56",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)261_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:17",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)261_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:PausableUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\PausableUpgradeable.sol:18",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)261_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(PausableStorage)353_storage": {
              "label": "struct PausableUpgradeable.PausableStorage",
              "members": [
                {
                  "label": "_paused",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Pausable": [
              {
                "contract": "PausableUpgradeable",
                "label": "_paused",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\utils\\PausableUpgradeable.sol:21",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\ReentrancyGuardUpgradeable.sol:26",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)261_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(ReentrancyGuardStorage)424_storage": {
              "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
              "members": [
                {
                  "label": "_status",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.ReentrancyGuard": [
              {
                "contract": "ReentrancyGuardUpgradeable",
                "label": "_status",
                "type": "t_uint256",
                "src": "@openzeppelin\\contracts-upgradeable\\utils\\ReentrancyGuardUpgradeable.sol:43",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:ERC165Upgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:21",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)261_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/access/IAccessControl.sol:IAccessControl": {
        "src": "@openzeppelin\\contracts\\access\\IAccessControl.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "hasRole(bytes32,address)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/access/extensions/IAccessControlEnumerable.sol:IAccessControlEnumerable": {
        "src": "@openzeppelin\\contracts\\access\\extensions\\IAccessControlEnumerable.sol:11",
        "inherit": [
          "@openzeppelin/contracts/access/IAccessControl.sol:IAccessControl"
        ],
        "libraries": [],
        "methods": [
          "getRoleMember(bytes32,uint256)",
          "getRoleMemberCount(bytes32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/IERC1363.sol:IERC1363": {
        "src": "@openzeppelin\\contracts\\interfaces\\IERC1363.sol:16",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "transferAndCall(address,uint256)",
          "transferAndCall(address,uint256,bytes)",
          "transferFromAndCall(address,address,uint256)",
          "transferFromAndCall(address,address,uint256,bytes)",
          "approveAndCall(address,uint256)",
          "approveAndCall(address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\utils\\SafeERC20.sol:19",
        "version": {
          "withMetadata": "4d5aa21551e02fafd7e8e0863ec3bfc2fcfe1250d5cec5955817896d6c5e05c4",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Address.sol:Address": {
        "src": "@openzeppelin\\contracts\\utils\\Address.sol:11",
        "version": {
          "withMetadata": "69a075d4917289a08ca838ba8291f9f039e47da5778b41c00c35bf1b1ec28419",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/Errors.sol:Errors"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:97"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Errors.sol:Errors": {
        "src": "@openzeppelin\\contracts\\utils\\Errors.sol:14",
        "version": {
          "withMetadata": "42072139bd52bf9a3af0fbefb19f69284420288655a62921f71240c9b7664073",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165": {
        "src": "@openzeppelin\\contracts\\utils\\introspection\\IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/structs/EnumerableSet.sol:EnumerableSet": {
        "src": "@openzeppelin\\contracts\\utils\\structs\\EnumerableSet.sol:41",
        "version": {
          "withMetadata": "13a150fcbfd403376bfbcaed0b0d1341ebbb76c82d86a507556b9c449888cf79",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UpgradeableHYAXRewards.sol:IHyaxToken": {
        "src": "contracts\\UpgradeableHYAXRewards.sol:18",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "symbol()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UpgradeableHYAXRewards.sol:UpgradeableHYAXRewards": {
        "src": "contracts\\UpgradeableHYAXRewards.sol:22",
        "version": {
          "withMetadata": "b6484bbc54c94a2f4cecdcb33ac514d1e4ec514e44e6064a853109fc2274f4e4",
          "withoutMetadata": "ef41d943651f090779cdc3c03e696cb34d30a26067729516658d74d559c3b28f",
          "linkedWithoutMetadata": "ef41d943651f090779cdc3c03e696cb34d30a26067729516658d74d559c3b28f"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:PausableUpgradeable",
          "@openzeppelin/contracts-upgradeable/access/extensions/AccessControlEnumerableUpgradeable.sol:AccessControlEnumerableUpgradeable",
          "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:AccessControlUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:ERC165Upgradeable",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/access/extensions/IAccessControlEnumerable.sol:IAccessControlEnumerable",
          "@openzeppelin/contracts/access/IAccessControl.sol:IAccessControl",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "initialize(address)",
          "addWalletToWhitelist(address,bool,uint256)",
          "updateWhitelistStatus(address,bool)",
          "updateBlacklistStatus(address,bool)",
          "fundSmartContract(uint8,uint256)",
          "withdrawGrowthTokens()",
          "withdrawTeamTokens()",
          "calculateYearForTeamTokens()",
          "updateRewardsBatch(address[],uint256[])",
          "updateRewardsSingle(address,uint256)",
          "withdrawRewardTokens()",
          "withdrawTokensToBurn(uint8,uint256)",
          "updateTeamMemberWallet(address,address)",
          "updateWhiteListerAddress(address)",
          "updateRewardsUpdaterAddress(address)",
          "updateHyaxTokenAddress(address)",
          "updateMaximumBatchSizeForUpdateRewards(uint8)",
          "owner()",
          "pause()",
          "unpause()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_placeholder",
              "offset": 0,
              "slot": "0",
              "type": "t_struct(Placeholder)2849_storage",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:31"
            },
            {
              "label": "hyaxTokenAddress",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:159"
            },
            {
              "label": "hyaxToken",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(IHyaxToken)2840",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:161"
            },
            {
              "label": "growthTokensFunded",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:179"
            },
            {
              "label": "growthTokensWithdrawn",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:181"
            },
            {
              "label": "growthTokensInSmartContract",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:183"
            },
            {
              "label": "growthTokensLastWithdrawalTime",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:185"
            },
            {
              "label": "growthTokensStartFundingTime",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:187"
            },
            {
              "label": "growthTokensFundingStarted",
              "offset": 0,
              "slot": "8",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:189"
            },
            {
              "label": "teamTokensFunded",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:200"
            },
            {
              "label": "teamTokensWithdrawn",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:202"
            },
            {
              "label": "teamTokensInSmartContract",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:204"
            },
            {
              "label": "teamTokensStartFundingTime",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:206"
            },
            {
              "label": "teamTokensFundingStarted",
              "offset": 0,
              "slot": "13",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:208"
            },
            {
              "label": "rewardTokensFunded",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:219"
            },
            {
              "label": "rewardTokensDistributed",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:221"
            },
            {
              "label": "rewardTokensWithdrawn",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:223"
            },
            {
              "label": "rewardTokensInSmartContract",
              "offset": 0,
              "slot": "17",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:225"
            },
            {
              "label": "rewardTokensStartFundingTime",
              "offset": 0,
              "slot": "18",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:227"
            },
            {
              "label": "rewardTokensFundingStarted",
              "offset": 0,
              "slot": "19",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:229"
            },
            {
              "label": "whiteListerAddress",
              "offset": 1,
              "slot": "19",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:234"
            },
            {
              "label": "rewardsUpdaterAddress",
              "offset": 0,
              "slot": "20",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:236"
            },
            {
              "label": "maximumBatchSizeForUpdateRewards",
              "offset": 20,
              "slot": "20",
              "type": "t_uint8",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:256"
            },
            {
              "label": "wallets",
              "offset": 0,
              "slot": "21",
              "type": "t_mapping(t_address,t_struct(WalletData)3122_storage)",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:258"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(AddressSet)1082_storage)": {
              "label": "mapping(bytes32 => struct EnumerableSet.AddressSet)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)24_storage)": {
              "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(AccessControlEnumerableStorage)175_storage": {
              "label": "struct AccessControlEnumerableUpgradeable.AccessControlEnumerableStorage",
              "members": [
                {
                  "label": "_roleMembers",
                  "type": "t_mapping(t_bytes32,t_struct(AddressSet)1082_storage)",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(AccessControlStorage)34_storage": {
              "label": "struct AccessControlUpgradeable.AccessControlStorage",
              "members": [
                {
                  "label": "_roles",
                  "type": "t_mapping(t_bytes32,t_struct(RoleData)24_storage)",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(AddressSet)1082_storage": {
              "label": "struct EnumerableSet.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)950_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(InitializableStorage)261_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(PausableStorage)353_storage": {
              "label": "struct PausableUpgradeable.PausableStorage",
              "members": [
                {
                  "label": "_paused",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(ReentrancyGuardStorage)424_storage": {
              "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
              "members": [
                {
                  "label": "_status",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(RoleData)24_storage": {
              "label": "struct AccessControlUpgradeable.RoleData",
              "members": [
                {
                  "label": "hasRole",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Set)950_storage": {
              "label": "struct EnumerableSet.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_positions",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            },
            "t_contract(IHyaxToken)2840": {
              "label": "contract IHyaxToken",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_struct(WalletData)3122_storage)": {
              "label": "mapping(address => struct UpgradeableHYAXRewards.WalletData)",
              "numberOfBytes": "32"
            },
            "t_struct(Placeholder)2849_storage": {
              "label": "struct UpgradeableHYAXRewards.Placeholder",
              "members": [
                {
                  "label": "_unused",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(WalletData)3122_storage": {
              "label": "struct UpgradeableHYAXRewards.WalletData",
              "members": [
                {
                  "label": "hyaxHoldingAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "hyaxHoldingAmountAtWhitelistTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "totalHyaxRewardsAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "currentRewardsAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "rewardsWithdrawn",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "addedToWhitelistTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "teamTokenWithdrawalTimes",
                  "type": "t_uint8",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "lastRewardsWithdrawalTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "lastRewardsUpdateTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "isTeamWallet",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "isWhitelisted",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "9"
                },
                {
                  "label": "isBlacklisted",
                  "type": "t_bool",
                  "offset": 2,
                  "slot": "9"
                }
              ],
              "numberOfBytes": "320"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {
            "erc7201:openzeppelin.storage.ReentrancyGuard": [
              {
                "contract": "ReentrancyGuardUpgradeable",
                "label": "_status",
                "type": "t_uint256",
                "src": "@openzeppelin\\contracts-upgradeable\\utils\\ReentrancyGuardUpgradeable.sol:43",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Pausable": [
              {
                "contract": "PausableUpgradeable",
                "label": "_paused",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\utils\\PausableUpgradeable.sol:21",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.AccessControlEnumerable": [
              {
                "contract": "AccessControlEnumerableUpgradeable",
                "label": "_roleMembers",
                "type": "t_mapping(t_bytes32,t_struct(AddressSet)1082_storage)",
                "src": "@openzeppelin\\contracts-upgradeable\\access\\extensions\\AccessControlEnumerableUpgradeable.sol:19",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.AccessControl": [
              {
                "contract": "AccessControlUpgradeable",
                "label": "_roles",
                "type": "t_mapping(t_bytes32,t_struct(RoleData)24_storage)",
                "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:60",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      }
    },
    {
      "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:AccessControlUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:50",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:ERC165Upgradeable",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/access/IAccessControl.sol:IAccessControl",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)",
          "hasRole(bytes32,address)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)24_storage)": {
              "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
              "numberOfBytes": "32"
            },
            "t_struct(AccessControlStorage)34_storage": {
              "label": "struct AccessControlUpgradeable.AccessControlStorage",
              "members": [
                {
                  "label": "_roles",
                  "type": "t_mapping(t_bytes32,t_struct(RoleData)24_storage)",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(InitializableStorage)261_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(RoleData)24_storage": {
              "label": "struct AccessControlUpgradeable.RoleData",
              "members": [
                {
                  "label": "hasRole",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.AccessControl": [
              {
                "contract": "AccessControlUpgradeable",
                "label": "_roles",
                "type": "t_mapping(t_bytes32,t_struct(RoleData)24_storage)",
                "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:60",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/access/extensions/AccessControlEnumerableUpgradeable.sol:AccessControlEnumerableUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\access\\extensions\\AccessControlEnumerableUpgradeable.sol:14",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:AccessControlUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:ERC165Upgradeable",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/access/extensions/IAccessControlEnumerable.sol:IAccessControlEnumerable",
          "@openzeppelin/contracts/access/IAccessControl.sol:IAccessControl",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/structs/EnumerableSet.sol:EnumerableSet"
        ],
        "methods": [
          "supportsInterface(bytes4)",
          "getRoleMember(bytes32,uint256)",
          "getRoleMemberCount(bytes32)",
          "getRoleMembers(bytes32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(AddressSet)1082_storage)": {
              "label": "mapping(bytes32 => struct EnumerableSet.AddressSet)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)24_storage)": {
              "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(AccessControlEnumerableStorage)175_storage": {
              "label": "struct AccessControlEnumerableUpgradeable.AccessControlEnumerableStorage",
              "members": [
                {
                  "label": "_roleMembers",
                  "type": "t_mapping(t_bytes32,t_struct(AddressSet)1082_storage)",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(AccessControlStorage)34_storage": {
              "label": "struct AccessControlUpgradeable.AccessControlStorage",
              "members": [
                {
                  "label": "_roles",
                  "type": "t_mapping(t_bytes32,t_struct(RoleData)24_storage)",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(AddressSet)1082_storage": {
              "label": "struct EnumerableSet.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)950_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(InitializableStorage)261_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(RoleData)24_storage": {
              "label": "struct AccessControlUpgradeable.RoleData",
              "members": [
                {
                  "label": "hasRole",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Set)950_storage": {
              "label": "struct EnumerableSet.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_positions",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.AccessControlEnumerable": [
              {
                "contract": "AccessControlEnumerableUpgradeable",
                "label": "_roleMembers",
                "type": "t_mapping(t_bytes32,t_struct(AddressSet)1082_storage)",
                "src": "@openzeppelin\\contracts-upgradeable\\access\\extensions\\AccessControlEnumerableUpgradeable.sol:19",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.AccessControl": [
              {
                "contract": "AccessControlUpgradeable",
                "label": "_roles",
                "type": "t_mapping(t_bytes32,t_struct(RoleData)24_storage)",
                "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:60",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable": {
        "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:56",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)261_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:17",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)261_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:PausableUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\PausableUpgradeable.sol:18",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)261_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(PausableStorage)353_storage": {
              "label": "struct PausableUpgradeable.PausableStorage",
              "members": [
                {
                  "label": "_paused",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Pausable": [
              {
                "contract": "PausableUpgradeable",
                "label": "_paused",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\utils\\PausableUpgradeable.sol:21",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\ReentrancyGuardUpgradeable.sol:26",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)261_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(ReentrancyGuardStorage)424_storage": {
              "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
              "members": [
                {
                  "label": "_status",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.ReentrancyGuard": [
              {
                "contract": "ReentrancyGuardUpgradeable",
                "label": "_status",
                "type": "t_uint256",
                "src": "@openzeppelin\\contracts-upgradeable\\utils\\ReentrancyGuardUpgradeable.sol:43",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:ERC165Upgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:21",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)261_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/access/IAccessControl.sol:IAccessControl": {
        "src": "@openzeppelin\\contracts\\access\\IAccessControl.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "hasRole(bytes32,address)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/access/extensions/IAccessControlEnumerable.sol:IAccessControlEnumerable": {
        "src": "@openzeppelin\\contracts\\access\\extensions\\IAccessControlEnumerable.sol:11",
        "inherit": [
          "@openzeppelin/contracts/access/IAccessControl.sol:IAccessControl"
        ],
        "libraries": [],
        "methods": [
          "getRoleMember(bytes32,uint256)",
          "getRoleMemberCount(bytes32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/IERC1363.sol:IERC1363": {
        "src": "@openzeppelin\\contracts\\interfaces\\IERC1363.sol:16",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "transferAndCall(address,uint256)",
          "transferAndCall(address,uint256,bytes)",
          "transferFromAndCall(address,address,uint256)",
          "transferFromAndCall(address,address,uint256,bytes)",
          "approveAndCall(address,uint256)",
          "approveAndCall(address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\utils\\SafeERC20.sol:19",
        "version": {
          "withMetadata": "4d5aa21551e02fafd7e8e0863ec3bfc2fcfe1250d5cec5955817896d6c5e05c4",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Address.sol:Address": {
        "src": "@openzeppelin\\contracts\\utils\\Address.sol:11",
        "version": {
          "withMetadata": "69a075d4917289a08ca838ba8291f9f039e47da5778b41c00c35bf1b1ec28419",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/Errors.sol:Errors"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:97"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Errors.sol:Errors": {
        "src": "@openzeppelin\\contracts\\utils\\Errors.sol:14",
        "version": {
          "withMetadata": "42072139bd52bf9a3af0fbefb19f69284420288655a62921f71240c9b7664073",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165": {
        "src": "@openzeppelin\\contracts\\utils\\introspection\\IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/structs/EnumerableSet.sol:EnumerableSet": {
        "src": "@openzeppelin\\contracts\\utils\\structs\\EnumerableSet.sol:41",
        "version": {
          "withMetadata": "13a150fcbfd403376bfbcaed0b0d1341ebbb76c82d86a507556b9c449888cf79",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UpgradeableHYAXRewards.sol:IHyaxToken": {
        "src": "contracts\\UpgradeableHYAXRewards.sol:19",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "symbol()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UpgradeableHYAXRewards.sol:UpgradeableHYAXRewards": {
        "src": "contracts\\UpgradeableHYAXRewards.sol:23",
        "version": {
          "withMetadata": "4b426ea873ea7dbf5c94504d6c583a68cdd0d7a2becb6c0f19a3a0a7cba967c9",
          "withoutMetadata": "2604c941a7c08e64fd9c2ea97c59130be8943a06433e88a90f016a090707e93d",
          "linkedWithoutMetadata": "2604c941a7c08e64fd9c2ea97c59130be8943a06433e88a90f016a090707e93d"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:PausableUpgradeable",
          "@openzeppelin/contracts-upgradeable/access/extensions/AccessControlEnumerableUpgradeable.sol:AccessControlEnumerableUpgradeable",
          "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:AccessControlUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:ERC165Upgradeable",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/access/extensions/IAccessControlEnumerable.sol:IAccessControlEnumerable",
          "@openzeppelin/contracts/access/IAccessControl.sol:IAccessControl",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "initialize(address)",
          "addWalletToWhitelist(address,bool,uint256)",
          "updateWhitelistStatus(address,bool)",
          "updateBlacklistStatus(address,bool)",
          "fundSmartContract(uint8,uint256)",
          "withdrawGrowthTokens()",
          "withdrawTeamTokens()",
          "calculateYearForTeamTokens()",
          "updateRewardsBatch(address[],uint256[])",
          "updateRewardsSingle(address,uint256)",
          "withdrawRewardTokens()",
          "withdrawTokensToBurn(uint8,uint256)",
          "updateTeamMemberWallet(address,address)",
          "updateWhiteListerAddress(address)",
          "updateRewardsUpdaterAddress(address)",
          "updateHyaxTokenAddress(address)",
          "updateMaximumBatchSizeForUpdateRewards(uint8)",
          "owner()",
          "pause()",
          "unpause()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "hyaxTokenAddress",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:151"
            },
            {
              "label": "hyaxToken",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IHyaxToken)2840",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:153"
            },
            {
              "label": "growthTokensFunded",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:171"
            },
            {
              "label": "growthTokensWithdrawn",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:173"
            },
            {
              "label": "growthTokensInSmartContract",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:175"
            },
            {
              "label": "growthTokensLastWithdrawalTime",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:177"
            },
            {
              "label": "growthTokensStartFundingTime",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:179"
            },
            {
              "label": "growthTokensFundingStarted",
              "offset": 0,
              "slot": "7",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:181"
            },
            {
              "label": "teamTokensFunded",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:192"
            },
            {
              "label": "teamTokensWithdrawn",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:194"
            },
            {
              "label": "teamTokensInSmartContract",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:196"
            },
            {
              "label": "teamTokensStartFundingTime",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:198"
            },
            {
              "label": "teamTokensFundingStarted",
              "offset": 0,
              "slot": "12",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:200"
            },
            {
              "label": "rewardTokensFunded",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:211"
            },
            {
              "label": "rewardTokensDistributed",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:213"
            },
            {
              "label": "rewardTokensWithdrawn",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:215"
            },
            {
              "label": "rewardTokensInSmartContract",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:217"
            },
            {
              "label": "rewardTokensStartFundingTime",
              "offset": 0,
              "slot": "17",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:219"
            },
            {
              "label": "rewardTokensFundingStarted",
              "offset": 0,
              "slot": "18",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:221"
            },
            {
              "label": "whiteListerAddress",
              "offset": 1,
              "slot": "18",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:226"
            },
            {
              "label": "rewardsUpdaterAddress",
              "offset": 0,
              "slot": "19",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:228"
            },
            {
              "label": "maximumBatchSizeForUpdateRewards",
              "offset": 20,
              "slot": "19",
              "type": "t_uint8",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:248"
            },
            {
              "label": "wallets",
              "offset": 0,
              "slot": "20",
              "type": "t_mapping(t_address,t_struct(WalletData)3115_storage)",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:250"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(AddressSet)1082_storage)": {
              "label": "mapping(bytes32 => struct EnumerableSet.AddressSet)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)24_storage)": {
              "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(AccessControlEnumerableStorage)175_storage": {
              "label": "struct AccessControlEnumerableUpgradeable.AccessControlEnumerableStorage",
              "members": [
                {
                  "label": "_roleMembers",
                  "type": "t_mapping(t_bytes32,t_struct(AddressSet)1082_storage)",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(AccessControlStorage)34_storage": {
              "label": "struct AccessControlUpgradeable.AccessControlStorage",
              "members": [
                {
                  "label": "_roles",
                  "type": "t_mapping(t_bytes32,t_struct(RoleData)24_storage)",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(AddressSet)1082_storage": {
              "label": "struct EnumerableSet.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)950_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(InitializableStorage)261_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(PausableStorage)353_storage": {
              "label": "struct PausableUpgradeable.PausableStorage",
              "members": [
                {
                  "label": "_paused",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(ReentrancyGuardStorage)424_storage": {
              "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
              "members": [
                {
                  "label": "_status",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(RoleData)24_storage": {
              "label": "struct AccessControlUpgradeable.RoleData",
              "members": [
                {
                  "label": "hasRole",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Set)950_storage": {
              "label": "struct EnumerableSet.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_positions",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            },
            "t_contract(IHyaxToken)2840": {
              "label": "contract IHyaxToken",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_struct(WalletData)3115_storage)": {
              "label": "mapping(address => struct UpgradeableHYAXRewards.WalletData)",
              "numberOfBytes": "32"
            },
            "t_struct(WalletData)3115_storage": {
              "label": "struct UpgradeableHYAXRewards.WalletData",
              "members": [
                {
                  "label": "hyaxHoldingAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "hyaxHoldingAmountAtWhitelistTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "totalHyaxRewardsAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "currentRewardsAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "rewardsWithdrawn",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "addedToWhitelistTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "teamTokenWithdrawalTimes",
                  "type": "t_uint8",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "lastRewardsWithdrawalTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "lastRewardsUpdateTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "isTeamWallet",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "isWhitelisted",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "9"
                },
                {
                  "label": "isBlacklisted",
                  "type": "t_bool",
                  "offset": 2,
                  "slot": "9"
                }
              ],
              "numberOfBytes": "320"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {
            "erc7201:openzeppelin.storage.ReentrancyGuard": [
              {
                "contract": "ReentrancyGuardUpgradeable",
                "label": "_status",
                "type": "t_uint256",
                "src": "@openzeppelin\\contracts-upgradeable\\utils\\ReentrancyGuardUpgradeable.sol:43",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Pausable": [
              {
                "contract": "PausableUpgradeable",
                "label": "_paused",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\utils\\PausableUpgradeable.sol:21",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.AccessControlEnumerable": [
              {
                "contract": "AccessControlEnumerableUpgradeable",
                "label": "_roleMembers",
                "type": "t_mapping(t_bytes32,t_struct(AddressSet)1082_storage)",
                "src": "@openzeppelin\\contracts-upgradeable\\access\\extensions\\AccessControlEnumerableUpgradeable.sol:19",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.AccessControl": [
              {
                "contract": "AccessControlUpgradeable",
                "label": "_roles",
                "type": "t_mapping(t_bytes32,t_struct(RoleData)24_storage)",
                "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:60",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      }
    },
    {
      "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:AccessControlUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:50",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:ERC165Upgradeable",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/access/IAccessControl.sol:IAccessControl",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)",
          "hasRole(bytes32,address)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)24_storage)": {
              "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
              "numberOfBytes": "32"
            },
            "t_struct(AccessControlStorage)34_storage": {
              "label": "struct AccessControlUpgradeable.AccessControlStorage",
              "members": [
                {
                  "label": "_roles",
                  "type": "t_mapping(t_bytes32,t_struct(RoleData)24_storage)",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(InitializableStorage)261_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(RoleData)24_storage": {
              "label": "struct AccessControlUpgradeable.RoleData",
              "members": [
                {
                  "label": "hasRole",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.AccessControl": [
              {
                "contract": "AccessControlUpgradeable",
                "label": "_roles",
                "type": "t_mapping(t_bytes32,t_struct(RoleData)24_storage)",
                "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:60",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/access/extensions/AccessControlEnumerableUpgradeable.sol:AccessControlEnumerableUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\access\\extensions\\AccessControlEnumerableUpgradeable.sol:14",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:AccessControlUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:ERC165Upgradeable",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/access/extensions/IAccessControlEnumerable.sol:IAccessControlEnumerable",
          "@openzeppelin/contracts/access/IAccessControl.sol:IAccessControl",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/structs/EnumerableSet.sol:EnumerableSet"
        ],
        "methods": [
          "supportsInterface(bytes4)",
          "getRoleMember(bytes32,uint256)",
          "getRoleMemberCount(bytes32)",
          "getRoleMembers(bytes32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(AddressSet)1082_storage)": {
              "label": "mapping(bytes32 => struct EnumerableSet.AddressSet)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)24_storage)": {
              "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(AccessControlEnumerableStorage)175_storage": {
              "label": "struct AccessControlEnumerableUpgradeable.AccessControlEnumerableStorage",
              "members": [
                {
                  "label": "_roleMembers",
                  "type": "t_mapping(t_bytes32,t_struct(AddressSet)1082_storage)",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(AccessControlStorage)34_storage": {
              "label": "struct AccessControlUpgradeable.AccessControlStorage",
              "members": [
                {
                  "label": "_roles",
                  "type": "t_mapping(t_bytes32,t_struct(RoleData)24_storage)",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(AddressSet)1082_storage": {
              "label": "struct EnumerableSet.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)950_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(InitializableStorage)261_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(RoleData)24_storage": {
              "label": "struct AccessControlUpgradeable.RoleData",
              "members": [
                {
                  "label": "hasRole",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Set)950_storage": {
              "label": "struct EnumerableSet.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_positions",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.AccessControlEnumerable": [
              {
                "contract": "AccessControlEnumerableUpgradeable",
                "label": "_roleMembers",
                "type": "t_mapping(t_bytes32,t_struct(AddressSet)1082_storage)",
                "src": "@openzeppelin\\contracts-upgradeable\\access\\extensions\\AccessControlEnumerableUpgradeable.sol:19",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.AccessControl": [
              {
                "contract": "AccessControlUpgradeable",
                "label": "_roles",
                "type": "t_mapping(t_bytes32,t_struct(RoleData)24_storage)",
                "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:60",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable": {
        "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:56",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)261_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:17",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)261_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:PausableUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\PausableUpgradeable.sol:18",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)261_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(PausableStorage)353_storage": {
              "label": "struct PausableUpgradeable.PausableStorage",
              "members": [
                {
                  "label": "_paused",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Pausable": [
              {
                "contract": "PausableUpgradeable",
                "label": "_paused",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\utils\\PausableUpgradeable.sol:21",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\ReentrancyGuardUpgradeable.sol:26",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)261_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(ReentrancyGuardStorage)424_storage": {
              "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
              "members": [
                {
                  "label": "_status",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.ReentrancyGuard": [
              {
                "contract": "ReentrancyGuardUpgradeable",
                "label": "_status",
                "type": "t_uint256",
                "src": "@openzeppelin\\contracts-upgradeable\\utils\\ReentrancyGuardUpgradeable.sol:43",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:ERC165Upgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:21",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)261_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/access/IAccessControl.sol:IAccessControl": {
        "src": "@openzeppelin\\contracts\\access\\IAccessControl.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "hasRole(bytes32,address)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/access/extensions/IAccessControlEnumerable.sol:IAccessControlEnumerable": {
        "src": "@openzeppelin\\contracts\\access\\extensions\\IAccessControlEnumerable.sol:11",
        "inherit": [
          "@openzeppelin/contracts/access/IAccessControl.sol:IAccessControl"
        ],
        "libraries": [],
        "methods": [
          "getRoleMember(bytes32,uint256)",
          "getRoleMemberCount(bytes32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/IERC1363.sol:IERC1363": {
        "src": "@openzeppelin\\contracts\\interfaces\\IERC1363.sol:16",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "transferAndCall(address,uint256)",
          "transferAndCall(address,uint256,bytes)",
          "transferFromAndCall(address,address,uint256)",
          "transferFromAndCall(address,address,uint256,bytes)",
          "approveAndCall(address,uint256)",
          "approveAndCall(address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\utils\\SafeERC20.sol:19",
        "version": {
          "withMetadata": "4d5aa21551e02fafd7e8e0863ec3bfc2fcfe1250d5cec5955817896d6c5e05c4",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Address.sol:Address": {
        "src": "@openzeppelin\\contracts\\utils\\Address.sol:11",
        "version": {
          "withMetadata": "69a075d4917289a08ca838ba8291f9f039e47da5778b41c00c35bf1b1ec28419",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/Errors.sol:Errors"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:97"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Errors.sol:Errors": {
        "src": "@openzeppelin\\contracts\\utils\\Errors.sol:14",
        "version": {
          "withMetadata": "42072139bd52bf9a3af0fbefb19f69284420288655a62921f71240c9b7664073",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165": {
        "src": "@openzeppelin\\contracts\\utils\\introspection\\IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/structs/EnumerableSet.sol:EnumerableSet": {
        "src": "@openzeppelin\\contracts\\utils\\structs\\EnumerableSet.sol:41",
        "version": {
          "withMetadata": "13a150fcbfd403376bfbcaed0b0d1341ebbb76c82d86a507556b9c449888cf79",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UpgradeableHYAXRewards.sol:IHyaxToken": {
        "src": "contracts\\UpgradeableHYAXRewards.sol:19",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "symbol()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UpgradeableHYAXRewards.sol:UpgradeableHYAXRewards": {
        "src": "contracts\\UpgradeableHYAXRewards.sol:23",
        "version": {
          "withMetadata": "ee2895c6d7cd5500a958644e8ee407675ed5a884d1c4d2804a483ea787686c83",
          "withoutMetadata": "2604c941a7c08e64fd9c2ea97c59130be8943a06433e88a90f016a090707e93d",
          "linkedWithoutMetadata": "2604c941a7c08e64fd9c2ea97c59130be8943a06433e88a90f016a090707e93d"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:PausableUpgradeable",
          "@openzeppelin/contracts-upgradeable/access/extensions/AccessControlEnumerableUpgradeable.sol:AccessControlEnumerableUpgradeable",
          "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:AccessControlUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:ERC165Upgradeable",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/access/extensions/IAccessControlEnumerable.sol:IAccessControlEnumerable",
          "@openzeppelin/contracts/access/IAccessControl.sol:IAccessControl",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "initialize(address)",
          "addWalletToWhitelist(address,bool,uint256)",
          "updateWhitelistStatus(address,bool)",
          "updateBlacklistStatus(address,bool)",
          "fundSmartContract(uint8,uint256)",
          "withdrawGrowthTokens()",
          "withdrawTeamTokens()",
          "calculateYearForTeamTokens()",
          "updateRewardsBatch(address[],uint256[])",
          "updateRewardsSingle(address,uint256)",
          "withdrawRewardTokens()",
          "withdrawTokensToBurn(uint8,uint256)",
          "updateTeamMemberWallet(address,address)",
          "updateWhiteListerAddress(address)",
          "updateRewardsUpdaterAddress(address)",
          "updateHyaxTokenAddress(address)",
          "updateMaximumBatchSizeForUpdateRewards(uint8)",
          "owner()",
          "pause()",
          "unpause()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "hyaxTokenAddress",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:151"
            },
            {
              "label": "hyaxToken",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IHyaxToken)2840",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:153"
            },
            {
              "label": "growthTokensFunded",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:171"
            },
            {
              "label": "growthTokensWithdrawn",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:173"
            },
            {
              "label": "growthTokensInSmartContract",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:175"
            },
            {
              "label": "growthTokensLastWithdrawalTime",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:177"
            },
            {
              "label": "growthTokensStartFundingTime",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:179"
            },
            {
              "label": "growthTokensFundingStarted",
              "offset": 0,
              "slot": "7",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:181"
            },
            {
              "label": "teamTokensFunded",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:192"
            },
            {
              "label": "teamTokensWithdrawn",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:194"
            },
            {
              "label": "teamTokensInSmartContract",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:196"
            },
            {
              "label": "teamTokensStartFundingTime",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:198"
            },
            {
              "label": "teamTokensFundingStarted",
              "offset": 0,
              "slot": "12",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:200"
            },
            {
              "label": "rewardTokensFunded",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:211"
            },
            {
              "label": "rewardTokensDistributed",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:213"
            },
            {
              "label": "rewardTokensWithdrawn",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:215"
            },
            {
              "label": "rewardTokensInSmartContract",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:217"
            },
            {
              "label": "rewardTokensStartFundingTime",
              "offset": 0,
              "slot": "17",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:219"
            },
            {
              "label": "rewardTokensFundingStarted",
              "offset": 0,
              "slot": "18",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:221"
            },
            {
              "label": "whiteListerAddress",
              "offset": 1,
              "slot": "18",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:226"
            },
            {
              "label": "rewardsUpdaterAddress",
              "offset": 0,
              "slot": "19",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:228"
            },
            {
              "label": "maximumBatchSizeForUpdateRewards",
              "offset": 20,
              "slot": "19",
              "type": "t_uint8",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:248"
            },
            {
              "label": "wallets",
              "offset": 0,
              "slot": "20",
              "type": "t_mapping(t_address,t_struct(WalletData)3115_storage)",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:250"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(AddressSet)1082_storage)": {
              "label": "mapping(bytes32 => struct EnumerableSet.AddressSet)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)24_storage)": {
              "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(AccessControlEnumerableStorage)175_storage": {
              "label": "struct AccessControlEnumerableUpgradeable.AccessControlEnumerableStorage",
              "members": [
                {
                  "label": "_roleMembers",
                  "type": "t_mapping(t_bytes32,t_struct(AddressSet)1082_storage)",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(AccessControlStorage)34_storage": {
              "label": "struct AccessControlUpgradeable.AccessControlStorage",
              "members": [
                {
                  "label": "_roles",
                  "type": "t_mapping(t_bytes32,t_struct(RoleData)24_storage)",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(AddressSet)1082_storage": {
              "label": "struct EnumerableSet.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)950_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(InitializableStorage)261_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(PausableStorage)353_storage": {
              "label": "struct PausableUpgradeable.PausableStorage",
              "members": [
                {
                  "label": "_paused",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(ReentrancyGuardStorage)424_storage": {
              "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
              "members": [
                {
                  "label": "_status",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(RoleData)24_storage": {
              "label": "struct AccessControlUpgradeable.RoleData",
              "members": [
                {
                  "label": "hasRole",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Set)950_storage": {
              "label": "struct EnumerableSet.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_positions",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            },
            "t_contract(IHyaxToken)2840": {
              "label": "contract IHyaxToken",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_struct(WalletData)3115_storage)": {
              "label": "mapping(address => struct UpgradeableHYAXRewards.WalletData)",
              "numberOfBytes": "32"
            },
            "t_struct(WalletData)3115_storage": {
              "label": "struct UpgradeableHYAXRewards.WalletData",
              "members": [
                {
                  "label": "hyaxHoldingAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "hyaxHoldingAmountAtWhitelistTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "totalHyaxRewardsAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "currentRewardsAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "rewardsWithdrawn",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "addedToWhitelistTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "teamTokenWithdrawalTimes",
                  "type": "t_uint8",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "lastRewardsWithdrawalTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "lastRewardsUpdateTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "isTeamWallet",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "isWhitelisted",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "9"
                },
                {
                  "label": "isBlacklisted",
                  "type": "t_bool",
                  "offset": 2,
                  "slot": "9"
                }
              ],
              "numberOfBytes": "320"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {
            "erc7201:openzeppelin.storage.ReentrancyGuard": [
              {
                "contract": "ReentrancyGuardUpgradeable",
                "label": "_status",
                "type": "t_uint256",
                "src": "@openzeppelin\\contracts-upgradeable\\utils\\ReentrancyGuardUpgradeable.sol:43",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Pausable": [
              {
                "contract": "PausableUpgradeable",
                "label": "_paused",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\utils\\PausableUpgradeable.sol:21",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.AccessControlEnumerable": [
              {
                "contract": "AccessControlEnumerableUpgradeable",
                "label": "_roleMembers",
                "type": "t_mapping(t_bytes32,t_struct(AddressSet)1082_storage)",
                "src": "@openzeppelin\\contracts-upgradeable\\access\\extensions\\AccessControlEnumerableUpgradeable.sol:19",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.AccessControl": [
              {
                "contract": "AccessControlUpgradeable",
                "label": "_roles",
                "type": "t_mapping(t_bytes32,t_struct(RoleData)24_storage)",
                "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:60",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      }
    },
    {
      "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:AccessControlUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:50",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:ERC165Upgradeable",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/access/IAccessControl.sol:IAccessControl",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)",
          "hasRole(bytes32,address)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)24_storage)": {
              "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
              "numberOfBytes": "32"
            },
            "t_struct(AccessControlStorage)34_storage": {
              "label": "struct AccessControlUpgradeable.AccessControlStorage",
              "members": [
                {
                  "label": "_roles",
                  "type": "t_mapping(t_bytes32,t_struct(RoleData)24_storage)",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(InitializableStorage)261_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(RoleData)24_storage": {
              "label": "struct AccessControlUpgradeable.RoleData",
              "members": [
                {
                  "label": "hasRole",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.AccessControl": [
              {
                "contract": "AccessControlUpgradeable",
                "label": "_roles",
                "type": "t_mapping(t_bytes32,t_struct(RoleData)24_storage)",
                "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:60",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/access/extensions/AccessControlEnumerableUpgradeable.sol:AccessControlEnumerableUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\access\\extensions\\AccessControlEnumerableUpgradeable.sol:14",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:AccessControlUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:ERC165Upgradeable",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/access/extensions/IAccessControlEnumerable.sol:IAccessControlEnumerable",
          "@openzeppelin/contracts/access/IAccessControl.sol:IAccessControl",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/structs/EnumerableSet.sol:EnumerableSet"
        ],
        "methods": [
          "supportsInterface(bytes4)",
          "getRoleMember(bytes32,uint256)",
          "getRoleMemberCount(bytes32)",
          "getRoleMembers(bytes32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(AddressSet)1082_storage)": {
              "label": "mapping(bytes32 => struct EnumerableSet.AddressSet)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)24_storage)": {
              "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(AccessControlEnumerableStorage)175_storage": {
              "label": "struct AccessControlEnumerableUpgradeable.AccessControlEnumerableStorage",
              "members": [
                {
                  "label": "_roleMembers",
                  "type": "t_mapping(t_bytes32,t_struct(AddressSet)1082_storage)",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(AccessControlStorage)34_storage": {
              "label": "struct AccessControlUpgradeable.AccessControlStorage",
              "members": [
                {
                  "label": "_roles",
                  "type": "t_mapping(t_bytes32,t_struct(RoleData)24_storage)",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(AddressSet)1082_storage": {
              "label": "struct EnumerableSet.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)950_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(InitializableStorage)261_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(RoleData)24_storage": {
              "label": "struct AccessControlUpgradeable.RoleData",
              "members": [
                {
                  "label": "hasRole",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Set)950_storage": {
              "label": "struct EnumerableSet.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_positions",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.AccessControlEnumerable": [
              {
                "contract": "AccessControlEnumerableUpgradeable",
                "label": "_roleMembers",
                "type": "t_mapping(t_bytes32,t_struct(AddressSet)1082_storage)",
                "src": "@openzeppelin\\contracts-upgradeable\\access\\extensions\\AccessControlEnumerableUpgradeable.sol:19",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.AccessControl": [
              {
                "contract": "AccessControlUpgradeable",
                "label": "_roles",
                "type": "t_mapping(t_bytes32,t_struct(RoleData)24_storage)",
                "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:60",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable": {
        "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:56",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)261_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:17",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)261_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:PausableUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\PausableUpgradeable.sol:18",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)261_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(PausableStorage)353_storage": {
              "label": "struct PausableUpgradeable.PausableStorage",
              "members": [
                {
                  "label": "_paused",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Pausable": [
              {
                "contract": "PausableUpgradeable",
                "label": "_paused",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\utils\\PausableUpgradeable.sol:21",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\ReentrancyGuardUpgradeable.sol:26",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)261_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(ReentrancyGuardStorage)424_storage": {
              "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
              "members": [
                {
                  "label": "_status",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.ReentrancyGuard": [
              {
                "contract": "ReentrancyGuardUpgradeable",
                "label": "_status",
                "type": "t_uint256",
                "src": "@openzeppelin\\contracts-upgradeable\\utils\\ReentrancyGuardUpgradeable.sol:43",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:ERC165Upgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:21",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)261_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/access/IAccessControl.sol:IAccessControl": {
        "src": "@openzeppelin\\contracts\\access\\IAccessControl.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "hasRole(bytes32,address)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/access/extensions/IAccessControlEnumerable.sol:IAccessControlEnumerable": {
        "src": "@openzeppelin\\contracts\\access\\extensions\\IAccessControlEnumerable.sol:11",
        "inherit": [
          "@openzeppelin/contracts/access/IAccessControl.sol:IAccessControl"
        ],
        "libraries": [],
        "methods": [
          "getRoleMember(bytes32,uint256)",
          "getRoleMemberCount(bytes32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/IERC1363.sol:IERC1363": {
        "src": "@openzeppelin\\contracts\\interfaces\\IERC1363.sol:16",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "transferAndCall(address,uint256)",
          "transferAndCall(address,uint256,bytes)",
          "transferFromAndCall(address,address,uint256)",
          "transferFromAndCall(address,address,uint256,bytes)",
          "approveAndCall(address,uint256)",
          "approveAndCall(address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\utils\\SafeERC20.sol:19",
        "version": {
          "withMetadata": "4d5aa21551e02fafd7e8e0863ec3bfc2fcfe1250d5cec5955817896d6c5e05c4",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Address.sol:Address": {
        "src": "@openzeppelin\\contracts\\utils\\Address.sol:11",
        "version": {
          "withMetadata": "69a075d4917289a08ca838ba8291f9f039e47da5778b41c00c35bf1b1ec28419",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/Errors.sol:Errors"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:97"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Errors.sol:Errors": {
        "src": "@openzeppelin\\contracts\\utils\\Errors.sol:14",
        "version": {
          "withMetadata": "42072139bd52bf9a3af0fbefb19f69284420288655a62921f71240c9b7664073",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165": {
        "src": "@openzeppelin\\contracts\\utils\\introspection\\IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/structs/EnumerableSet.sol:EnumerableSet": {
        "src": "@openzeppelin\\contracts\\utils\\structs\\EnumerableSet.sol:41",
        "version": {
          "withMetadata": "13a150fcbfd403376bfbcaed0b0d1341ebbb76c82d86a507556b9c449888cf79",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UpgradeableHYAXRewards.sol:IHyaxToken": {
        "src": "contracts\\UpgradeableHYAXRewards.sol:19",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "symbol()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UpgradeableHYAXRewards.sol:UpgradeableHYAXRewards": {
        "src": "contracts\\UpgradeableHYAXRewards.sol:23",
        "version": {
          "withMetadata": "561fb1e35c6b4b5df0ed33ff61f9a3cf67e21cf489980c5bb9144a88ebaa8aa0",
          "withoutMetadata": "2604c941a7c08e64fd9c2ea97c59130be8943a06433e88a90f016a090707e93d",
          "linkedWithoutMetadata": "2604c941a7c08e64fd9c2ea97c59130be8943a06433e88a90f016a090707e93d"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:PausableUpgradeable",
          "@openzeppelin/contracts-upgradeable/access/extensions/AccessControlEnumerableUpgradeable.sol:AccessControlEnumerableUpgradeable",
          "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:AccessControlUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:ERC165Upgradeable",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/access/extensions/IAccessControlEnumerable.sol:IAccessControlEnumerable",
          "@openzeppelin/contracts/access/IAccessControl.sol:IAccessControl",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "initialize(address)",
          "addWalletToWhitelist(address,bool,uint256)",
          "updateWhitelistStatus(address,bool)",
          "updateBlacklistStatus(address,bool)",
          "fundSmartContract(uint8,uint256)",
          "withdrawGrowthTokens()",
          "withdrawTeamTokens()",
          "calculateYearForTeamTokens()",
          "updateRewardsBatch(address[],uint256[])",
          "updateRewardsSingle(address,uint256)",
          "withdrawRewardTokens()",
          "withdrawTokensToBurn(uint8,uint256)",
          "updateTeamMemberWallet(address,address)",
          "updateWhiteListerAddress(address)",
          "updateRewardsUpdaterAddress(address)",
          "updateHyaxTokenAddress(address)",
          "updateMaximumBatchSizeForUpdateRewards(uint8)",
          "owner()",
          "pause()",
          "unpause()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "hyaxTokenAddress",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:151"
            },
            {
              "label": "hyaxToken",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IHyaxToken)2840",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:153"
            },
            {
              "label": "growthTokensFunded",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:171"
            },
            {
              "label": "growthTokensWithdrawn",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:173"
            },
            {
              "label": "growthTokensInSmartContract",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:175"
            },
            {
              "label": "growthTokensLastWithdrawalTime",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:177"
            },
            {
              "label": "growthTokensStartFundingTime",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:179"
            },
            {
              "label": "growthTokensFundingStarted",
              "offset": 0,
              "slot": "7",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:181"
            },
            {
              "label": "teamTokensFunded",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:192"
            },
            {
              "label": "teamTokensWithdrawn",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:194"
            },
            {
              "label": "teamTokensInSmartContract",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:196"
            },
            {
              "label": "teamTokensStartFundingTime",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:198"
            },
            {
              "label": "teamTokensFundingStarted",
              "offset": 0,
              "slot": "12",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:200"
            },
            {
              "label": "rewardTokensFunded",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:211"
            },
            {
              "label": "rewardTokensDistributed",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:213"
            },
            {
              "label": "rewardTokensWithdrawn",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:215"
            },
            {
              "label": "rewardTokensInSmartContract",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:217"
            },
            {
              "label": "rewardTokensStartFundingTime",
              "offset": 0,
              "slot": "17",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:219"
            },
            {
              "label": "rewardTokensFundingStarted",
              "offset": 0,
              "slot": "18",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:221"
            },
            {
              "label": "whiteListerAddress",
              "offset": 1,
              "slot": "18",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:226"
            },
            {
              "label": "rewardsUpdaterAddress",
              "offset": 0,
              "slot": "19",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:228"
            },
            {
              "label": "maximumBatchSizeForUpdateRewards",
              "offset": 20,
              "slot": "19",
              "type": "t_uint8",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:248"
            },
            {
              "label": "wallets",
              "offset": 0,
              "slot": "20",
              "type": "t_mapping(t_address,t_struct(WalletData)3115_storage)",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:250"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(AddressSet)1082_storage)": {
              "label": "mapping(bytes32 => struct EnumerableSet.AddressSet)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)24_storage)": {
              "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(AccessControlEnumerableStorage)175_storage": {
              "label": "struct AccessControlEnumerableUpgradeable.AccessControlEnumerableStorage",
              "members": [
                {
                  "label": "_roleMembers",
                  "type": "t_mapping(t_bytes32,t_struct(AddressSet)1082_storage)",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(AccessControlStorage)34_storage": {
              "label": "struct AccessControlUpgradeable.AccessControlStorage",
              "members": [
                {
                  "label": "_roles",
                  "type": "t_mapping(t_bytes32,t_struct(RoleData)24_storage)",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(AddressSet)1082_storage": {
              "label": "struct EnumerableSet.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)950_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(InitializableStorage)261_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(PausableStorage)353_storage": {
              "label": "struct PausableUpgradeable.PausableStorage",
              "members": [
                {
                  "label": "_paused",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(ReentrancyGuardStorage)424_storage": {
              "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
              "members": [
                {
                  "label": "_status",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(RoleData)24_storage": {
              "label": "struct AccessControlUpgradeable.RoleData",
              "members": [
                {
                  "label": "hasRole",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Set)950_storage": {
              "label": "struct EnumerableSet.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_positions",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            },
            "t_contract(IHyaxToken)2840": {
              "label": "contract IHyaxToken",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_struct(WalletData)3115_storage)": {
              "label": "mapping(address => struct UpgradeableHYAXRewards.WalletData)",
              "numberOfBytes": "32"
            },
            "t_struct(WalletData)3115_storage": {
              "label": "struct UpgradeableHYAXRewards.WalletData",
              "members": [
                {
                  "label": "hyaxHoldingAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "hyaxHoldingAmountAtWhitelistTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "totalHyaxRewardsAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "currentRewardsAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "rewardsWithdrawn",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "addedToWhitelistTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "teamTokenWithdrawalTimes",
                  "type": "t_uint8",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "lastRewardsWithdrawalTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "lastRewardsUpdateTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "isTeamWallet",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "isWhitelisted",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "9"
                },
                {
                  "label": "isBlacklisted",
                  "type": "t_bool",
                  "offset": 2,
                  "slot": "9"
                }
              ],
              "numberOfBytes": "320"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {
            "erc7201:openzeppelin.storage.ReentrancyGuard": [
              {
                "contract": "ReentrancyGuardUpgradeable",
                "label": "_status",
                "type": "t_uint256",
                "src": "@openzeppelin\\contracts-upgradeable\\utils\\ReentrancyGuardUpgradeable.sol:43",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Pausable": [
              {
                "contract": "PausableUpgradeable",
                "label": "_paused",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\utils\\PausableUpgradeable.sol:21",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.AccessControlEnumerable": [
              {
                "contract": "AccessControlEnumerableUpgradeable",
                "label": "_roleMembers",
                "type": "t_mapping(t_bytes32,t_struct(AddressSet)1082_storage)",
                "src": "@openzeppelin\\contracts-upgradeable\\access\\extensions\\AccessControlEnumerableUpgradeable.sol:19",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.AccessControl": [
              {
                "contract": "AccessControlUpgradeable",
                "label": "_roles",
                "type": "t_mapping(t_bytes32,t_struct(RoleData)24_storage)",
                "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:60",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      }
    },
    {
      "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:AccessControlUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:50",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:ERC165Upgradeable",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/access/IAccessControl.sol:IAccessControl",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)",
          "hasRole(bytes32,address)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)24_storage)": {
              "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
              "numberOfBytes": "32"
            },
            "t_struct(AccessControlStorage)34_storage": {
              "label": "struct AccessControlUpgradeable.AccessControlStorage",
              "members": [
                {
                  "label": "_roles",
                  "type": "t_mapping(t_bytes32,t_struct(RoleData)24_storage)",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(InitializableStorage)231_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(RoleData)24_storage": {
              "label": "struct AccessControlUpgradeable.RoleData",
              "members": [
                {
                  "label": "hasRole",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.AccessControl": [
              {
                "contract": "AccessControlUpgradeable",
                "label": "_roles",
                "type": "t_mapping(t_bytes32,t_struct(RoleData)24_storage)",
                "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:60",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)231_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(OwnableStorage)164_storage": {
              "label": "struct OwnableUpgradeable.OwnableStorage",
              "members": [
                {
                  "label": "_owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Ownable": [
              {
                "contract": "OwnableUpgradeable",
                "label": "_owner",
                "type": "t_address",
                "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:24",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable": {
        "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:56",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)231_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:17",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)231_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:PausableUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\PausableUpgradeable.sol:18",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)231_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(PausableStorage)323_storage": {
              "label": "struct PausableUpgradeable.PausableStorage",
              "members": [
                {
                  "label": "_paused",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Pausable": [
              {
                "contract": "PausableUpgradeable",
                "label": "_paused",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\utils\\PausableUpgradeable.sol:21",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\ReentrancyGuardUpgradeable.sol:26",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)231_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(ReentrancyGuardStorage)394_storage": {
              "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
              "members": [
                {
                  "label": "_status",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.ReentrancyGuard": [
              {
                "contract": "ReentrancyGuardUpgradeable",
                "label": "_status",
                "type": "t_uint256",
                "src": "@openzeppelin\\contracts-upgradeable\\utils\\ReentrancyGuardUpgradeable.sol:43",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:ERC165Upgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:21",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)231_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/access/IAccessControl.sol:IAccessControl": {
        "src": "@openzeppelin\\contracts\\access\\IAccessControl.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "hasRole(bytes32,address)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/IERC1363.sol:IERC1363": {
        "src": "@openzeppelin\\contracts\\interfaces\\IERC1363.sol:16",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "transferAndCall(address,uint256)",
          "transferAndCall(address,uint256,bytes)",
          "transferFromAndCall(address,address,uint256)",
          "transferFromAndCall(address,address,uint256,bytes)",
          "approveAndCall(address,uint256)",
          "approveAndCall(address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\utils\\SafeERC20.sol:19",
        "version": {
          "withMetadata": "4d5aa21551e02fafd7e8e0863ec3bfc2fcfe1250d5cec5955817896d6c5e05c4",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Address.sol:Address": {
        "src": "@openzeppelin\\contracts\\utils\\Address.sol:11",
        "version": {
          "withMetadata": "69a075d4917289a08ca838ba8291f9f039e47da5778b41c00c35bf1b1ec28419",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/Errors.sol:Errors"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:97"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Errors.sol:Errors": {
        "src": "@openzeppelin\\contracts\\utils\\Errors.sol:14",
        "version": {
          "withMetadata": "42072139bd52bf9a3af0fbefb19f69284420288655a62921f71240c9b7664073",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165": {
        "src": "@openzeppelin\\contracts\\utils\\introspection\\IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UpgradeableHYAXRewards.sol:IHyaxToken": {
        "src": "contracts\\UpgradeableHYAXRewards.sol:19",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "symbol()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UpgradeableHYAXRewards.sol:UpgradeableHYAXRewards": {
        "src": "contracts\\UpgradeableHYAXRewards.sol:23",
        "version": {
          "withMetadata": "adc240eef44d3c8471d59c03f33bbcef830bf79e2fa814a3e134aa6429c34289",
          "withoutMetadata": "61e7e4227150928cbc21481a654d47736f32fab0b2971dbfb09607add5ec44d1",
          "linkedWithoutMetadata": "61e7e4227150928cbc21481a654d47736f32fab0b2971dbfb09607add5ec44d1"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:PausableUpgradeable",
          "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:AccessControlUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:ERC165Upgradeable",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/access/IAccessControl.sol:IAccessControl",
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "initialize(address)",
          "addWalletToWhitelist(address,bool,uint256)",
          "updateWhitelistStatus(address,bool)",
          "updateBlacklistStatus(address,bool)",
          "fundSmartContract(uint8,uint256)",
          "withdrawGrowthTokens()",
          "withdrawTeamTokens()",
          "calculateYearForTeamTokens()",
          "updateRewardsBatch(address[],uint256[])",
          "updateRewardsSingle(address,uint256)",
          "withdrawRewardTokens()",
          "withdrawTokensToBurn(uint8,uint256)",
          "updateTeamMemberWallet(address,address)",
          "updateWhiteListerAddress(address)",
          "updateRewardsUpdaterAddress(address)",
          "updateHyaxTokenAddress(address)",
          "updateMaximumBatchSizeForUpdateRewards(uint8)",
          "pause()",
          "unpause()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "hyaxTokenAddress",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:151"
            },
            {
              "label": "hyaxToken",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IHyaxToken)2173",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:153"
            },
            {
              "label": "growthTokensFunded",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:171"
            },
            {
              "label": "growthTokensWithdrawn",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:173"
            },
            {
              "label": "growthTokensInSmartContract",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:175"
            },
            {
              "label": "growthTokensLastWithdrawalTime",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:177"
            },
            {
              "label": "growthTokensStartFundingTime",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:179"
            },
            {
              "label": "growthTokensFundingStarted",
              "offset": 0,
              "slot": "7",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:181"
            },
            {
              "label": "teamTokensFunded",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:192"
            },
            {
              "label": "teamTokensWithdrawn",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:194"
            },
            {
              "label": "teamTokensInSmartContract",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:196"
            },
            {
              "label": "teamTokensStartFundingTime",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:198"
            },
            {
              "label": "teamTokensFundingStarted",
              "offset": 0,
              "slot": "12",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:200"
            },
            {
              "label": "rewardTokensFunded",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:211"
            },
            {
              "label": "rewardTokensDistributed",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:213"
            },
            {
              "label": "rewardTokensWithdrawn",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:215"
            },
            {
              "label": "rewardTokensInSmartContract",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:217"
            },
            {
              "label": "rewardTokensStartFundingTime",
              "offset": 0,
              "slot": "17",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:219"
            },
            {
              "label": "rewardTokensFundingStarted",
              "offset": 0,
              "slot": "18",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:221"
            },
            {
              "label": "whiteListerAddress",
              "offset": 1,
              "slot": "18",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:226"
            },
            {
              "label": "rewardsUpdaterAddress",
              "offset": 0,
              "slot": "19",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:228"
            },
            {
              "label": "maximumBatchSizeForUpdateRewards",
              "offset": 20,
              "slot": "19",
              "type": "t_uint8",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:248"
            },
            {
              "label": "wallets",
              "offset": 0,
              "slot": "20",
              "type": "t_mapping(t_address,t_struct(WalletData)2450_storage)",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:250"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)24_storage)": {
              "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
              "numberOfBytes": "32"
            },
            "t_struct(AccessControlStorage)34_storage": {
              "label": "struct AccessControlUpgradeable.AccessControlStorage",
              "members": [
                {
                  "label": "_roles",
                  "type": "t_mapping(t_bytes32,t_struct(RoleData)24_storage)",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(InitializableStorage)231_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(OwnableStorage)164_storage": {
              "label": "struct OwnableUpgradeable.OwnableStorage",
              "members": [
                {
                  "label": "_owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(PausableStorage)323_storage": {
              "label": "struct PausableUpgradeable.PausableStorage",
              "members": [
                {
                  "label": "_paused",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(ReentrancyGuardStorage)394_storage": {
              "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
              "members": [
                {
                  "label": "_status",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(RoleData)24_storage": {
              "label": "struct AccessControlUpgradeable.RoleData",
              "members": [
                {
                  "label": "hasRole",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            },
            "t_contract(IHyaxToken)2173": {
              "label": "contract IHyaxToken",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_struct(WalletData)2450_storage)": {
              "label": "mapping(address => struct UpgradeableHYAXRewards.WalletData)",
              "numberOfBytes": "32"
            },
            "t_struct(WalletData)2450_storage": {
              "label": "struct UpgradeableHYAXRewards.WalletData",
              "members": [
                {
                  "label": "hyaxHoldingAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "hyaxHoldingAmountAtWhitelistTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "totalHyaxRewardsAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "currentRewardsAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "rewardsWithdrawn",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "addedToWhitelistTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "teamTokenWithdrawalTimes",
                  "type": "t_uint8",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "lastRewardsWithdrawalTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "lastRewardsUpdateTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "isTeamWallet",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "isWhitelisted",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "9"
                },
                {
                  "label": "isBlacklisted",
                  "type": "t_bool",
                  "offset": 2,
                  "slot": "9"
                }
              ],
              "numberOfBytes": "320"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {
            "erc7201:openzeppelin.storage.ReentrancyGuard": [
              {
                "contract": "ReentrancyGuardUpgradeable",
                "label": "_status",
                "type": "t_uint256",
                "src": "@openzeppelin\\contracts-upgradeable\\utils\\ReentrancyGuardUpgradeable.sol:43",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Pausable": [
              {
                "contract": "PausableUpgradeable",
                "label": "_paused",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\utils\\PausableUpgradeable.sol:21",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.AccessControl": [
              {
                "contract": "AccessControlUpgradeable",
                "label": "_roles",
                "type": "t_mapping(t_bytes32,t_struct(RoleData)24_storage)",
                "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:60",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Ownable": [
              {
                "contract": "OwnableUpgradeable",
                "label": "_owner",
                "type": "t_address",
                "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:24",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      }
    },
    {
      "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:AccessControlUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:50",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:ERC165Upgradeable",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/access/IAccessControl.sol:IAccessControl",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)",
          "hasRole(bytes32,address)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)24_storage)": {
              "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
              "numberOfBytes": "32"
            },
            "t_struct(AccessControlStorage)34_storage": {
              "label": "struct AccessControlUpgradeable.AccessControlStorage",
              "members": [
                {
                  "label": "_roles",
                  "type": "t_mapping(t_bytes32,t_struct(RoleData)24_storage)",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(InitializableStorage)231_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(RoleData)24_storage": {
              "label": "struct AccessControlUpgradeable.RoleData",
              "members": [
                {
                  "label": "hasRole",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.AccessControl": [
              {
                "contract": "AccessControlUpgradeable",
                "label": "_roles",
                "type": "t_mapping(t_bytes32,t_struct(RoleData)24_storage)",
                "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:60",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)231_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(OwnableStorage)164_storage": {
              "label": "struct OwnableUpgradeable.OwnableStorage",
              "members": [
                {
                  "label": "_owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Ownable": [
              {
                "contract": "OwnableUpgradeable",
                "label": "_owner",
                "type": "t_address",
                "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:24",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable": {
        "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:56",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)231_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:17",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)231_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:PausableUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\PausableUpgradeable.sol:18",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)231_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(PausableStorage)323_storage": {
              "label": "struct PausableUpgradeable.PausableStorage",
              "members": [
                {
                  "label": "_paused",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Pausable": [
              {
                "contract": "PausableUpgradeable",
                "label": "_paused",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\utils\\PausableUpgradeable.sol:21",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\ReentrancyGuardUpgradeable.sol:26",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)231_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(ReentrancyGuardStorage)394_storage": {
              "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
              "members": [
                {
                  "label": "_status",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.ReentrancyGuard": [
              {
                "contract": "ReentrancyGuardUpgradeable",
                "label": "_status",
                "type": "t_uint256",
                "src": "@openzeppelin\\contracts-upgradeable\\utils\\ReentrancyGuardUpgradeable.sol:43",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:ERC165Upgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:21",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)231_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/access/IAccessControl.sol:IAccessControl": {
        "src": "@openzeppelin\\contracts\\access\\IAccessControl.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "hasRole(bytes32,address)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/IERC1363.sol:IERC1363": {
        "src": "@openzeppelin\\contracts\\interfaces\\IERC1363.sol:16",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "transferAndCall(address,uint256)",
          "transferAndCall(address,uint256,bytes)",
          "transferFromAndCall(address,address,uint256)",
          "transferFromAndCall(address,address,uint256,bytes)",
          "approveAndCall(address,uint256)",
          "approveAndCall(address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\utils\\SafeERC20.sol:19",
        "version": {
          "withMetadata": "4d5aa21551e02fafd7e8e0863ec3bfc2fcfe1250d5cec5955817896d6c5e05c4",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Address.sol:Address": {
        "src": "@openzeppelin\\contracts\\utils\\Address.sol:11",
        "version": {
          "withMetadata": "69a075d4917289a08ca838ba8291f9f039e47da5778b41c00c35bf1b1ec28419",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/Errors.sol:Errors"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:97"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Errors.sol:Errors": {
        "src": "@openzeppelin\\contracts\\utils\\Errors.sol:14",
        "version": {
          "withMetadata": "42072139bd52bf9a3af0fbefb19f69284420288655a62921f71240c9b7664073",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165": {
        "src": "@openzeppelin\\contracts\\utils\\introspection\\IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UpgradeableHYAXRewards.sol:IHyaxToken": {
        "src": "contracts\\UpgradeableHYAXRewards.sol:19",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "symbol()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UpgradeableHYAXRewards.sol:UpgradeableHYAXRewards": {
        "src": "contracts\\UpgradeableHYAXRewards.sol:23",
        "version": {
          "withMetadata": "307cd17d1e360c85f938e0680b4e852323c277cc7583954bd4ca753eea59f885",
          "withoutMetadata": "72bda9c759902c1a8750e4a9444db30b945b83c557904ca90c09c5dd9c37a1fa",
          "linkedWithoutMetadata": "72bda9c759902c1a8750e4a9444db30b945b83c557904ca90c09c5dd9c37a1fa"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:PausableUpgradeable",
          "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:AccessControlUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:ERC165Upgradeable",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/access/IAccessControl.sol:IAccessControl",
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "initialize(address)",
          "addWalletToWhitelist(address,bool,uint256)",
          "updateWhitelistStatus(address,bool)",
          "updateBlacklistStatus(address,bool)",
          "fundSmartContract(uint8,uint256)",
          "withdrawGrowthTokens()",
          "withdrawTeamTokens()",
          "calculateYearForTeamTokens()",
          "updateRewardsBatch(address[],uint256[])",
          "updateRewardsSingle(address,uint256)",
          "withdrawRewardTokens()",
          "withdrawTokensToBurn(uint8,uint256)",
          "updateTeamMemberWallet(address,address)",
          "updateWhiteListerAddress(address)",
          "updateRewardsUpdaterAddress(address)",
          "updateHyaxTokenAddress(address)",
          "updateMaximumBatchSizeForUpdateRewards(uint8)",
          "pause()",
          "unpause()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "hyaxTokenAddress",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:151"
            },
            {
              "label": "hyaxToken",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IHyaxToken)2173",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:153"
            },
            {
              "label": "growthTokensFunded",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:171"
            },
            {
              "label": "growthTokensWithdrawn",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:173"
            },
            {
              "label": "growthTokensInSmartContract",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:175"
            },
            {
              "label": "growthTokensLastWithdrawalTime",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:177"
            },
            {
              "label": "growthTokensStartFundingTime",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:179"
            },
            {
              "label": "growthTokensFundingStarted",
              "offset": 0,
              "slot": "7",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:181"
            },
            {
              "label": "teamTokensFunded",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:192"
            },
            {
              "label": "teamTokensWithdrawn",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:194"
            },
            {
              "label": "teamTokensInSmartContract",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:196"
            },
            {
              "label": "teamTokensStartFundingTime",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:198"
            },
            {
              "label": "teamTokensFundingStarted",
              "offset": 0,
              "slot": "12",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:200"
            },
            {
              "label": "rewardTokensFunded",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:211"
            },
            {
              "label": "rewardTokensDistributed",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:213"
            },
            {
              "label": "rewardTokensWithdrawn",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:215"
            },
            {
              "label": "rewardTokensInSmartContract",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:217"
            },
            {
              "label": "rewardTokensStartFundingTime",
              "offset": 0,
              "slot": "17",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:219"
            },
            {
              "label": "rewardTokensFundingStarted",
              "offset": 0,
              "slot": "18",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:221"
            },
            {
              "label": "whiteListerAddress",
              "offset": 1,
              "slot": "18",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:226"
            },
            {
              "label": "rewardsUpdaterAddress",
              "offset": 0,
              "slot": "19",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:228"
            },
            {
              "label": "maximumBatchSizeForUpdateRewards",
              "offset": 20,
              "slot": "19",
              "type": "t_uint8",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:248"
            },
            {
              "label": "wallets",
              "offset": 0,
              "slot": "20",
              "type": "t_mapping(t_address,t_struct(WalletData)2450_storage)",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:250"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)24_storage)": {
              "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
              "numberOfBytes": "32"
            },
            "t_struct(AccessControlStorage)34_storage": {
              "label": "struct AccessControlUpgradeable.AccessControlStorage",
              "members": [
                {
                  "label": "_roles",
                  "type": "t_mapping(t_bytes32,t_struct(RoleData)24_storage)",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(InitializableStorage)231_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(OwnableStorage)164_storage": {
              "label": "struct OwnableUpgradeable.OwnableStorage",
              "members": [
                {
                  "label": "_owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(PausableStorage)323_storage": {
              "label": "struct PausableUpgradeable.PausableStorage",
              "members": [
                {
                  "label": "_paused",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(ReentrancyGuardStorage)394_storage": {
              "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
              "members": [
                {
                  "label": "_status",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(RoleData)24_storage": {
              "label": "struct AccessControlUpgradeable.RoleData",
              "members": [
                {
                  "label": "hasRole",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            },
            "t_contract(IHyaxToken)2173": {
              "label": "contract IHyaxToken",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_struct(WalletData)2450_storage)": {
              "label": "mapping(address => struct UpgradeableHYAXRewards.WalletData)",
              "numberOfBytes": "32"
            },
            "t_struct(WalletData)2450_storage": {
              "label": "struct UpgradeableHYAXRewards.WalletData",
              "members": [
                {
                  "label": "hyaxHoldingAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "hyaxHoldingAmountAtWhitelistTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "totalHyaxRewardsAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "currentRewardsAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "rewardsWithdrawn",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "addedToWhitelistTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "teamTokenWithdrawalTimes",
                  "type": "t_uint8",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "lastRewardsWithdrawalTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "lastRewardsUpdateTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "isTeamWallet",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "isWhitelisted",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "9"
                },
                {
                  "label": "isBlacklisted",
                  "type": "t_bool",
                  "offset": 2,
                  "slot": "9"
                }
              ],
              "numberOfBytes": "320"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {
            "erc7201:openzeppelin.storage.ReentrancyGuard": [
              {
                "contract": "ReentrancyGuardUpgradeable",
                "label": "_status",
                "type": "t_uint256",
                "src": "@openzeppelin\\contracts-upgradeable\\utils\\ReentrancyGuardUpgradeable.sol:43",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Pausable": [
              {
                "contract": "PausableUpgradeable",
                "label": "_paused",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\utils\\PausableUpgradeable.sol:21",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.AccessControl": [
              {
                "contract": "AccessControlUpgradeable",
                "label": "_roles",
                "type": "t_mapping(t_bytes32,t_struct(RoleData)24_storage)",
                "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:60",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Ownable": [
              {
                "contract": "OwnableUpgradeable",
                "label": "_owner",
                "type": "t_address",
                "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:24",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      }
    },
    {
      "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:AccessControlUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:50",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:ERC165Upgradeable",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/access/IAccessControl.sol:IAccessControl",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)",
          "hasRole(bytes32,address)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)24_storage)": {
              "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
              "numberOfBytes": "32"
            },
            "t_struct(AccessControlStorage)34_storage": {
              "label": "struct AccessControlUpgradeable.AccessControlStorage",
              "members": [
                {
                  "label": "_roles",
                  "type": "t_mapping(t_bytes32,t_struct(RoleData)24_storage)",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(InitializableStorage)231_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(RoleData)24_storage": {
              "label": "struct AccessControlUpgradeable.RoleData",
              "members": [
                {
                  "label": "hasRole",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.AccessControl": [
              {
                "contract": "AccessControlUpgradeable",
                "label": "_roles",
                "type": "t_mapping(t_bytes32,t_struct(RoleData)24_storage)",
                "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:60",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)231_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(OwnableStorage)164_storage": {
              "label": "struct OwnableUpgradeable.OwnableStorage",
              "members": [
                {
                  "label": "_owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Ownable": [
              {
                "contract": "OwnableUpgradeable",
                "label": "_owner",
                "type": "t_address",
                "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:24",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable": {
        "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:56",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)231_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:17",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)231_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:PausableUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\PausableUpgradeable.sol:18",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)231_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(PausableStorage)323_storage": {
              "label": "struct PausableUpgradeable.PausableStorage",
              "members": [
                {
                  "label": "_paused",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Pausable": [
              {
                "contract": "PausableUpgradeable",
                "label": "_paused",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\utils\\PausableUpgradeable.sol:21",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\ReentrancyGuardUpgradeable.sol:26",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)231_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(ReentrancyGuardStorage)394_storage": {
              "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
              "members": [
                {
                  "label": "_status",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.ReentrancyGuard": [
              {
                "contract": "ReentrancyGuardUpgradeable",
                "label": "_status",
                "type": "t_uint256",
                "src": "@openzeppelin\\contracts-upgradeable\\utils\\ReentrancyGuardUpgradeable.sol:43",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:ERC165Upgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:21",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)231_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/access/IAccessControl.sol:IAccessControl": {
        "src": "@openzeppelin\\contracts\\access\\IAccessControl.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "hasRole(bytes32,address)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/IERC1363.sol:IERC1363": {
        "src": "@openzeppelin\\contracts\\interfaces\\IERC1363.sol:16",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "transferAndCall(address,uint256)",
          "transferAndCall(address,uint256,bytes)",
          "transferFromAndCall(address,address,uint256)",
          "transferFromAndCall(address,address,uint256,bytes)",
          "approveAndCall(address,uint256)",
          "approveAndCall(address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\utils\\SafeERC20.sol:19",
        "version": {
          "withMetadata": "4d5aa21551e02fafd7e8e0863ec3bfc2fcfe1250d5cec5955817896d6c5e05c4",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Address.sol:Address": {
        "src": "@openzeppelin\\contracts\\utils\\Address.sol:11",
        "version": {
          "withMetadata": "69a075d4917289a08ca838ba8291f9f039e47da5778b41c00c35bf1b1ec28419",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/Errors.sol:Errors"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:97"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Errors.sol:Errors": {
        "src": "@openzeppelin\\contracts\\utils\\Errors.sol:14",
        "version": {
          "withMetadata": "42072139bd52bf9a3af0fbefb19f69284420288655a62921f71240c9b7664073",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165": {
        "src": "@openzeppelin\\contracts\\utils\\introspection\\IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UpgradeableHYAXRewards.sol:IHyaxToken": {
        "src": "contracts\\UpgradeableHYAXRewards.sol:19",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "symbol()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UpgradeableHYAXRewards.sol:UpgradeableHYAXRewards": {
        "src": "contracts\\UpgradeableHYAXRewards.sol:23",
        "version": {
          "withMetadata": "b8b5e390202a1fbdd871369134da3cbd0e8529d12801ca0a77bbaf60670194da",
          "withoutMetadata": "4bdff5e909475eefda889b8d564bbcf913ec1cd85a0aff7558d3751e6736d048",
          "linkedWithoutMetadata": "4bdff5e909475eefda889b8d564bbcf913ec1cd85a0aff7558d3751e6736d048"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:PausableUpgradeable",
          "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:AccessControlUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:ERC165Upgradeable",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/access/IAccessControl.sol:IAccessControl",
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "initialize(address)",
          "addWalletToWhitelist(address,bool,uint256)",
          "updateWhitelistStatus(address,bool)",
          "updateBlacklistStatus(address,bool)",
          "fundSmartContract(uint8,uint256)",
          "withdrawGrowthTokens()",
          "withdrawTeamTokens()",
          "calculateYearForTeamTokens()",
          "updateRewardsBatch(address[],uint256[])",
          "updateRewardsSingle(address,uint256)",
          "withdrawRewardTokens()",
          "withdrawTokensToBurn(uint8,uint256)",
          "updateTeamMemberWallet(address,address)",
          "updateWhiteListerAddress(address)",
          "updateRewardsUpdaterAddress(address)",
          "updateHyaxTokenAddress(address)",
          "updateMaximumBatchSizeForUpdateRewards(uint8)",
          "pause()",
          "unpause()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "hyaxTokenAddress",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:151"
            },
            {
              "label": "hyaxToken",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IHyaxToken)2173",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:153"
            },
            {
              "label": "growthTokensFunded",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:171"
            },
            {
              "label": "growthTokensWithdrawn",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:173"
            },
            {
              "label": "growthTokensInSmartContract",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:175"
            },
            {
              "label": "growthTokensLastWithdrawalTime",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:177"
            },
            {
              "label": "growthTokensStartFundingTime",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:179"
            },
            {
              "label": "growthTokensFundingStarted",
              "offset": 0,
              "slot": "7",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:181"
            },
            {
              "label": "teamTokensFunded",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:192"
            },
            {
              "label": "teamTokensWithdrawn",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:194"
            },
            {
              "label": "teamTokensInSmartContract",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:196"
            },
            {
              "label": "teamTokensStartFundingTime",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:198"
            },
            {
              "label": "teamTokensFundingStarted",
              "offset": 0,
              "slot": "12",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:200"
            },
            {
              "label": "rewardTokensFunded",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:211"
            },
            {
              "label": "rewardTokensDistributed",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:213"
            },
            {
              "label": "rewardTokensWithdrawn",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:215"
            },
            {
              "label": "rewardTokensInSmartContract",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:217"
            },
            {
              "label": "rewardTokensStartFundingTime",
              "offset": 0,
              "slot": "17",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:219"
            },
            {
              "label": "rewardTokensFundingStarted",
              "offset": 0,
              "slot": "18",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:221"
            },
            {
              "label": "whiteListerAddress",
              "offset": 1,
              "slot": "18",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:226"
            },
            {
              "label": "rewardsUpdaterAddress",
              "offset": 0,
              "slot": "19",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:228"
            },
            {
              "label": "maximumBatchSizeForUpdateRewards",
              "offset": 20,
              "slot": "19",
              "type": "t_uint8",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:248"
            },
            {
              "label": "wallets",
              "offset": 0,
              "slot": "20",
              "type": "t_mapping(t_address,t_struct(WalletData)2450_storage)",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:250"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)24_storage)": {
              "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
              "numberOfBytes": "32"
            },
            "t_struct(AccessControlStorage)34_storage": {
              "label": "struct AccessControlUpgradeable.AccessControlStorage",
              "members": [
                {
                  "label": "_roles",
                  "type": "t_mapping(t_bytes32,t_struct(RoleData)24_storage)",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(InitializableStorage)231_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(OwnableStorage)164_storage": {
              "label": "struct OwnableUpgradeable.OwnableStorage",
              "members": [
                {
                  "label": "_owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(PausableStorage)323_storage": {
              "label": "struct PausableUpgradeable.PausableStorage",
              "members": [
                {
                  "label": "_paused",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(ReentrancyGuardStorage)394_storage": {
              "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
              "members": [
                {
                  "label": "_status",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(RoleData)24_storage": {
              "label": "struct AccessControlUpgradeable.RoleData",
              "members": [
                {
                  "label": "hasRole",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            },
            "t_contract(IHyaxToken)2173": {
              "label": "contract IHyaxToken",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_struct(WalletData)2450_storage)": {
              "label": "mapping(address => struct UpgradeableHYAXRewards.WalletData)",
              "numberOfBytes": "32"
            },
            "t_struct(WalletData)2450_storage": {
              "label": "struct UpgradeableHYAXRewards.WalletData",
              "members": [
                {
                  "label": "hyaxHoldingAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "hyaxHoldingAmountAtWhitelistTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "totalHyaxRewardsAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "currentRewardsAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "rewardsWithdrawn",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "addedToWhitelistTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "teamTokenWithdrawalTimes",
                  "type": "t_uint8",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "lastRewardsWithdrawalTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "lastRewardsUpdateTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "isTeamWallet",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "isWhitelisted",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "9"
                },
                {
                  "label": "isBlacklisted",
                  "type": "t_bool",
                  "offset": 2,
                  "slot": "9"
                }
              ],
              "numberOfBytes": "320"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {
            "erc7201:openzeppelin.storage.ReentrancyGuard": [
              {
                "contract": "ReentrancyGuardUpgradeable",
                "label": "_status",
                "type": "t_uint256",
                "src": "@openzeppelin\\contracts-upgradeable\\utils\\ReentrancyGuardUpgradeable.sol:43",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Pausable": [
              {
                "contract": "PausableUpgradeable",
                "label": "_paused",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\utils\\PausableUpgradeable.sol:21",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.AccessControl": [
              {
                "contract": "AccessControlUpgradeable",
                "label": "_roles",
                "type": "t_mapping(t_bytes32,t_struct(RoleData)24_storage)",
                "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:60",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Ownable": [
              {
                "contract": "OwnableUpgradeable",
                "label": "_owner",
                "type": "t_address",
                "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:24",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      }
    },
    {
      "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:AccessControlUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:50",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:ERC165Upgradeable",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/access/IAccessControl.sol:IAccessControl",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)",
          "hasRole(bytes32,address)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)24_storage)": {
              "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
              "numberOfBytes": "32"
            },
            "t_struct(AccessControlStorage)34_storage": {
              "label": "struct AccessControlUpgradeable.AccessControlStorage",
              "members": [
                {
                  "label": "_roles",
                  "type": "t_mapping(t_bytes32,t_struct(RoleData)24_storage)",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(InitializableStorage)231_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(RoleData)24_storage": {
              "label": "struct AccessControlUpgradeable.RoleData",
              "members": [
                {
                  "label": "hasRole",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.AccessControl": [
              {
                "contract": "AccessControlUpgradeable",
                "label": "_roles",
                "type": "t_mapping(t_bytes32,t_struct(RoleData)24_storage)",
                "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:60",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)231_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(OwnableStorage)164_storage": {
              "label": "struct OwnableUpgradeable.OwnableStorage",
              "members": [
                {
                  "label": "_owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Ownable": [
              {
                "contract": "OwnableUpgradeable",
                "label": "_owner",
                "type": "t_address",
                "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:24",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable": {
        "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:56",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)231_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:17",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)231_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:PausableUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\PausableUpgradeable.sol:18",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)231_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(PausableStorage)323_storage": {
              "label": "struct PausableUpgradeable.PausableStorage",
              "members": [
                {
                  "label": "_paused",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Pausable": [
              {
                "contract": "PausableUpgradeable",
                "label": "_paused",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\utils\\PausableUpgradeable.sol:21",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\ReentrancyGuardUpgradeable.sol:26",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)231_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(ReentrancyGuardStorage)394_storage": {
              "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
              "members": [
                {
                  "label": "_status",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.ReentrancyGuard": [
              {
                "contract": "ReentrancyGuardUpgradeable",
                "label": "_status",
                "type": "t_uint256",
                "src": "@openzeppelin\\contracts-upgradeable\\utils\\ReentrancyGuardUpgradeable.sol:43",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:ERC165Upgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:21",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)231_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/access/IAccessControl.sol:IAccessControl": {
        "src": "@openzeppelin\\contracts\\access\\IAccessControl.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "hasRole(bytes32,address)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/IERC1363.sol:IERC1363": {
        "src": "@openzeppelin\\contracts\\interfaces\\IERC1363.sol:16",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "transferAndCall(address,uint256)",
          "transferAndCall(address,uint256,bytes)",
          "transferFromAndCall(address,address,uint256)",
          "transferFromAndCall(address,address,uint256,bytes)",
          "approveAndCall(address,uint256)",
          "approveAndCall(address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\utils\\SafeERC20.sol:19",
        "version": {
          "withMetadata": "4d5aa21551e02fafd7e8e0863ec3bfc2fcfe1250d5cec5955817896d6c5e05c4",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Address.sol:Address": {
        "src": "@openzeppelin\\contracts\\utils\\Address.sol:11",
        "version": {
          "withMetadata": "69a075d4917289a08ca838ba8291f9f039e47da5778b41c00c35bf1b1ec28419",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/Errors.sol:Errors"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:97"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Errors.sol:Errors": {
        "src": "@openzeppelin\\contracts\\utils\\Errors.sol:14",
        "version": {
          "withMetadata": "42072139bd52bf9a3af0fbefb19f69284420288655a62921f71240c9b7664073",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165": {
        "src": "@openzeppelin\\contracts\\utils\\introspection\\IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UpgradeableHYAXRewards.sol:IHyaxToken": {
        "src": "contracts\\UpgradeableHYAXRewards.sol:19",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "symbol()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UpgradeableHYAXRewards.sol:UpgradeableHYAXRewards": {
        "src": "contracts\\UpgradeableHYAXRewards.sol:23",
        "version": {
          "withMetadata": "00b74391571ee20541f86a4b7e931da8f6bdef50a5c17c11520900e115735a93",
          "withoutMetadata": "325d7899bdb17ffa00dfbfa5bf98caf8f86b487f55b43cf13ed7b1dd9420f96e",
          "linkedWithoutMetadata": "325d7899bdb17ffa00dfbfa5bf98caf8f86b487f55b43cf13ed7b1dd9420f96e"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:PausableUpgradeable",
          "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:AccessControlUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:ERC165Upgradeable",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/access/IAccessControl.sol:IAccessControl",
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "initialize(address)",
          "addWalletToWhitelist(address,bool,uint256)",
          "updateWhitelistStatus(address,bool)",
          "updateBlacklistStatus(address,bool)",
          "fundSmartContract(uint8,uint256)",
          "withdrawGrowthTokens()",
          "withdrawTeamTokens()",
          "calculateYearForTeamTokens()",
          "updateRewardsBatch(address[],uint256[])",
          "updateRewardsSingle(address,uint256)",
          "withdrawRewardTokens()",
          "withdrawTokensToBurn(uint8,uint256)",
          "updateTeamMemberWallet(address,address)",
          "updateWhiteListerAddress(address)",
          "updateRewardsUpdaterAddress(address)",
          "updateHyaxTokenAddress(address)",
          "updateMaximumBatchSizeForUpdateRewards(uint8)",
          "pause()",
          "unpause()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "hyaxTokenAddress",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:151"
            },
            {
              "label": "hyaxToken",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IHyaxToken)2173",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:153"
            },
            {
              "label": "growthTokensFunded",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:171"
            },
            {
              "label": "growthTokensWithdrawn",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:173"
            },
            {
              "label": "growthTokensInSmartContract",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:175"
            },
            {
              "label": "growthTokensLastWithdrawalTime",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:177"
            },
            {
              "label": "growthTokensStartFundingTime",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:179"
            },
            {
              "label": "growthTokensFundingStarted",
              "offset": 0,
              "slot": "7",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:181"
            },
            {
              "label": "teamTokensFunded",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:192"
            },
            {
              "label": "teamTokensWithdrawn",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:194"
            },
            {
              "label": "teamTokensInSmartContract",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:196"
            },
            {
              "label": "teamTokensStartFundingTime",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:198"
            },
            {
              "label": "teamTokensFundingStarted",
              "offset": 0,
              "slot": "12",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:200"
            },
            {
              "label": "rewardTokensFunded",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:211"
            },
            {
              "label": "rewardTokensDistributed",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:213"
            },
            {
              "label": "rewardTokensWithdrawn",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:215"
            },
            {
              "label": "rewardTokensInSmartContract",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:217"
            },
            {
              "label": "rewardTokensStartFundingTime",
              "offset": 0,
              "slot": "17",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:219"
            },
            {
              "label": "rewardTokensFundingStarted",
              "offset": 0,
              "slot": "18",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:221"
            },
            {
              "label": "whiteListerAddress",
              "offset": 1,
              "slot": "18",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:226"
            },
            {
              "label": "rewardsUpdaterAddress",
              "offset": 0,
              "slot": "19",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:228"
            },
            {
              "label": "maximumBatchSizeForUpdateRewards",
              "offset": 20,
              "slot": "19",
              "type": "t_uint8",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:248"
            },
            {
              "label": "wallets",
              "offset": 0,
              "slot": "20",
              "type": "t_mapping(t_address,t_struct(WalletData)2450_storage)",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:250"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)24_storage)": {
              "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
              "numberOfBytes": "32"
            },
            "t_struct(AccessControlStorage)34_storage": {
              "label": "struct AccessControlUpgradeable.AccessControlStorage",
              "members": [
                {
                  "label": "_roles",
                  "type": "t_mapping(t_bytes32,t_struct(RoleData)24_storage)",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(InitializableStorage)231_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(OwnableStorage)164_storage": {
              "label": "struct OwnableUpgradeable.OwnableStorage",
              "members": [
                {
                  "label": "_owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(PausableStorage)323_storage": {
              "label": "struct PausableUpgradeable.PausableStorage",
              "members": [
                {
                  "label": "_paused",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(ReentrancyGuardStorage)394_storage": {
              "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
              "members": [
                {
                  "label": "_status",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(RoleData)24_storage": {
              "label": "struct AccessControlUpgradeable.RoleData",
              "members": [
                {
                  "label": "hasRole",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            },
            "t_contract(IHyaxToken)2173": {
              "label": "contract IHyaxToken",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_struct(WalletData)2450_storage)": {
              "label": "mapping(address => struct UpgradeableHYAXRewards.WalletData)",
              "numberOfBytes": "32"
            },
            "t_struct(WalletData)2450_storage": {
              "label": "struct UpgradeableHYAXRewards.WalletData",
              "members": [
                {
                  "label": "hyaxHoldingAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "hyaxHoldingAmountAtWhitelistTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "totalHyaxRewardsAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "currentRewardsAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "rewardsWithdrawn",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "addedToWhitelistTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "teamTokenWithdrawalTimes",
                  "type": "t_uint8",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "lastRewardsWithdrawalTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "lastRewardsUpdateTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "isTeamWallet",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "isWhitelisted",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "9"
                },
                {
                  "label": "isBlacklisted",
                  "type": "t_bool",
                  "offset": 2,
                  "slot": "9"
                }
              ],
              "numberOfBytes": "320"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {
            "erc7201:openzeppelin.storage.ReentrancyGuard": [
              {
                "contract": "ReentrancyGuardUpgradeable",
                "label": "_status",
                "type": "t_uint256",
                "src": "@openzeppelin\\contracts-upgradeable\\utils\\ReentrancyGuardUpgradeable.sol:43",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Pausable": [
              {
                "contract": "PausableUpgradeable",
                "label": "_paused",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\utils\\PausableUpgradeable.sol:21",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.AccessControl": [
              {
                "contract": "AccessControlUpgradeable",
                "label": "_roles",
                "type": "t_mapping(t_bytes32,t_struct(RoleData)24_storage)",
                "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:60",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Ownable": [
              {
                "contract": "OwnableUpgradeable",
                "label": "_owner",
                "type": "t_address",
                "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:24",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      }
    },
    {
      "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:AccessControlUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:50",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:ERC165Upgradeable",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/access/IAccessControl.sol:IAccessControl",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)",
          "hasRole(bytes32,address)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)24_storage)": {
              "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
              "numberOfBytes": "32"
            },
            "t_struct(AccessControlStorage)34_storage": {
              "label": "struct AccessControlUpgradeable.AccessControlStorage",
              "members": [
                {
                  "label": "_roles",
                  "type": "t_mapping(t_bytes32,t_struct(RoleData)24_storage)",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(InitializableStorage)231_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(RoleData)24_storage": {
              "label": "struct AccessControlUpgradeable.RoleData",
              "members": [
                {
                  "label": "hasRole",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.AccessControl": [
              {
                "contract": "AccessControlUpgradeable",
                "label": "_roles",
                "type": "t_mapping(t_bytes32,t_struct(RoleData)24_storage)",
                "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:60",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)231_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(OwnableStorage)164_storage": {
              "label": "struct OwnableUpgradeable.OwnableStorage",
              "members": [
                {
                  "label": "_owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Ownable": [
              {
                "contract": "OwnableUpgradeable",
                "label": "_owner",
                "type": "t_address",
                "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:24",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable": {
        "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:56",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)231_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:17",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)231_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:PausableUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\PausableUpgradeable.sol:18",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)231_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(PausableStorage)323_storage": {
              "label": "struct PausableUpgradeable.PausableStorage",
              "members": [
                {
                  "label": "_paused",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Pausable": [
              {
                "contract": "PausableUpgradeable",
                "label": "_paused",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\utils\\PausableUpgradeable.sol:21",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\ReentrancyGuardUpgradeable.sol:26",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)231_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(ReentrancyGuardStorage)394_storage": {
              "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
              "members": [
                {
                  "label": "_status",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.ReentrancyGuard": [
              {
                "contract": "ReentrancyGuardUpgradeable",
                "label": "_status",
                "type": "t_uint256",
                "src": "@openzeppelin\\contracts-upgradeable\\utils\\ReentrancyGuardUpgradeable.sol:43",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:ERC165Upgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:21",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)231_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/access/IAccessControl.sol:IAccessControl": {
        "src": "@openzeppelin\\contracts\\access\\IAccessControl.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "hasRole(bytes32,address)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/IERC1363.sol:IERC1363": {
        "src": "@openzeppelin\\contracts\\interfaces\\IERC1363.sol:16",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "transferAndCall(address,uint256)",
          "transferAndCall(address,uint256,bytes)",
          "transferFromAndCall(address,address,uint256)",
          "transferFromAndCall(address,address,uint256,bytes)",
          "approveAndCall(address,uint256)",
          "approveAndCall(address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\utils\\SafeERC20.sol:19",
        "version": {
          "withMetadata": "4d5aa21551e02fafd7e8e0863ec3bfc2fcfe1250d5cec5955817896d6c5e05c4",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Address.sol:Address": {
        "src": "@openzeppelin\\contracts\\utils\\Address.sol:11",
        "version": {
          "withMetadata": "69a075d4917289a08ca838ba8291f9f039e47da5778b41c00c35bf1b1ec28419",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/Errors.sol:Errors"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:97"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Errors.sol:Errors": {
        "src": "@openzeppelin\\contracts\\utils\\Errors.sol:14",
        "version": {
          "withMetadata": "42072139bd52bf9a3af0fbefb19f69284420288655a62921f71240c9b7664073",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165": {
        "src": "@openzeppelin\\contracts\\utils\\introspection\\IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UpgradeableHYAXRewards.sol:IHyaxToken": {
        "src": "contracts\\UpgradeableHYAXRewards.sol:19",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "symbol()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UpgradeableHYAXRewards.sol:UpgradeableHYAXRewards": {
        "src": "contracts\\UpgradeableHYAXRewards.sol:23",
        "version": {
          "withMetadata": "82f8acf70f1124c61cbffd98ad936195ea52680e31fb23b4a08a207ab1b8a262",
          "withoutMetadata": "a06d747bd9c67ffcc67d88461e9777f729b95d50963d292c38244123597e6809",
          "linkedWithoutMetadata": "a06d747bd9c67ffcc67d88461e9777f729b95d50963d292c38244123597e6809"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:PausableUpgradeable",
          "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:AccessControlUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:ERC165Upgradeable",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/access/IAccessControl.sol:IAccessControl",
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "initialize(address)",
          "addWalletToWhitelist(address,bool,uint256)",
          "updateWhitelistStatus(address,bool)",
          "updateBlacklistStatus(address,bool)",
          "fundSmartContract(uint8,uint256)",
          "withdrawGrowthTokens()",
          "withdrawTeamTokens()",
          "calculateYearForTeamTokens()",
          "updateRewardsBatch(address[],uint256[])",
          "updateRewardsSingle(address,uint256)",
          "withdrawRewardTokens()",
          "withdrawTokensToBurn(uint8,uint256)",
          "updateTeamMemberWallet(address,address)",
          "updateWhiteListerAddress(address)",
          "updateRewardsUpdaterAddress(address)",
          "updateHyaxTokenAddress(address)",
          "updateMaximumBatchSizeForUpdateRewards(uint8)",
          "pause()",
          "unpause()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "hyaxTokenAddress",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:151"
            },
            {
              "label": "hyaxToken",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IHyaxToken)2173",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:153"
            },
            {
              "label": "growthTokensFunded",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:171"
            },
            {
              "label": "growthTokensWithdrawn",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:173"
            },
            {
              "label": "growthTokensInSmartContract",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:175"
            },
            {
              "label": "growthTokensLastWithdrawalTime",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:177"
            },
            {
              "label": "growthTokensStartFundingTime",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:179"
            },
            {
              "label": "growthTokensFundingStarted",
              "offset": 0,
              "slot": "7",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:181"
            },
            {
              "label": "teamTokensFunded",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:192"
            },
            {
              "label": "teamTokensWithdrawn",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:194"
            },
            {
              "label": "teamTokensInSmartContract",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:196"
            },
            {
              "label": "teamTokensStartFundingTime",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:198"
            },
            {
              "label": "teamTokensFundingStarted",
              "offset": 0,
              "slot": "12",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:200"
            },
            {
              "label": "rewardTokensFunded",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:211"
            },
            {
              "label": "rewardTokensDistributed",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:213"
            },
            {
              "label": "rewardTokensWithdrawn",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:215"
            },
            {
              "label": "rewardTokensInSmartContract",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:217"
            },
            {
              "label": "rewardTokensStartFundingTime",
              "offset": 0,
              "slot": "17",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:219"
            },
            {
              "label": "rewardTokensFundingStarted",
              "offset": 0,
              "slot": "18",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:221"
            },
            {
              "label": "whiteListerAddress",
              "offset": 1,
              "slot": "18",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:226"
            },
            {
              "label": "rewardsUpdaterAddress",
              "offset": 0,
              "slot": "19",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:228"
            },
            {
              "label": "maximumBatchSizeForUpdateRewards",
              "offset": 20,
              "slot": "19",
              "type": "t_uint8",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:248"
            },
            {
              "label": "wallets",
              "offset": 0,
              "slot": "20",
              "type": "t_mapping(t_address,t_struct(WalletData)2450_storage)",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:250"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)24_storage)": {
              "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
              "numberOfBytes": "32"
            },
            "t_struct(AccessControlStorage)34_storage": {
              "label": "struct AccessControlUpgradeable.AccessControlStorage",
              "members": [
                {
                  "label": "_roles",
                  "type": "t_mapping(t_bytes32,t_struct(RoleData)24_storage)",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(InitializableStorage)231_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(OwnableStorage)164_storage": {
              "label": "struct OwnableUpgradeable.OwnableStorage",
              "members": [
                {
                  "label": "_owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(PausableStorage)323_storage": {
              "label": "struct PausableUpgradeable.PausableStorage",
              "members": [
                {
                  "label": "_paused",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(ReentrancyGuardStorage)394_storage": {
              "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
              "members": [
                {
                  "label": "_status",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(RoleData)24_storage": {
              "label": "struct AccessControlUpgradeable.RoleData",
              "members": [
                {
                  "label": "hasRole",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            },
            "t_contract(IHyaxToken)2173": {
              "label": "contract IHyaxToken",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_struct(WalletData)2450_storage)": {
              "label": "mapping(address => struct UpgradeableHYAXRewards.WalletData)",
              "numberOfBytes": "32"
            },
            "t_struct(WalletData)2450_storage": {
              "label": "struct UpgradeableHYAXRewards.WalletData",
              "members": [
                {
                  "label": "hyaxHoldingAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "hyaxHoldingAmountAtWhitelistTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "totalHyaxRewardsAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "currentRewardsAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "rewardsWithdrawn",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "addedToWhitelistTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "teamTokenWithdrawalTimes",
                  "type": "t_uint8",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "lastRewardsWithdrawalTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "lastRewardsUpdateTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "isTeamWallet",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "isWhitelisted",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "9"
                },
                {
                  "label": "isBlacklisted",
                  "type": "t_bool",
                  "offset": 2,
                  "slot": "9"
                }
              ],
              "numberOfBytes": "320"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {
            "erc7201:openzeppelin.storage.ReentrancyGuard": [
              {
                "contract": "ReentrancyGuardUpgradeable",
                "label": "_status",
                "type": "t_uint256",
                "src": "@openzeppelin\\contracts-upgradeable\\utils\\ReentrancyGuardUpgradeable.sol:43",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Pausable": [
              {
                "contract": "PausableUpgradeable",
                "label": "_paused",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\utils\\PausableUpgradeable.sol:21",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.AccessControl": [
              {
                "contract": "AccessControlUpgradeable",
                "label": "_roles",
                "type": "t_mapping(t_bytes32,t_struct(RoleData)24_storage)",
                "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:60",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Ownable": [
              {
                "contract": "OwnableUpgradeable",
                "label": "_owner",
                "type": "t_address",
                "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:24",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UpgradeableHYAXRewardsV2.sol:IHyaxToken": {
        "src": "contracts\\UpgradeableHYAXRewardsV2.sol:19",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "symbol()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UpgradeableHYAXRewardsV2.sol:UpgradeableHYAXRewardsV2": {
        "src": "contracts\\UpgradeableHYAXRewardsV2.sol:23",
        "version": {
          "withMetadata": "7b9c7dfc46f7fb22b7a9396fc997bf817a9cef828889870719634b59d75b9095",
          "withoutMetadata": "7dce05461d5461b7f86860bc61a8d260ecf21d890dcde507f825e443d39604cd",
          "linkedWithoutMetadata": "7dce05461d5461b7f86860bc61a8d260ecf21d890dcde507f825e443d39604cd"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:PausableUpgradeable",
          "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:AccessControlUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:ERC165Upgradeable",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/access/IAccessControl.sol:IAccessControl",
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "initialize(address)",
          "addWalletToWhitelist(address,bool,uint256)",
          "updateWhitelistStatus(address,bool)",
          "updateBlacklistStatus(address,bool)",
          "fundSmartContract(uint8,uint256)",
          "withdrawGrowthTokens()",
          "withdrawTeamTokens()",
          "calculateYearForTeamTokens()",
          "updateRewardsBatch(address[],uint256[])",
          "updateRewardsSingle(address,uint256)",
          "withdrawRewardTokens()",
          "withdrawTokensToBurn(uint8,uint256)",
          "updateTeamMemberWallet(address,address)",
          "updateWhiteListerAddress(address)",
          "updateRewardsUpdaterAddress(address)",
          "updateHyaxTokenAddress(address)",
          "updateMaximumBatchSizeForUpdateRewards(uint8)",
          "pause()",
          "unpause()",
          "transferOwnership(address)",
          "newFunction()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "hyaxTokenAddress",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewardsV2",
              "src": "contracts\\UpgradeableHYAXRewardsV2.sol:151"
            },
            {
              "label": "hyaxToken",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IHyaxToken)4224",
              "contract": "UpgradeableHYAXRewardsV2",
              "src": "contracts\\UpgradeableHYAXRewardsV2.sol:153"
            },
            {
              "label": "growthTokensFunded",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewardsV2",
              "src": "contracts\\UpgradeableHYAXRewardsV2.sol:171"
            },
            {
              "label": "growthTokensWithdrawn",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewardsV2",
              "src": "contracts\\UpgradeableHYAXRewardsV2.sol:173"
            },
            {
              "label": "growthTokensInSmartContract",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewardsV2",
              "src": "contracts\\UpgradeableHYAXRewardsV2.sol:175"
            },
            {
              "label": "growthTokensLastWithdrawalTime",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewardsV2",
              "src": "contracts\\UpgradeableHYAXRewardsV2.sol:177"
            },
            {
              "label": "growthTokensStartFundingTime",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewardsV2",
              "src": "contracts\\UpgradeableHYAXRewardsV2.sol:179"
            },
            {
              "label": "growthTokensFundingStarted",
              "offset": 0,
              "slot": "7",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewardsV2",
              "src": "contracts\\UpgradeableHYAXRewardsV2.sol:181"
            },
            {
              "label": "teamTokensFunded",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewardsV2",
              "src": "contracts\\UpgradeableHYAXRewardsV2.sol:192"
            },
            {
              "label": "teamTokensWithdrawn",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewardsV2",
              "src": "contracts\\UpgradeableHYAXRewardsV2.sol:194"
            },
            {
              "label": "teamTokensInSmartContract",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewardsV2",
              "src": "contracts\\UpgradeableHYAXRewardsV2.sol:196"
            },
            {
              "label": "teamTokensStartFundingTime",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewardsV2",
              "src": "contracts\\UpgradeableHYAXRewardsV2.sol:198"
            },
            {
              "label": "teamTokensFundingStarted",
              "offset": 0,
              "slot": "12",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewardsV2",
              "src": "contracts\\UpgradeableHYAXRewardsV2.sol:200"
            },
            {
              "label": "rewardTokensFunded",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewardsV2",
              "src": "contracts\\UpgradeableHYAXRewardsV2.sol:211"
            },
            {
              "label": "rewardTokensDistributed",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewardsV2",
              "src": "contracts\\UpgradeableHYAXRewardsV2.sol:213"
            },
            {
              "label": "rewardTokensWithdrawn",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewardsV2",
              "src": "contracts\\UpgradeableHYAXRewardsV2.sol:215"
            },
            {
              "label": "rewardTokensInSmartContract",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewardsV2",
              "src": "contracts\\UpgradeableHYAXRewardsV2.sol:217"
            },
            {
              "label": "rewardTokensStartFundingTime",
              "offset": 0,
              "slot": "17",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewardsV2",
              "src": "contracts\\UpgradeableHYAXRewardsV2.sol:219"
            },
            {
              "label": "rewardTokensFundingStarted",
              "offset": 0,
              "slot": "18",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewardsV2",
              "src": "contracts\\UpgradeableHYAXRewardsV2.sol:221"
            },
            {
              "label": "whiteListerAddress",
              "offset": 1,
              "slot": "18",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewardsV2",
              "src": "contracts\\UpgradeableHYAXRewardsV2.sol:226"
            },
            {
              "label": "rewardsUpdaterAddress",
              "offset": 0,
              "slot": "19",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewardsV2",
              "src": "contracts\\UpgradeableHYAXRewardsV2.sol:228"
            },
            {
              "label": "maximumBatchSizeForUpdateRewards",
              "offset": 20,
              "slot": "19",
              "type": "t_uint8",
              "contract": "UpgradeableHYAXRewardsV2",
              "src": "contracts\\UpgradeableHYAXRewardsV2.sol:248"
            },
            {
              "label": "wallets",
              "offset": 0,
              "slot": "20",
              "type": "t_mapping(t_address,t_struct(WalletData)4501_storage)",
              "contract": "UpgradeableHYAXRewardsV2",
              "src": "contracts\\UpgradeableHYAXRewardsV2.sol:250"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)24_storage)": {
              "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
              "numberOfBytes": "32"
            },
            "t_struct(AccessControlStorage)34_storage": {
              "label": "struct AccessControlUpgradeable.AccessControlStorage",
              "members": [
                {
                  "label": "_roles",
                  "type": "t_mapping(t_bytes32,t_struct(RoleData)24_storage)",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(InitializableStorage)231_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(OwnableStorage)164_storage": {
              "label": "struct OwnableUpgradeable.OwnableStorage",
              "members": [
                {
                  "label": "_owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(PausableStorage)323_storage": {
              "label": "struct PausableUpgradeable.PausableStorage",
              "members": [
                {
                  "label": "_paused",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(ReentrancyGuardStorage)394_storage": {
              "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
              "members": [
                {
                  "label": "_status",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(RoleData)24_storage": {
              "label": "struct AccessControlUpgradeable.RoleData",
              "members": [
                {
                  "label": "hasRole",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            },
            "t_contract(IHyaxToken)4224": {
              "label": "contract IHyaxToken",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_struct(WalletData)4501_storage)": {
              "label": "mapping(address => struct UpgradeableHYAXRewardsV2.WalletData)",
              "numberOfBytes": "32"
            },
            "t_struct(WalletData)4501_storage": {
              "label": "struct UpgradeableHYAXRewardsV2.WalletData",
              "members": [
                {
                  "label": "hyaxHoldingAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "hyaxHoldingAmountAtWhitelistTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "totalHyaxRewardsAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "currentRewardsAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "rewardsWithdrawn",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "addedToWhitelistTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "teamTokenWithdrawalTimes",
                  "type": "t_uint8",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "lastRewardsWithdrawalTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "lastRewardsUpdateTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "isTeamWallet",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "isWhitelisted",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "9"
                },
                {
                  "label": "isBlacklisted",
                  "type": "t_bool",
                  "offset": 2,
                  "slot": "9"
                }
              ],
              "numberOfBytes": "320"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {
            "erc7201:openzeppelin.storage.ReentrancyGuard": [
              {
                "contract": "ReentrancyGuardUpgradeable",
                "label": "_status",
                "type": "t_uint256",
                "src": "@openzeppelin\\contracts-upgradeable\\utils\\ReentrancyGuardUpgradeable.sol:43",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Pausable": [
              {
                "contract": "PausableUpgradeable",
                "label": "_paused",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\utils\\PausableUpgradeable.sol:21",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.AccessControl": [
              {
                "contract": "AccessControlUpgradeable",
                "label": "_roles",
                "type": "t_mapping(t_bytes32,t_struct(RoleData)24_storage)",
                "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:60",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Ownable": [
              {
                "contract": "OwnableUpgradeable",
                "label": "_owner",
                "type": "t_address",
                "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:24",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      }
    },
    {
      "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:AccessControlUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:50",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:ERC165Upgradeable",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/access/IAccessControl.sol:IAccessControl",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)",
          "hasRole(bytes32,address)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)24_storage)": {
              "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
              "numberOfBytes": "32"
            },
            "t_struct(AccessControlStorage)34_storage": {
              "label": "struct AccessControlUpgradeable.AccessControlStorage",
              "members": [
                {
                  "label": "_roles",
                  "type": "t_mapping(t_bytes32,t_struct(RoleData)24_storage)",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(InitializableStorage)231_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(RoleData)24_storage": {
              "label": "struct AccessControlUpgradeable.RoleData",
              "members": [
                {
                  "label": "hasRole",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.AccessControl": [
              {
                "contract": "AccessControlUpgradeable",
                "label": "_roles",
                "type": "t_mapping(t_bytes32,t_struct(RoleData)24_storage)",
                "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:60",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)231_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(OwnableStorage)164_storage": {
              "label": "struct OwnableUpgradeable.OwnableStorage",
              "members": [
                {
                  "label": "_owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Ownable": [
              {
                "contract": "OwnableUpgradeable",
                "label": "_owner",
                "type": "t_address",
                "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:24",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable": {
        "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:56",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)231_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:17",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)231_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:PausableUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\PausableUpgradeable.sol:18",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)231_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(PausableStorage)323_storage": {
              "label": "struct PausableUpgradeable.PausableStorage",
              "members": [
                {
                  "label": "_paused",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Pausable": [
              {
                "contract": "PausableUpgradeable",
                "label": "_paused",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\utils\\PausableUpgradeable.sol:21",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\ReentrancyGuardUpgradeable.sol:26",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)231_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(ReentrancyGuardStorage)394_storage": {
              "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
              "members": [
                {
                  "label": "_status",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.ReentrancyGuard": [
              {
                "contract": "ReentrancyGuardUpgradeable",
                "label": "_status",
                "type": "t_uint256",
                "src": "@openzeppelin\\contracts-upgradeable\\utils\\ReentrancyGuardUpgradeable.sol:43",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:ERC165Upgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:21",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)231_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/access/IAccessControl.sol:IAccessControl": {
        "src": "@openzeppelin\\contracts\\access\\IAccessControl.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "hasRole(bytes32,address)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/IERC1363.sol:IERC1363": {
        "src": "@openzeppelin\\contracts\\interfaces\\IERC1363.sol:16",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "transferAndCall(address,uint256)",
          "transferAndCall(address,uint256,bytes)",
          "transferFromAndCall(address,address,uint256)",
          "transferFromAndCall(address,address,uint256,bytes)",
          "approveAndCall(address,uint256)",
          "approveAndCall(address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\utils\\SafeERC20.sol:19",
        "version": {
          "withMetadata": "4d5aa21551e02fafd7e8e0863ec3bfc2fcfe1250d5cec5955817896d6c5e05c4",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Address.sol:Address": {
        "src": "@openzeppelin\\contracts\\utils\\Address.sol:11",
        "version": {
          "withMetadata": "69a075d4917289a08ca838ba8291f9f039e47da5778b41c00c35bf1b1ec28419",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/Errors.sol:Errors"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:97"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Errors.sol:Errors": {
        "src": "@openzeppelin\\contracts\\utils\\Errors.sol:14",
        "version": {
          "withMetadata": "42072139bd52bf9a3af0fbefb19f69284420288655a62921f71240c9b7664073",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165": {
        "src": "@openzeppelin\\contracts\\utils\\introspection\\IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UpgradeableHYAXRewardsV2.sol:IHyaxToken": {
        "src": "contracts\\UpgradeableHYAXRewardsV2.sol:19",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "symbol()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UpgradeableHYAXRewardsV2.sol:UpgradeableHYAXRewards": {
        "src": "contracts\\UpgradeableHYAXRewardsV2.sol:23",
        "version": {
          "withMetadata": "144e12c067b05d8165f3126d5cc01467e5591f9374162cf3f93f3cf59b58639b",
          "withoutMetadata": "7dce05461d5461b7f86860bc61a8d260ecf21d890dcde507f825e443d39604cd",
          "linkedWithoutMetadata": "7dce05461d5461b7f86860bc61a8d260ecf21d890dcde507f825e443d39604cd"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:PausableUpgradeable",
          "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:AccessControlUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:ERC165Upgradeable",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/access/IAccessControl.sol:IAccessControl",
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "initialize(address)",
          "addWalletToWhitelist(address,bool,uint256)",
          "updateWhitelistStatus(address,bool)",
          "updateBlacklistStatus(address,bool)",
          "fundSmartContract(uint8,uint256)",
          "withdrawGrowthTokens()",
          "withdrawTeamTokens()",
          "calculateYearForTeamTokens()",
          "updateRewardsBatch(address[],uint256[])",
          "updateRewardsSingle(address,uint256)",
          "withdrawRewardTokens()",
          "withdrawTokensToBurn(uint8,uint256)",
          "updateTeamMemberWallet(address,address)",
          "updateWhiteListerAddress(address)",
          "updateRewardsUpdaterAddress(address)",
          "updateHyaxTokenAddress(address)",
          "updateMaximumBatchSizeForUpdateRewards(uint8)",
          "pause()",
          "unpause()",
          "transferOwnership(address)",
          "newFunction()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "hyaxTokenAddress",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewardsV2.sol:151"
            },
            {
              "label": "hyaxToken",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IHyaxToken)2173",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewardsV2.sol:153"
            },
            {
              "label": "growthTokensFunded",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewardsV2.sol:171"
            },
            {
              "label": "growthTokensWithdrawn",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewardsV2.sol:173"
            },
            {
              "label": "growthTokensInSmartContract",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewardsV2.sol:175"
            },
            {
              "label": "growthTokensLastWithdrawalTime",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewardsV2.sol:177"
            },
            {
              "label": "growthTokensStartFundingTime",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewardsV2.sol:179"
            },
            {
              "label": "growthTokensFundingStarted",
              "offset": 0,
              "slot": "7",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewardsV2.sol:181"
            },
            {
              "label": "teamTokensFunded",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewardsV2.sol:192"
            },
            {
              "label": "teamTokensWithdrawn",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewardsV2.sol:194"
            },
            {
              "label": "teamTokensInSmartContract",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewardsV2.sol:196"
            },
            {
              "label": "teamTokensStartFundingTime",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewardsV2.sol:198"
            },
            {
              "label": "teamTokensFundingStarted",
              "offset": 0,
              "slot": "12",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewardsV2.sol:200"
            },
            {
              "label": "rewardTokensFunded",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewardsV2.sol:211"
            },
            {
              "label": "rewardTokensDistributed",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewardsV2.sol:213"
            },
            {
              "label": "rewardTokensWithdrawn",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewardsV2.sol:215"
            },
            {
              "label": "rewardTokensInSmartContract",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewardsV2.sol:217"
            },
            {
              "label": "rewardTokensStartFundingTime",
              "offset": 0,
              "slot": "17",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewardsV2.sol:219"
            },
            {
              "label": "rewardTokensFundingStarted",
              "offset": 0,
              "slot": "18",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewardsV2.sol:221"
            },
            {
              "label": "whiteListerAddress",
              "offset": 1,
              "slot": "18",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewardsV2.sol:226"
            },
            {
              "label": "rewardsUpdaterAddress",
              "offset": 0,
              "slot": "19",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewardsV2.sol:228"
            },
            {
              "label": "maximumBatchSizeForUpdateRewards",
              "offset": 20,
              "slot": "19",
              "type": "t_uint8",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewardsV2.sol:248"
            },
            {
              "label": "wallets",
              "offset": 0,
              "slot": "20",
              "type": "t_mapping(t_address,t_struct(WalletData)2450_storage)",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewardsV2.sol:250"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)24_storage)": {
              "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
              "numberOfBytes": "32"
            },
            "t_struct(AccessControlStorage)34_storage": {
              "label": "struct AccessControlUpgradeable.AccessControlStorage",
              "members": [
                {
                  "label": "_roles",
                  "type": "t_mapping(t_bytes32,t_struct(RoleData)24_storage)",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(InitializableStorage)231_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(OwnableStorage)164_storage": {
              "label": "struct OwnableUpgradeable.OwnableStorage",
              "members": [
                {
                  "label": "_owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(PausableStorage)323_storage": {
              "label": "struct PausableUpgradeable.PausableStorage",
              "members": [
                {
                  "label": "_paused",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(ReentrancyGuardStorage)394_storage": {
              "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
              "members": [
                {
                  "label": "_status",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(RoleData)24_storage": {
              "label": "struct AccessControlUpgradeable.RoleData",
              "members": [
                {
                  "label": "hasRole",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            },
            "t_contract(IHyaxToken)2173": {
              "label": "contract IHyaxToken",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_struct(WalletData)2450_storage)": {
              "label": "mapping(address => struct UpgradeableHYAXRewards.WalletData)",
              "numberOfBytes": "32"
            },
            "t_struct(WalletData)2450_storage": {
              "label": "struct UpgradeableHYAXRewards.WalletData",
              "members": [
                {
                  "label": "hyaxHoldingAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "hyaxHoldingAmountAtWhitelistTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "totalHyaxRewardsAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "currentRewardsAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "rewardsWithdrawn",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "addedToWhitelistTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "teamTokenWithdrawalTimes",
                  "type": "t_uint8",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "lastRewardsWithdrawalTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "lastRewardsUpdateTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "isTeamWallet",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "isWhitelisted",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "9"
                },
                {
                  "label": "isBlacklisted",
                  "type": "t_bool",
                  "offset": 2,
                  "slot": "9"
                }
              ],
              "numberOfBytes": "320"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {
            "erc7201:openzeppelin.storage.ReentrancyGuard": [
              {
                "contract": "ReentrancyGuardUpgradeable",
                "label": "_status",
                "type": "t_uint256",
                "src": "@openzeppelin\\contracts-upgradeable\\utils\\ReentrancyGuardUpgradeable.sol:43",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Pausable": [
              {
                "contract": "PausableUpgradeable",
                "label": "_paused",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\utils\\PausableUpgradeable.sol:21",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.AccessControl": [
              {
                "contract": "AccessControlUpgradeable",
                "label": "_roles",
                "type": "t_mapping(t_bytes32,t_struct(RoleData)24_storage)",
                "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:60",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Ownable": [
              {
                "contract": "OwnableUpgradeable",
                "label": "_owner",
                "type": "t_address",
                "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:24",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      }
    },
    {
      "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:AccessControlUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:50",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:ERC165Upgradeable",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/access/IAccessControl.sol:IAccessControl",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)",
          "hasRole(bytes32,address)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)24_storage)": {
              "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
              "numberOfBytes": "32"
            },
            "t_struct(AccessControlStorage)34_storage": {
              "label": "struct AccessControlUpgradeable.AccessControlStorage",
              "members": [
                {
                  "label": "_roles",
                  "type": "t_mapping(t_bytes32,t_struct(RoleData)24_storage)",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(InitializableStorage)231_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(RoleData)24_storage": {
              "label": "struct AccessControlUpgradeable.RoleData",
              "members": [
                {
                  "label": "hasRole",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.AccessControl": [
              {
                "contract": "AccessControlUpgradeable",
                "label": "_roles",
                "type": "t_mapping(t_bytes32,t_struct(RoleData)24_storage)",
                "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:60",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)231_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(OwnableStorage)164_storage": {
              "label": "struct OwnableUpgradeable.OwnableStorage",
              "members": [
                {
                  "label": "_owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Ownable": [
              {
                "contract": "OwnableUpgradeable",
                "label": "_owner",
                "type": "t_address",
                "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:24",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable": {
        "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:56",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)231_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:17",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)231_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:PausableUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\PausableUpgradeable.sol:18",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)231_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(PausableStorage)323_storage": {
              "label": "struct PausableUpgradeable.PausableStorage",
              "members": [
                {
                  "label": "_paused",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Pausable": [
              {
                "contract": "PausableUpgradeable",
                "label": "_paused",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\utils\\PausableUpgradeable.sol:21",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\ReentrancyGuardUpgradeable.sol:26",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)231_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(ReentrancyGuardStorage)394_storage": {
              "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
              "members": [
                {
                  "label": "_status",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.ReentrancyGuard": [
              {
                "contract": "ReentrancyGuardUpgradeable",
                "label": "_status",
                "type": "t_uint256",
                "src": "@openzeppelin\\contracts-upgradeable\\utils\\ReentrancyGuardUpgradeable.sol:43",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:ERC165Upgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:21",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)231_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/access/IAccessControl.sol:IAccessControl": {
        "src": "@openzeppelin\\contracts\\access\\IAccessControl.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "hasRole(bytes32,address)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/IERC1363.sol:IERC1363": {
        "src": "@openzeppelin\\contracts\\interfaces\\IERC1363.sol:16",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "transferAndCall(address,uint256)",
          "transferAndCall(address,uint256,bytes)",
          "transferFromAndCall(address,address,uint256)",
          "transferFromAndCall(address,address,uint256,bytes)",
          "approveAndCall(address,uint256)",
          "approveAndCall(address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\utils\\SafeERC20.sol:19",
        "version": {
          "withMetadata": "4d5aa21551e02fafd7e8e0863ec3bfc2fcfe1250d5cec5955817896d6c5e05c4",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Address.sol:Address": {
        "src": "@openzeppelin\\contracts\\utils\\Address.sol:11",
        "version": {
          "withMetadata": "69a075d4917289a08ca838ba8291f9f039e47da5778b41c00c35bf1b1ec28419",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/Errors.sol:Errors"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:97"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Errors.sol:Errors": {
        "src": "@openzeppelin\\contracts\\utils\\Errors.sol:14",
        "version": {
          "withMetadata": "42072139bd52bf9a3af0fbefb19f69284420288655a62921f71240c9b7664073",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165": {
        "src": "@openzeppelin\\contracts\\utils\\introspection\\IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UpgradeableHYAXRewards.sol:IHyaxToken": {
        "src": "contracts\\UpgradeableHYAXRewards.sol:19",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "symbol()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UpgradeableHYAXRewards.sol:UpgradeableHYAXRewards": {
        "src": "contracts\\UpgradeableHYAXRewards.sol:23",
        "version": {
          "withMetadata": "f83dc8c760a928c4632c7e0f24178233c0e9d252be318690ea0edb72476f136a",
          "withoutMetadata": "b679343af0d16d1941587b07a004ed0cc9d7f83475c79550e7fb51cc4f197f4d",
          "linkedWithoutMetadata": "b679343af0d16d1941587b07a004ed0cc9d7f83475c79550e7fb51cc4f197f4d"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:PausableUpgradeable",
          "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:AccessControlUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:ERC165Upgradeable",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/access/IAccessControl.sol:IAccessControl",
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "initialize(address)",
          "addWalletToWhitelist(address,bool,uint256)",
          "updateWhitelistStatus(address,bool)",
          "updateBlacklistStatus(address,bool)",
          "fundSmartContract(uint8,uint256)",
          "withdrawGrowthTokens()",
          "withdrawTeamTokens()",
          "calculateYearForTeamTokens()",
          "updateRewardsBatch(address[],uint256[])",
          "updateRewardsSingle(address,uint256)",
          "withdrawRewardTokens()",
          "withdrawTokensToBurn(uint8,uint256)",
          "updateTeamMemberWallet(address,address)",
          "updateWhiteListerAddress(address)",
          "updateRewardsUpdaterAddress(address)",
          "updateHyaxTokenAddress(address)",
          "updateMaximumBatchSizeForUpdateRewards(uint8)",
          "pause()",
          "unpause()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "hyaxTokenAddress",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:151"
            },
            {
              "label": "hyaxToken",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IHyaxToken)2173",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:153"
            },
            {
              "label": "growthTokensFunded",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:171"
            },
            {
              "label": "growthTokensWithdrawn",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:173"
            },
            {
              "label": "growthTokensInSmartContract",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:175"
            },
            {
              "label": "growthTokensLastWithdrawalTime",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:177"
            },
            {
              "label": "growthTokensStartFundingTime",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:179"
            },
            {
              "label": "growthTokensFundingStarted",
              "offset": 0,
              "slot": "7",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:181"
            },
            {
              "label": "teamTokensFunded",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:192"
            },
            {
              "label": "teamTokensWithdrawn",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:194"
            },
            {
              "label": "teamTokensInSmartContract",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:196"
            },
            {
              "label": "teamTokensStartFundingTime",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:198"
            },
            {
              "label": "teamTokensFundingStarted",
              "offset": 0,
              "slot": "12",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:200"
            },
            {
              "label": "rewardTokensFunded",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:211"
            },
            {
              "label": "rewardTokensDistributed",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:213"
            },
            {
              "label": "rewardTokensWithdrawn",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:215"
            },
            {
              "label": "rewardTokensInSmartContract",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:217"
            },
            {
              "label": "rewardTokensStartFundingTime",
              "offset": 0,
              "slot": "17",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:219"
            },
            {
              "label": "rewardTokensFundingStarted",
              "offset": 0,
              "slot": "18",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:221"
            },
            {
              "label": "whiteListerAddress",
              "offset": 1,
              "slot": "18",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:226"
            },
            {
              "label": "rewardsUpdaterAddress",
              "offset": 0,
              "slot": "19",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:228"
            },
            {
              "label": "maximumBatchSizeForUpdateRewards",
              "offset": 20,
              "slot": "19",
              "type": "t_uint8",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:248"
            },
            {
              "label": "wallets",
              "offset": 0,
              "slot": "20",
              "type": "t_mapping(t_address,t_struct(WalletData)2450_storage)",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:250"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)24_storage)": {
              "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
              "numberOfBytes": "32"
            },
            "t_struct(AccessControlStorage)34_storage": {
              "label": "struct AccessControlUpgradeable.AccessControlStorage",
              "members": [
                {
                  "label": "_roles",
                  "type": "t_mapping(t_bytes32,t_struct(RoleData)24_storage)",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(InitializableStorage)231_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(OwnableStorage)164_storage": {
              "label": "struct OwnableUpgradeable.OwnableStorage",
              "members": [
                {
                  "label": "_owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(PausableStorage)323_storage": {
              "label": "struct PausableUpgradeable.PausableStorage",
              "members": [
                {
                  "label": "_paused",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(ReentrancyGuardStorage)394_storage": {
              "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
              "members": [
                {
                  "label": "_status",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(RoleData)24_storage": {
              "label": "struct AccessControlUpgradeable.RoleData",
              "members": [
                {
                  "label": "hasRole",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            },
            "t_contract(IHyaxToken)2173": {
              "label": "contract IHyaxToken",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_struct(WalletData)2450_storage)": {
              "label": "mapping(address => struct UpgradeableHYAXRewards.WalletData)",
              "numberOfBytes": "32"
            },
            "t_struct(WalletData)2450_storage": {
              "label": "struct UpgradeableHYAXRewards.WalletData",
              "members": [
                {
                  "label": "hyaxHoldingAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "hyaxHoldingAmountAtWhitelistTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "totalHyaxRewardsAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "currentRewardsAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "rewardsWithdrawn",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "addedToWhitelistTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "teamTokenWithdrawalTimes",
                  "type": "t_uint8",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "lastRewardsWithdrawalTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "lastRewardsUpdateTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "isTeamWallet",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "isWhitelisted",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "9"
                },
                {
                  "label": "isBlacklisted",
                  "type": "t_bool",
                  "offset": 2,
                  "slot": "9"
                }
              ],
              "numberOfBytes": "320"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {
            "erc7201:openzeppelin.storage.ReentrancyGuard": [
              {
                "contract": "ReentrancyGuardUpgradeable",
                "label": "_status",
                "type": "t_uint256",
                "src": "@openzeppelin\\contracts-upgradeable\\utils\\ReentrancyGuardUpgradeable.sol:43",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Pausable": [
              {
                "contract": "PausableUpgradeable",
                "label": "_paused",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\utils\\PausableUpgradeable.sol:21",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.AccessControl": [
              {
                "contract": "AccessControlUpgradeable",
                "label": "_roles",
                "type": "t_mapping(t_bytes32,t_struct(RoleData)24_storage)",
                "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:60",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Ownable": [
              {
                "contract": "OwnableUpgradeable",
                "label": "_owner",
                "type": "t_address",
                "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:24",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UpgradeableHYAXRewardsV2.sol:IHyaxToken": {
        "src": "contracts\\UpgradeableHYAXRewardsV2.sol:18",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "symbol()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UpgradeableHYAXRewardsV2.sol:UpgradeableHYAXRewardsV2": {
        "src": "contracts\\UpgradeableHYAXRewardsV2.sol:22",
        "version": {
          "withMetadata": "1bb407b0a6fbab21e3ebafce9f6a3e158ef0a6d909247cbb7fd834ee17244068",
          "withoutMetadata": "fb14732ec7558803935827a7965b18052994b8e9a3704b2e7dc24510679b1013",
          "linkedWithoutMetadata": "fb14732ec7558803935827a7965b18052994b8e9a3704b2e7dc24510679b1013"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:PausableUpgradeable",
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "initialize(address)",
          "addWalletToWhitelist(address,bool,uint256)",
          "updateWhitelistStatus(address,bool)",
          "updateBlacklistStatus(address,bool)",
          "fundSmartContract(uint8,uint256)",
          "withdrawGrowthTokens()",
          "withdrawTeamTokens()",
          "calculateYearForTeamTokens()",
          "updateRewardsBatch(address[],uint256[])",
          "updateRewardsSingle(address,uint256)",
          "withdrawRewardTokens()",
          "withdrawTokensToBurn(uint8,uint256)",
          "updateTeamMemberWallet(address,address)",
          "updateWhiteListerAddress(address)",
          "updateRewardsUpdaterAddress(address)",
          "updateHyaxTokenAddress(address)",
          "updateMaximumBatchSizeForUpdateRewards(uint8)",
          "pause()",
          "unpause()",
          "transferOwnership(address)",
          "newFunction()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "hyaxTokenAddress",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewardsV2",
              "src": "contracts\\UpgradeableHYAXRewardsV2.sol:150"
            },
            {
              "label": "hyaxToken",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IHyaxToken)4220",
              "contract": "UpgradeableHYAXRewardsV2",
              "src": "contracts\\UpgradeableHYAXRewardsV2.sol:152"
            },
            {
              "label": "growthTokensFunded",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewardsV2",
              "src": "contracts\\UpgradeableHYAXRewardsV2.sol:164"
            },
            {
              "label": "growthTokensWithdrawn",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewardsV2",
              "src": "contracts\\UpgradeableHYAXRewardsV2.sol:166"
            },
            {
              "label": "growthTokensInSmartContract",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewardsV2",
              "src": "contracts\\UpgradeableHYAXRewardsV2.sol:168"
            },
            {
              "label": "growthTokensLastWithdrawalTime",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewardsV2",
              "src": "contracts\\UpgradeableHYAXRewardsV2.sol:170"
            },
            {
              "label": "growthTokensStartFundingTime",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewardsV2",
              "src": "contracts\\UpgradeableHYAXRewardsV2.sol:172"
            },
            {
              "label": "growthTokensFundingStarted",
              "offset": 0,
              "slot": "7",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewardsV2",
              "src": "contracts\\UpgradeableHYAXRewardsV2.sol:174"
            },
            {
              "label": "teamTokensFunded",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewardsV2",
              "src": "contracts\\UpgradeableHYAXRewardsV2.sol:185"
            },
            {
              "label": "teamTokensWithdrawn",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewardsV2",
              "src": "contracts\\UpgradeableHYAXRewardsV2.sol:187"
            },
            {
              "label": "teamTokensInSmartContract",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewardsV2",
              "src": "contracts\\UpgradeableHYAXRewardsV2.sol:189"
            },
            {
              "label": "teamTokensStartFundingTime",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewardsV2",
              "src": "contracts\\UpgradeableHYAXRewardsV2.sol:191"
            },
            {
              "label": "teamTokensFundingStarted",
              "offset": 0,
              "slot": "12",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewardsV2",
              "src": "contracts\\UpgradeableHYAXRewardsV2.sol:193"
            },
            {
              "label": "rewardTokensFunded",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewardsV2",
              "src": "contracts\\UpgradeableHYAXRewardsV2.sol:204"
            },
            {
              "label": "rewardTokensDistributed",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewardsV2",
              "src": "contracts\\UpgradeableHYAXRewardsV2.sol:206"
            },
            {
              "label": "rewardTokensWithdrawn",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewardsV2",
              "src": "contracts\\UpgradeableHYAXRewardsV2.sol:208"
            },
            {
              "label": "rewardTokensInSmartContract",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewardsV2",
              "src": "contracts\\UpgradeableHYAXRewardsV2.sol:210"
            },
            {
              "label": "rewardTokensStartFundingTime",
              "offset": 0,
              "slot": "17",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewardsV2",
              "src": "contracts\\UpgradeableHYAXRewardsV2.sol:212"
            },
            {
              "label": "rewardTokensFundingStarted",
              "offset": 0,
              "slot": "18",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewardsV2",
              "src": "contracts\\UpgradeableHYAXRewardsV2.sol:214"
            },
            {
              "label": "whiteListerAddress",
              "offset": 1,
              "slot": "18",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewardsV2",
              "src": "contracts\\UpgradeableHYAXRewardsV2.sol:219"
            },
            {
              "label": "rewardsUpdaterAddress",
              "offset": 0,
              "slot": "19",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewardsV2",
              "src": "contracts\\UpgradeableHYAXRewardsV2.sol:221"
            },
            {
              "label": "maximumBatchSizeForUpdateRewards",
              "offset": 20,
              "slot": "19",
              "type": "t_uint8",
              "contract": "UpgradeableHYAXRewardsV2",
              "src": "contracts\\UpgradeableHYAXRewardsV2.sol:243"
            },
            {
              "label": "wallets",
              "offset": 0,
              "slot": "20",
              "type": "t_mapping(t_address,t_struct(WalletData)4482_storage)",
              "contract": "UpgradeableHYAXRewardsV2",
              "src": "contracts\\UpgradeableHYAXRewardsV2.sol:245"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)231_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(OwnableStorage)164_storage": {
              "label": "struct OwnableUpgradeable.OwnableStorage",
              "members": [
                {
                  "label": "_owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(PausableStorage)323_storage": {
              "label": "struct PausableUpgradeable.PausableStorage",
              "members": [
                {
                  "label": "_paused",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(ReentrancyGuardStorage)394_storage": {
              "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
              "members": [
                {
                  "label": "_status",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            },
            "t_contract(IHyaxToken)4220": {
              "label": "contract IHyaxToken",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_struct(WalletData)4482_storage)": {
              "label": "mapping(address => struct UpgradeableHYAXRewardsV2.WalletData)",
              "numberOfBytes": "32"
            },
            "t_struct(WalletData)4482_storage": {
              "label": "struct UpgradeableHYAXRewardsV2.WalletData",
              "members": [
                {
                  "label": "hyaxHoldingAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "hyaxHoldingAmountAtWhitelistTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "totalHyaxRewardsAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "currentRewardsAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "rewardsWithdrawn",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "addedToWhitelistTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "teamTokenWithdrawalTimes",
                  "type": "t_uint8",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "lastRewardsWithdrawalTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "lastRewardsUpdateTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "isTeamWallet",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "isWhitelisted",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "9"
                },
                {
                  "label": "isBlacklisted",
                  "type": "t_bool",
                  "offset": 2,
                  "slot": "9"
                }
              ],
              "numberOfBytes": "320"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {
            "erc7201:openzeppelin.storage.ReentrancyGuard": [
              {
                "contract": "ReentrancyGuardUpgradeable",
                "label": "_status",
                "type": "t_uint256",
                "src": "@openzeppelin\\contracts-upgradeable\\utils\\ReentrancyGuardUpgradeable.sol:43",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Pausable": [
              {
                "contract": "PausableUpgradeable",
                "label": "_paused",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\utils\\PausableUpgradeable.sol:21",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Ownable": [
              {
                "contract": "OwnableUpgradeable",
                "label": "_owner",
                "type": "t_address",
                "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:24",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      }
    },
    {
      "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)80_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(OwnableStorage)13_storage": {
              "label": "struct OwnableUpgradeable.OwnableStorage",
              "members": [
                {
                  "label": "_owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Ownable": [
              {
                "contract": "OwnableUpgradeable",
                "label": "_owner",
                "type": "t_address",
                "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:24",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable": {
        "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:56",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)80_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:17",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)80_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:PausableUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\PausableUpgradeable.sol:18",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)80_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(PausableStorage)172_storage": {
              "label": "struct PausableUpgradeable.PausableStorage",
              "members": [
                {
                  "label": "_paused",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Pausable": [
              {
                "contract": "PausableUpgradeable",
                "label": "_paused",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\utils\\PausableUpgradeable.sol:21",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\ReentrancyGuardUpgradeable.sol:26",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)80_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(ReentrancyGuardStorage)243_storage": {
              "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
              "members": [
                {
                  "label": "_status",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.ReentrancyGuard": [
              {
                "contract": "ReentrancyGuardUpgradeable",
                "label": "_status",
                "type": "t_uint256",
                "src": "@openzeppelin\\contracts-upgradeable\\utils\\ReentrancyGuardUpgradeable.sol:43",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/IERC1363.sol:IERC1363": {
        "src": "@openzeppelin\\contracts\\interfaces\\IERC1363.sol:16",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "transferAndCall(address,uint256)",
          "transferAndCall(address,uint256,bytes)",
          "transferFromAndCall(address,address,uint256)",
          "transferFromAndCall(address,address,uint256,bytes)",
          "approveAndCall(address,uint256)",
          "approveAndCall(address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\utils\\SafeERC20.sol:19",
        "version": {
          "withMetadata": "4d5aa21551e02fafd7e8e0863ec3bfc2fcfe1250d5cec5955817896d6c5e05c4",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Address.sol:Address": {
        "src": "@openzeppelin\\contracts\\utils\\Address.sol:11",
        "version": {
          "withMetadata": "69a075d4917289a08ca838ba8291f9f039e47da5778b41c00c35bf1b1ec28419",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/Errors.sol:Errors"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:97"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Errors.sol:Errors": {
        "src": "@openzeppelin\\contracts\\utils\\Errors.sol:14",
        "version": {
          "withMetadata": "42072139bd52bf9a3af0fbefb19f69284420288655a62921f71240c9b7664073",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165": {
        "src": "@openzeppelin\\contracts\\utils\\introspection\\IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UpgradeableHYAXRewardsV2.sol:IHyaxToken": {
        "src": "contracts\\UpgradeableHYAXRewardsV2.sol:18",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "symbol()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UpgradeableHYAXRewardsV2.sol:UpgradeableHYAXRewardsV2": {
        "src": "contracts\\UpgradeableHYAXRewardsV2.sol:22",
        "version": {
          "withMetadata": "04c4785f1fedece36c4d8cdac58e448554f3d00880d75d6f274a4c0ce08ff4bb",
          "withoutMetadata": "a76f40de4cc3e3267e7f9d9264c8fa944a625f457a1b074e7968ee56c8d349c0",
          "linkedWithoutMetadata": "a76f40de4cc3e3267e7f9d9264c8fa944a625f457a1b074e7968ee56c8d349c0"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:PausableUpgradeable",
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "initialize(address)",
          "addWalletToWhitelist(address,bool,uint256)",
          "updateWhitelistStatus(address,bool)",
          "updateBlacklistStatus(address,bool)",
          "fundSmartContract(uint8,uint256)",
          "withdrawGrowthTokens()",
          "withdrawTeamTokens()",
          "calculateYearForTeamTokens()",
          "updateRewardsBatch(address[],uint256[])",
          "updateRewardsSingle(address,uint256)",
          "withdrawRewardTokens()",
          "withdrawTokensToBurn(uint8,uint256)",
          "updateTeamMemberWallet(address,address)",
          "updateWhiteListerAddress(address)",
          "updateRewardsUpdaterAddress(address)",
          "updateHyaxTokenAddress(address)",
          "updateMaximumBatchSizeForUpdateRewards(uint8)",
          "pause()",
          "unpause()",
          "transferOwnership(address)",
          "newFunction()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "hyaxTokenAddress",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewardsV2",
              "src": "contracts\\UpgradeableHYAXRewardsV2.sol:150"
            },
            {
              "label": "hyaxToken",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IHyaxToken)1686",
              "contract": "UpgradeableHYAXRewardsV2",
              "src": "contracts\\UpgradeableHYAXRewardsV2.sol:152"
            },
            {
              "label": "growthTokensFunded",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewardsV2",
              "src": "contracts\\UpgradeableHYAXRewardsV2.sol:164"
            },
            {
              "label": "growthTokensWithdrawn",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewardsV2",
              "src": "contracts\\UpgradeableHYAXRewardsV2.sol:166"
            },
            {
              "label": "growthTokensInSmartContract",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewardsV2",
              "src": "contracts\\UpgradeableHYAXRewardsV2.sol:168"
            },
            {
              "label": "growthTokensLastWithdrawalTime",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewardsV2",
              "src": "contracts\\UpgradeableHYAXRewardsV2.sol:170"
            },
            {
              "label": "growthTokensStartFundingTime",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewardsV2",
              "src": "contracts\\UpgradeableHYAXRewardsV2.sol:172"
            },
            {
              "label": "growthTokensFundingStarted",
              "offset": 0,
              "slot": "7",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewardsV2",
              "src": "contracts\\UpgradeableHYAXRewardsV2.sol:174"
            },
            {
              "label": "teamTokensFunded",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewardsV2",
              "src": "contracts\\UpgradeableHYAXRewardsV2.sol:185"
            },
            {
              "label": "teamTokensWithdrawn",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewardsV2",
              "src": "contracts\\UpgradeableHYAXRewardsV2.sol:187"
            },
            {
              "label": "teamTokensInSmartContract",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewardsV2",
              "src": "contracts\\UpgradeableHYAXRewardsV2.sol:189"
            },
            {
              "label": "teamTokensStartFundingTime",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewardsV2",
              "src": "contracts\\UpgradeableHYAXRewardsV2.sol:191"
            },
            {
              "label": "teamTokensFundingStarted",
              "offset": 0,
              "slot": "12",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewardsV2",
              "src": "contracts\\UpgradeableHYAXRewardsV2.sol:193"
            },
            {
              "label": "rewardTokensFunded",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewardsV2",
              "src": "contracts\\UpgradeableHYAXRewardsV2.sol:204"
            },
            {
              "label": "rewardTokensDistributed",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewardsV2",
              "src": "contracts\\UpgradeableHYAXRewardsV2.sol:206"
            },
            {
              "label": "rewardTokensWithdrawn",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewardsV2",
              "src": "contracts\\UpgradeableHYAXRewardsV2.sol:208"
            },
            {
              "label": "rewardTokensInSmartContract",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewardsV2",
              "src": "contracts\\UpgradeableHYAXRewardsV2.sol:210"
            },
            {
              "label": "rewardTokensStartFundingTime",
              "offset": 0,
              "slot": "17",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewardsV2",
              "src": "contracts\\UpgradeableHYAXRewardsV2.sol:212"
            },
            {
              "label": "rewardTokensFundingStarted",
              "offset": 0,
              "slot": "18",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewardsV2",
              "src": "contracts\\UpgradeableHYAXRewardsV2.sol:214"
            },
            {
              "label": "whiteListerAddress",
              "offset": 1,
              "slot": "18",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewardsV2",
              "src": "contracts\\UpgradeableHYAXRewardsV2.sol:219"
            },
            {
              "label": "rewardsUpdaterAddress",
              "offset": 0,
              "slot": "19",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewardsV2",
              "src": "contracts\\UpgradeableHYAXRewardsV2.sol:221"
            },
            {
              "label": "maximumBatchSizeForUpdateRewards",
              "offset": 20,
              "slot": "19",
              "type": "t_uint8",
              "contract": "UpgradeableHYAXRewardsV2",
              "src": "contracts\\UpgradeableHYAXRewardsV2.sol:243"
            },
            {
              "label": "wallets",
              "offset": 0,
              "slot": "20",
              "type": "t_mapping(t_address,t_struct(WalletData)1948_storage)",
              "contract": "UpgradeableHYAXRewardsV2",
              "src": "contracts\\UpgradeableHYAXRewardsV2.sol:245"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)80_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(OwnableStorage)13_storage": {
              "label": "struct OwnableUpgradeable.OwnableStorage",
              "members": [
                {
                  "label": "_owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(PausableStorage)172_storage": {
              "label": "struct PausableUpgradeable.PausableStorage",
              "members": [
                {
                  "label": "_paused",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(ReentrancyGuardStorage)243_storage": {
              "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
              "members": [
                {
                  "label": "_status",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            },
            "t_contract(IHyaxToken)1686": {
              "label": "contract IHyaxToken",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_struct(WalletData)1948_storage)": {
              "label": "mapping(address => struct UpgradeableHYAXRewardsV2.WalletData)",
              "numberOfBytes": "32"
            },
            "t_struct(WalletData)1948_storage": {
              "label": "struct UpgradeableHYAXRewardsV2.WalletData",
              "members": [
                {
                  "label": "hyaxHoldingAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "hyaxHoldingAmountAtWhitelistTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "totalHyaxRewardsAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "currentRewardsAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "rewardsWithdrawn",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "addedToWhitelistTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "teamTokenWithdrawalTimes",
                  "type": "t_uint8",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "lastRewardsWithdrawalTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "lastRewardsUpdateTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "isTeamWallet",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "isWhitelisted",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "9"
                },
                {
                  "label": "isBlacklisted",
                  "type": "t_bool",
                  "offset": 2,
                  "slot": "9"
                }
              ],
              "numberOfBytes": "320"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {
            "erc7201:openzeppelin.storage.ReentrancyGuard": [
              {
                "contract": "ReentrancyGuardUpgradeable",
                "label": "_status",
                "type": "t_uint256",
                "src": "@openzeppelin\\contracts-upgradeable\\utils\\ReentrancyGuardUpgradeable.sol:43",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Pausable": [
              {
                "contract": "PausableUpgradeable",
                "label": "_paused",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\utils\\PausableUpgradeable.sol:21",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Ownable": [
              {
                "contract": "OwnableUpgradeable",
                "label": "_owner",
                "type": "t_address",
                "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:24",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      }
    },
    {
      "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)80_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(OwnableStorage)13_storage": {
              "label": "struct OwnableUpgradeable.OwnableStorage",
              "members": [
                {
                  "label": "_owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Ownable": [
              {
                "contract": "OwnableUpgradeable",
                "label": "_owner",
                "type": "t_address",
                "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:24",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable": {
        "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:56",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)80_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:17",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)80_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:PausableUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\PausableUpgradeable.sol:18",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)80_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(PausableStorage)172_storage": {
              "label": "struct PausableUpgradeable.PausableStorage",
              "members": [
                {
                  "label": "_paused",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Pausable": [
              {
                "contract": "PausableUpgradeable",
                "label": "_paused",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\utils\\PausableUpgradeable.sol:21",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\ReentrancyGuardUpgradeable.sol:26",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)80_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(ReentrancyGuardStorage)243_storage": {
              "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
              "members": [
                {
                  "label": "_status",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.ReentrancyGuard": [
              {
                "contract": "ReentrancyGuardUpgradeable",
                "label": "_status",
                "type": "t_uint256",
                "src": "@openzeppelin\\contracts-upgradeable\\utils\\ReentrancyGuardUpgradeable.sol:43",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/IERC1363.sol:IERC1363": {
        "src": "@openzeppelin\\contracts\\interfaces\\IERC1363.sol:16",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "transferAndCall(address,uint256)",
          "transferAndCall(address,uint256,bytes)",
          "transferFromAndCall(address,address,uint256)",
          "transferFromAndCall(address,address,uint256,bytes)",
          "approveAndCall(address,uint256)",
          "approveAndCall(address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\utils\\SafeERC20.sol:19",
        "version": {
          "withMetadata": "4d5aa21551e02fafd7e8e0863ec3bfc2fcfe1250d5cec5955817896d6c5e05c4",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Address.sol:Address": {
        "src": "@openzeppelin\\contracts\\utils\\Address.sol:11",
        "version": {
          "withMetadata": "69a075d4917289a08ca838ba8291f9f039e47da5778b41c00c35bf1b1ec28419",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/Errors.sol:Errors"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:97"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Errors.sol:Errors": {
        "src": "@openzeppelin\\contracts\\utils\\Errors.sol:14",
        "version": {
          "withMetadata": "42072139bd52bf9a3af0fbefb19f69284420288655a62921f71240c9b7664073",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165": {
        "src": "@openzeppelin\\contracts\\utils\\introspection\\IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UpgradeableHYAXRewardsV2.sol:IHyaxToken": {
        "src": "contracts\\UpgradeableHYAXRewardsV2.sol:18",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "symbol()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UpgradeableHYAXRewardsV2.sol:UpgradeableHYAXRewardsV2": {
        "src": "contracts\\UpgradeableHYAXRewardsV2.sol:22",
        "version": {
          "withMetadata": "66b6bc598ec2566cf67e097e979eae0a47cb70e0ad395cabe66049f23f5a9bd2",
          "withoutMetadata": "8d35c18d65822ff969a7b913b9cf98955002275f2b12259bb2f96ce1384c8067",
          "linkedWithoutMetadata": "8d35c18d65822ff969a7b913b9cf98955002275f2b12259bb2f96ce1384c8067"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:PausableUpgradeable",
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "initialize(address)",
          "addWalletToWhitelist(address,bool,uint256)",
          "updateWhitelistStatus(address,bool)",
          "updateBlacklistStatus(address,bool)",
          "fundSmartContract(uint8,uint256)",
          "withdrawGrowthTokens()",
          "withdrawTeamTokens()",
          "calculateYearForTeamTokens()",
          "updateRewardsBatch(address[],uint256[])",
          "updateRewardsSingle(address,uint256)",
          "withdrawRewardTokens()",
          "withdrawTokensToBurn(uint8,uint256)",
          "updateTeamMemberWallet(address,address)",
          "updateWhiteListerAddress(address)",
          "updateRewardsUpdaterAddress(address)",
          "updateHyaxTokenAddress(address)",
          "updateMaximumBatchSizeForUpdateRewards(uint8)",
          "pause()",
          "unpause()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "hyaxTokenAddress",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewardsV2",
              "src": "contracts\\UpgradeableHYAXRewardsV2.sol:150"
            },
            {
              "label": "hyaxToken",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IHyaxToken)1686",
              "contract": "UpgradeableHYAXRewardsV2",
              "src": "contracts\\UpgradeableHYAXRewardsV2.sol:152"
            },
            {
              "label": "growthTokensFunded",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewardsV2",
              "src": "contracts\\UpgradeableHYAXRewardsV2.sol:164"
            },
            {
              "label": "growthTokensWithdrawn",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewardsV2",
              "src": "contracts\\UpgradeableHYAXRewardsV2.sol:166"
            },
            {
              "label": "growthTokensInSmartContract",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewardsV2",
              "src": "contracts\\UpgradeableHYAXRewardsV2.sol:168"
            },
            {
              "label": "growthTokensLastWithdrawalTime",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewardsV2",
              "src": "contracts\\UpgradeableHYAXRewardsV2.sol:170"
            },
            {
              "label": "growthTokensStartFundingTime",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewardsV2",
              "src": "contracts\\UpgradeableHYAXRewardsV2.sol:172"
            },
            {
              "label": "growthTokensFundingStarted",
              "offset": 0,
              "slot": "7",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewardsV2",
              "src": "contracts\\UpgradeableHYAXRewardsV2.sol:174"
            },
            {
              "label": "teamTokensFunded",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewardsV2",
              "src": "contracts\\UpgradeableHYAXRewardsV2.sol:185"
            },
            {
              "label": "teamTokensWithdrawn",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewardsV2",
              "src": "contracts\\UpgradeableHYAXRewardsV2.sol:187"
            },
            {
              "label": "teamTokensInSmartContract",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewardsV2",
              "src": "contracts\\UpgradeableHYAXRewardsV2.sol:189"
            },
            {
              "label": "teamTokensStartFundingTime",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewardsV2",
              "src": "contracts\\UpgradeableHYAXRewardsV2.sol:191"
            },
            {
              "label": "teamTokensFundingStarted",
              "offset": 0,
              "slot": "12",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewardsV2",
              "src": "contracts\\UpgradeableHYAXRewardsV2.sol:193"
            },
            {
              "label": "rewardTokensFunded",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewardsV2",
              "src": "contracts\\UpgradeableHYAXRewardsV2.sol:204"
            },
            {
              "label": "rewardTokensDistributed",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewardsV2",
              "src": "contracts\\UpgradeableHYAXRewardsV2.sol:206"
            },
            {
              "label": "rewardTokensWithdrawn",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewardsV2",
              "src": "contracts\\UpgradeableHYAXRewardsV2.sol:208"
            },
            {
              "label": "rewardTokensInSmartContract",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewardsV2",
              "src": "contracts\\UpgradeableHYAXRewardsV2.sol:210"
            },
            {
              "label": "rewardTokensStartFundingTime",
              "offset": 0,
              "slot": "17",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewardsV2",
              "src": "contracts\\UpgradeableHYAXRewardsV2.sol:212"
            },
            {
              "label": "rewardTokensFundingStarted",
              "offset": 0,
              "slot": "18",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewardsV2",
              "src": "contracts\\UpgradeableHYAXRewardsV2.sol:214"
            },
            {
              "label": "whiteListerAddress",
              "offset": 1,
              "slot": "18",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewardsV2",
              "src": "contracts\\UpgradeableHYAXRewardsV2.sol:219"
            },
            {
              "label": "rewardsUpdaterAddress",
              "offset": 0,
              "slot": "19",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewardsV2",
              "src": "contracts\\UpgradeableHYAXRewardsV2.sol:221"
            },
            {
              "label": "maximumBatchSizeForUpdateRewards",
              "offset": 20,
              "slot": "19",
              "type": "t_uint8",
              "contract": "UpgradeableHYAXRewardsV2",
              "src": "contracts\\UpgradeableHYAXRewardsV2.sol:243"
            },
            {
              "label": "wallets",
              "offset": 0,
              "slot": "20",
              "type": "t_mapping(t_address,t_struct(WalletData)1948_storage)",
              "contract": "UpgradeableHYAXRewardsV2",
              "src": "contracts\\UpgradeableHYAXRewardsV2.sol:245"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)80_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(OwnableStorage)13_storage": {
              "label": "struct OwnableUpgradeable.OwnableStorage",
              "members": [
                {
                  "label": "_owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(PausableStorage)172_storage": {
              "label": "struct PausableUpgradeable.PausableStorage",
              "members": [
                {
                  "label": "_paused",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(ReentrancyGuardStorage)243_storage": {
              "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
              "members": [
                {
                  "label": "_status",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            },
            "t_contract(IHyaxToken)1686": {
              "label": "contract IHyaxToken",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_struct(WalletData)1948_storage)": {
              "label": "mapping(address => struct UpgradeableHYAXRewardsV2.WalletData)",
              "numberOfBytes": "32"
            },
            "t_struct(WalletData)1948_storage": {
              "label": "struct UpgradeableHYAXRewardsV2.WalletData",
              "members": [
                {
                  "label": "hyaxHoldingAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "hyaxHoldingAmountAtWhitelistTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "totalHyaxRewardsAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "currentRewardsAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "rewardsWithdrawn",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "addedToWhitelistTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "teamTokenWithdrawalTimes",
                  "type": "t_uint8",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "lastRewardsWithdrawalTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "lastRewardsUpdateTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "isTeamWallet",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "isWhitelisted",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "9"
                },
                {
                  "label": "isBlacklisted",
                  "type": "t_bool",
                  "offset": 2,
                  "slot": "9"
                }
              ],
              "numberOfBytes": "320"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {
            "erc7201:openzeppelin.storage.ReentrancyGuard": [
              {
                "contract": "ReentrancyGuardUpgradeable",
                "label": "_status",
                "type": "t_uint256",
                "src": "@openzeppelin\\contracts-upgradeable\\utils\\ReentrancyGuardUpgradeable.sol:43",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Pausable": [
              {
                "contract": "PausableUpgradeable",
                "label": "_paused",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\utils\\PausableUpgradeable.sol:21",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Ownable": [
              {
                "contract": "OwnableUpgradeable",
                "label": "_owner",
                "type": "t_address",
                "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:24",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      }
    },
    {
      "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)80_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(OwnableStorage)13_storage": {
              "label": "struct OwnableUpgradeable.OwnableStorage",
              "members": [
                {
                  "label": "_owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Ownable": [
              {
                "contract": "OwnableUpgradeable",
                "label": "_owner",
                "type": "t_address",
                "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:24",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable": {
        "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:56",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)80_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:17",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)80_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:PausableUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\PausableUpgradeable.sol:18",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)80_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(PausableStorage)172_storage": {
              "label": "struct PausableUpgradeable.PausableStorage",
              "members": [
                {
                  "label": "_paused",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Pausable": [
              {
                "contract": "PausableUpgradeable",
                "label": "_paused",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\utils\\PausableUpgradeable.sol:21",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\ReentrancyGuardUpgradeable.sol:26",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)80_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(ReentrancyGuardStorage)243_storage": {
              "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
              "members": [
                {
                  "label": "_status",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.ReentrancyGuard": [
              {
                "contract": "ReentrancyGuardUpgradeable",
                "label": "_status",
                "type": "t_uint256",
                "src": "@openzeppelin\\contracts-upgradeable\\utils\\ReentrancyGuardUpgradeable.sol:43",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/IERC1363.sol:IERC1363": {
        "src": "@openzeppelin\\contracts\\interfaces\\IERC1363.sol:16",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "transferAndCall(address,uint256)",
          "transferAndCall(address,uint256,bytes)",
          "transferFromAndCall(address,address,uint256)",
          "transferFromAndCall(address,address,uint256,bytes)",
          "approveAndCall(address,uint256)",
          "approveAndCall(address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\utils\\SafeERC20.sol:19",
        "version": {
          "withMetadata": "4d5aa21551e02fafd7e8e0863ec3bfc2fcfe1250d5cec5955817896d6c5e05c4",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Address.sol:Address": {
        "src": "@openzeppelin\\contracts\\utils\\Address.sol:11",
        "version": {
          "withMetadata": "69a075d4917289a08ca838ba8291f9f039e47da5778b41c00c35bf1b1ec28419",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/Errors.sol:Errors"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:97"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Errors.sol:Errors": {
        "src": "@openzeppelin\\contracts\\utils\\Errors.sol:14",
        "version": {
          "withMetadata": "42072139bd52bf9a3af0fbefb19f69284420288655a62921f71240c9b7664073",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165": {
        "src": "@openzeppelin\\contracts\\utils\\introspection\\IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UpgradeableHYAXRewards.sol:IHyaxToken": {
        "src": "contracts\\UpgradeableHYAXRewards.sol:18",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "symbol()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UpgradeableHYAXRewards.sol:UpgradeableHYAXRewards": {
        "src": "contracts\\UpgradeableHYAXRewards.sol:22",
        "version": {
          "withMetadata": "6ed24c3df8d66edae8d02b3c016959ee95995774fefd0fa5d9697aeb5ad1fa49",
          "withoutMetadata": "8d35c18d65822ff969a7b913b9cf98955002275f2b12259bb2f96ce1384c8067",
          "linkedWithoutMetadata": "8d35c18d65822ff969a7b913b9cf98955002275f2b12259bb2f96ce1384c8067"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:PausableUpgradeable",
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "initialize(address)",
          "addWalletToWhitelist(address,bool,uint256)",
          "updateWhitelistStatus(address,bool)",
          "updateBlacklistStatus(address,bool)",
          "fundSmartContract(uint8,uint256)",
          "withdrawGrowthTokens()",
          "withdrawTeamTokens()",
          "calculateYearForTeamTokens()",
          "updateRewardsBatch(address[],uint256[])",
          "updateRewardsSingle(address,uint256)",
          "withdrawRewardTokens()",
          "withdrawTokensToBurn(uint8,uint256)",
          "updateTeamMemberWallet(address,address)",
          "updateWhiteListerAddress(address)",
          "updateRewardsUpdaterAddress(address)",
          "updateHyaxTokenAddress(address)",
          "updateMaximumBatchSizeForUpdateRewards(uint8)",
          "pause()",
          "unpause()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "hyaxTokenAddress",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:150"
            },
            {
              "label": "hyaxToken",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IHyaxToken)1686",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:152"
            },
            {
              "label": "growthTokensFunded",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:164"
            },
            {
              "label": "growthTokensWithdrawn",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:166"
            },
            {
              "label": "growthTokensInSmartContract",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:168"
            },
            {
              "label": "growthTokensLastWithdrawalTime",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:170"
            },
            {
              "label": "growthTokensStartFundingTime",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:172"
            },
            {
              "label": "growthTokensFundingStarted",
              "offset": 0,
              "slot": "7",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:174"
            },
            {
              "label": "teamTokensFunded",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:185"
            },
            {
              "label": "teamTokensWithdrawn",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:187"
            },
            {
              "label": "teamTokensInSmartContract",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:189"
            },
            {
              "label": "teamTokensStartFundingTime",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:191"
            },
            {
              "label": "teamTokensFundingStarted",
              "offset": 0,
              "slot": "12",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:193"
            },
            {
              "label": "rewardTokensFunded",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:204"
            },
            {
              "label": "rewardTokensDistributed",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:206"
            },
            {
              "label": "rewardTokensWithdrawn",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:208"
            },
            {
              "label": "rewardTokensInSmartContract",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:210"
            },
            {
              "label": "rewardTokensStartFundingTime",
              "offset": 0,
              "slot": "17",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:212"
            },
            {
              "label": "rewardTokensFundingStarted",
              "offset": 0,
              "slot": "18",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:214"
            },
            {
              "label": "whiteListerAddress",
              "offset": 1,
              "slot": "18",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:219"
            },
            {
              "label": "rewardsUpdaterAddress",
              "offset": 0,
              "slot": "19",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:221"
            },
            {
              "label": "maximumBatchSizeForUpdateRewards",
              "offset": 20,
              "slot": "19",
              "type": "t_uint8",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:243"
            },
            {
              "label": "wallets",
              "offset": 0,
              "slot": "20",
              "type": "t_mapping(t_address,t_struct(WalletData)1948_storage)",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:245"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)80_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(OwnableStorage)13_storage": {
              "label": "struct OwnableUpgradeable.OwnableStorage",
              "members": [
                {
                  "label": "_owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(PausableStorage)172_storage": {
              "label": "struct PausableUpgradeable.PausableStorage",
              "members": [
                {
                  "label": "_paused",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(ReentrancyGuardStorage)243_storage": {
              "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
              "members": [
                {
                  "label": "_status",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            },
            "t_contract(IHyaxToken)1686": {
              "label": "contract IHyaxToken",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_struct(WalletData)1948_storage)": {
              "label": "mapping(address => struct UpgradeableHYAXRewards.WalletData)",
              "numberOfBytes": "32"
            },
            "t_struct(WalletData)1948_storage": {
              "label": "struct UpgradeableHYAXRewards.WalletData",
              "members": [
                {
                  "label": "hyaxHoldingAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "hyaxHoldingAmountAtWhitelistTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "totalHyaxRewardsAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "currentRewardsAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "rewardsWithdrawn",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "addedToWhitelistTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "teamTokenWithdrawalTimes",
                  "type": "t_uint8",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "lastRewardsWithdrawalTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "lastRewardsUpdateTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "isTeamWallet",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "isWhitelisted",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "9"
                },
                {
                  "label": "isBlacklisted",
                  "type": "t_bool",
                  "offset": 2,
                  "slot": "9"
                }
              ],
              "numberOfBytes": "320"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {
            "erc7201:openzeppelin.storage.ReentrancyGuard": [
              {
                "contract": "ReentrancyGuardUpgradeable",
                "label": "_status",
                "type": "t_uint256",
                "src": "@openzeppelin\\contracts-upgradeable\\utils\\ReentrancyGuardUpgradeable.sol:43",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Pausable": [
              {
                "contract": "PausableUpgradeable",
                "label": "_paused",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\utils\\PausableUpgradeable.sol:21",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Ownable": [
              {
                "contract": "OwnableUpgradeable",
                "label": "_owner",
                "type": "t_address",
                "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:24",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UpgradeableHYAXRewardsV2.sol:IHyaxToken": {
        "src": "contracts\\UpgradeableHYAXRewardsV2.sol:18",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "symbol()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UpgradeableHYAXRewardsV2.sol:UpgradeableHYAXRewards": {
        "src": "contracts\\UpgradeableHYAXRewardsV2.sol:22",
        "version": {
          "withMetadata": "5bdbc2d5a0a422eaaf1689774ef2dbc65adac16bb4403d0d33f2bfb08923f525",
          "withoutMetadata": "8d35c18d65822ff969a7b913b9cf98955002275f2b12259bb2f96ce1384c8067",
          "linkedWithoutMetadata": "8d35c18d65822ff969a7b913b9cf98955002275f2b12259bb2f96ce1384c8067"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:PausableUpgradeable",
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "initialize(address)",
          "addWalletToWhitelist(address,bool,uint256)",
          "updateWhitelistStatus(address,bool)",
          "updateBlacklistStatus(address,bool)",
          "fundSmartContract(uint8,uint256)",
          "withdrawGrowthTokens()",
          "withdrawTeamTokens()",
          "calculateYearForTeamTokens()",
          "updateRewardsBatch(address[],uint256[])",
          "updateRewardsSingle(address,uint256)",
          "withdrawRewardTokens()",
          "withdrawTokensToBurn(uint8,uint256)",
          "updateTeamMemberWallet(address,address)",
          "updateWhiteListerAddress(address)",
          "updateRewardsUpdaterAddress(address)",
          "updateHyaxTokenAddress(address)",
          "updateMaximumBatchSizeForUpdateRewards(uint8)",
          "pause()",
          "unpause()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "hyaxTokenAddress",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewardsV2.sol:150"
            },
            {
              "label": "hyaxToken",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IHyaxToken)3700",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewardsV2.sol:152"
            },
            {
              "label": "growthTokensFunded",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewardsV2.sol:164"
            },
            {
              "label": "growthTokensWithdrawn",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewardsV2.sol:166"
            },
            {
              "label": "growthTokensInSmartContract",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewardsV2.sol:168"
            },
            {
              "label": "growthTokensLastWithdrawalTime",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewardsV2.sol:170"
            },
            {
              "label": "growthTokensStartFundingTime",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewardsV2.sol:172"
            },
            {
              "label": "growthTokensFundingStarted",
              "offset": 0,
              "slot": "7",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewardsV2.sol:174"
            },
            {
              "label": "teamTokensFunded",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewardsV2.sol:185"
            },
            {
              "label": "teamTokensWithdrawn",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewardsV2.sol:187"
            },
            {
              "label": "teamTokensInSmartContract",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewardsV2.sol:189"
            },
            {
              "label": "teamTokensStartFundingTime",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewardsV2.sol:191"
            },
            {
              "label": "teamTokensFundingStarted",
              "offset": 0,
              "slot": "12",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewardsV2.sol:193"
            },
            {
              "label": "rewardTokensFunded",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewardsV2.sol:204"
            },
            {
              "label": "rewardTokensDistributed",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewardsV2.sol:206"
            },
            {
              "label": "rewardTokensWithdrawn",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewardsV2.sol:208"
            },
            {
              "label": "rewardTokensInSmartContract",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewardsV2.sol:210"
            },
            {
              "label": "rewardTokensStartFundingTime",
              "offset": 0,
              "slot": "17",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewardsV2.sol:212"
            },
            {
              "label": "rewardTokensFundingStarted",
              "offset": 0,
              "slot": "18",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewardsV2.sol:214"
            },
            {
              "label": "whiteListerAddress",
              "offset": 1,
              "slot": "18",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewardsV2.sol:219"
            },
            {
              "label": "rewardsUpdaterAddress",
              "offset": 0,
              "slot": "19",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewardsV2.sol:221"
            },
            {
              "label": "maximumBatchSizeForUpdateRewards",
              "offset": 20,
              "slot": "19",
              "type": "t_uint8",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewardsV2.sol:243"
            },
            {
              "label": "wallets",
              "offset": 0,
              "slot": "20",
              "type": "t_mapping(t_address,t_struct(WalletData)3962_storage)",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewardsV2.sol:245"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)80_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(OwnableStorage)13_storage": {
              "label": "struct OwnableUpgradeable.OwnableStorage",
              "members": [
                {
                  "label": "_owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(PausableStorage)172_storage": {
              "label": "struct PausableUpgradeable.PausableStorage",
              "members": [
                {
                  "label": "_paused",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(ReentrancyGuardStorage)243_storage": {
              "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
              "members": [
                {
                  "label": "_status",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            },
            "t_contract(IHyaxToken)3700": {
              "label": "contract IHyaxToken",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_struct(WalletData)3962_storage)": {
              "label": "mapping(address => struct UpgradeableHYAXRewards.WalletData)",
              "numberOfBytes": "32"
            },
            "t_struct(WalletData)3962_storage": {
              "label": "struct UpgradeableHYAXRewards.WalletData",
              "members": [
                {
                  "label": "hyaxHoldingAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "hyaxHoldingAmountAtWhitelistTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "totalHyaxRewardsAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "currentRewardsAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "rewardsWithdrawn",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "addedToWhitelistTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "teamTokenWithdrawalTimes",
                  "type": "t_uint8",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "lastRewardsWithdrawalTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "lastRewardsUpdateTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "isTeamWallet",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "isWhitelisted",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "9"
                },
                {
                  "label": "isBlacklisted",
                  "type": "t_bool",
                  "offset": 2,
                  "slot": "9"
                }
              ],
              "numberOfBytes": "320"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {
            "erc7201:openzeppelin.storage.ReentrancyGuard": [
              {
                "contract": "ReentrancyGuardUpgradeable",
                "label": "_status",
                "type": "t_uint256",
                "src": "@openzeppelin\\contracts-upgradeable\\utils\\ReentrancyGuardUpgradeable.sol:43",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Pausable": [
              {
                "contract": "PausableUpgradeable",
                "label": "_paused",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\utils\\PausableUpgradeable.sol:21",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Ownable": [
              {
                "contract": "OwnableUpgradeable",
                "label": "_owner",
                "type": "t_address",
                "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:24",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      }
    },
    {
      "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)80_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(OwnableStorage)13_storage": {
              "label": "struct OwnableUpgradeable.OwnableStorage",
              "members": [
                {
                  "label": "_owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Ownable": [
              {
                "contract": "OwnableUpgradeable",
                "label": "_owner",
                "type": "t_address",
                "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:24",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable": {
        "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:56",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)80_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:17",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)80_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:PausableUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\PausableUpgradeable.sol:18",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)80_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(PausableStorage)172_storage": {
              "label": "struct PausableUpgradeable.PausableStorage",
              "members": [
                {
                  "label": "_paused",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Pausable": [
              {
                "contract": "PausableUpgradeable",
                "label": "_paused",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\utils\\PausableUpgradeable.sol:21",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\ReentrancyGuardUpgradeable.sol:26",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)80_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(ReentrancyGuardStorage)243_storage": {
              "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
              "members": [
                {
                  "label": "_status",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.ReentrancyGuard": [
              {
                "contract": "ReentrancyGuardUpgradeable",
                "label": "_status",
                "type": "t_uint256",
                "src": "@openzeppelin\\contracts-upgradeable\\utils\\ReentrancyGuardUpgradeable.sol:43",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UpgradeableHYAXRewards.sol:ERC20TokenInterface": {
        "src": "contracts\\UpgradeableHYAXRewards.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "balanceOf(address)",
          "symbol()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UpgradeableHYAXRewards.sol:UpgradeableHYAXRewards": {
        "src": "contracts\\UpgradeableHYAXRewards.sol:23",
        "version": {
          "withMetadata": "0921d37f9463eda112f1e63545933430234063251f61b4c61c76287e93a57abb",
          "withoutMetadata": "2b313113f2eed56ba4bab01846da25db3b0f84f8690362b3d626c2597db9a4a8",
          "linkedWithoutMetadata": "2b313113f2eed56ba4bab01846da25db3b0f84f8690362b3d626c2597db9a4a8"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:PausableUpgradeable",
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "initialize(address)",
          "addWalletToWhitelist(address,bool,uint256)",
          "updateWhitelistStatus(address,bool)",
          "updateBlacklistStatus(address,bool)",
          "fundSmartContract(uint8,uint256)",
          "withdrawGrowthTokens()",
          "withdrawTeamTokens()",
          "calculateYearForTeamTokens()",
          "updateRewardsBatch(address[],uint256[])",
          "updateRewardsSingle(address,uint256)",
          "withdrawRewardTokens()",
          "withdrawTokensToBurn(uint8,uint256)",
          "updateTeamMemberWallet(address,address)",
          "updateWhiteListerAddress(address)",
          "updateRewardsUpdaterAddress(address)",
          "updateHyaxTokenAddress(address)",
          "updateMaximumBatchSizeForUpdateRewards(uint8)",
          "pause()",
          "unpause()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "hyaxTokenAddress",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:151"
            },
            {
              "label": "hyaxToken",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(ERC20TokenInterface)839",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:153"
            },
            {
              "label": "growthTokensFunded",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:165"
            },
            {
              "label": "growthTokensWithdrawn",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:167"
            },
            {
              "label": "growthTokensInSmartContract",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:169"
            },
            {
              "label": "growthTokensLastWithdrawalTime",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:171"
            },
            {
              "label": "growthTokensStartFundingTime",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:173"
            },
            {
              "label": "growthTokensFundingStarted",
              "offset": 0,
              "slot": "7",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:175"
            },
            {
              "label": "teamTokensFunded",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:186"
            },
            {
              "label": "teamTokensWithdrawn",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:188"
            },
            {
              "label": "teamTokensInSmartContract",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:190"
            },
            {
              "label": "teamTokensStartFundingTime",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:192"
            },
            {
              "label": "teamTokensFundingStarted",
              "offset": 0,
              "slot": "12",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:194"
            },
            {
              "label": "rewardTokensFunded",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:205"
            },
            {
              "label": "rewardTokensDistributed",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:207"
            },
            {
              "label": "rewardTokensWithdrawn",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:209"
            },
            {
              "label": "rewardTokensInSmartContract",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:211"
            },
            {
              "label": "rewardTokensStartFundingTime",
              "offset": 0,
              "slot": "17",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:213"
            },
            {
              "label": "rewardTokensFundingStarted",
              "offset": 0,
              "slot": "18",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:215"
            },
            {
              "label": "whiteListerAddress",
              "offset": 1,
              "slot": "18",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:220"
            },
            {
              "label": "rewardsUpdaterAddress",
              "offset": 0,
              "slot": "19",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:222"
            },
            {
              "label": "maximumBatchSizeForUpdateRewards",
              "offset": 20,
              "slot": "19",
              "type": "t_uint8",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:244"
            },
            {
              "label": "wallets",
              "offset": 0,
              "slot": "20",
              "type": "t_mapping(t_address,t_struct(WalletData)1101_storage)",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:246"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)80_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(OwnableStorage)13_storage": {
              "label": "struct OwnableUpgradeable.OwnableStorage",
              "members": [
                {
                  "label": "_owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(PausableStorage)172_storage": {
              "label": "struct PausableUpgradeable.PausableStorage",
              "members": [
                {
                  "label": "_paused",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(ReentrancyGuardStorage)243_storage": {
              "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
              "members": [
                {
                  "label": "_status",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            },
            "t_contract(ERC20TokenInterface)839": {
              "label": "contract ERC20TokenInterface",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_struct(WalletData)1101_storage)": {
              "label": "mapping(address => struct UpgradeableHYAXRewards.WalletData)",
              "numberOfBytes": "32"
            },
            "t_struct(WalletData)1101_storage": {
              "label": "struct UpgradeableHYAXRewards.WalletData",
              "members": [
                {
                  "label": "hyaxHoldingAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "hyaxHoldingAmountAtWhitelistTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "totalHyaxRewardsAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "currentRewardsAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "rewardsWithdrawn",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "addedToWhitelistTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "teamTokenWithdrawalTimes",
                  "type": "t_uint8",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "lastRewardsWithdrawalTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "lastRewardsUpdateTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "isTeamWallet",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "isWhitelisted",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "9"
                },
                {
                  "label": "isBlacklisted",
                  "type": "t_bool",
                  "offset": 2,
                  "slot": "9"
                }
              ],
              "numberOfBytes": "320"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {
            "erc7201:openzeppelin.storage.ReentrancyGuard": [
              {
                "contract": "ReentrancyGuardUpgradeable",
                "label": "_status",
                "type": "t_uint256",
                "src": "@openzeppelin\\contracts-upgradeable\\utils\\ReentrancyGuardUpgradeable.sol:43",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Pausable": [
              {
                "contract": "PausableUpgradeable",
                "label": "_paused",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\utils\\PausableUpgradeable.sol:21",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Ownable": [
              {
                "contract": "OwnableUpgradeable",
                "label": "_owner",
                "type": "t_address",
                "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:24",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "hardhat/console.sol:console": {
        "src": "hardhat\\console.sol:4",
        "version": {
          "withMetadata": "b1be11c3bf90cff557541588c2ae5cd66dca02f69e0972ceeb9da182ee9131c5",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      }
    },
    {
      "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)80_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(OwnableStorage)13_storage": {
              "label": "struct OwnableUpgradeable.OwnableStorage",
              "members": [
                {
                  "label": "_owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Ownable": [
              {
                "contract": "OwnableUpgradeable",
                "label": "_owner",
                "type": "t_address",
                "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:24",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable": {
        "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:56",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)80_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:17",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)80_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:PausableUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\PausableUpgradeable.sol:18",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)80_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(PausableStorage)172_storage": {
              "label": "struct PausableUpgradeable.PausableStorage",
              "members": [
                {
                  "label": "_paused",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Pausable": [
              {
                "contract": "PausableUpgradeable",
                "label": "_paused",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\utils\\PausableUpgradeable.sol:21",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\ReentrancyGuardUpgradeable.sol:26",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)80_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(ReentrancyGuardStorage)243_storage": {
              "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
              "members": [
                {
                  "label": "_status",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.ReentrancyGuard": [
              {
                "contract": "ReentrancyGuardUpgradeable",
                "label": "_status",
                "type": "t_uint256",
                "src": "@openzeppelin\\contracts-upgradeable\\utils\\ReentrancyGuardUpgradeable.sol:43",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UpgradeableHYAXRewards.sol:ERC20TokenInterface": {
        "src": "contracts\\UpgradeableHYAXRewards.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "balanceOf(address)",
          "symbol()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UpgradeableHYAXRewards.sol:UpgradeableHYAXRewards": {
        "src": "contracts\\UpgradeableHYAXRewards.sol:23",
        "version": {
          "withMetadata": "4dbcadc04faabe47e970d4720a28a1ce85b9c6bab82a472f07ae5501b2a14046",
          "withoutMetadata": "22db352e7329bfb0a7ecd9e2e860ecf82def6b9642f3dac23382bdca4970a155",
          "linkedWithoutMetadata": "22db352e7329bfb0a7ecd9e2e860ecf82def6b9642f3dac23382bdca4970a155"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:PausableUpgradeable",
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "initialize(address)",
          "addWalletToWhitelist(address,bool,uint256)",
          "updateWhitelistStatus(address,bool)",
          "updateBlacklistStatus(address,bool)",
          "fundSmartContract(uint8,uint256)",
          "withdrawGrowthTokens()",
          "withdrawTeamTokens()",
          "calculateYearForTeamTokens()",
          "updateRewardsBatch(address[],uint256[])",
          "updateRewardsSingle(address,uint256)",
          "withdrawRewardTokens()",
          "withdrawTokensToBurn(uint8,uint256)",
          "updateTeamMemberWallet(address,address)",
          "updateWhiteListerAddress(address)",
          "updateRewardsUpdaterAddress(address)",
          "updateHyaxTokenAddress(address)",
          "updateMaximumBatchSizeForUpdateRewards(uint8)",
          "pause()",
          "unpause()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "hyaxTokenAddress",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:151"
            },
            {
              "label": "hyaxToken",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(ERC20TokenInterface)839",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:153"
            },
            {
              "label": "growthTokensFunded",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:165"
            },
            {
              "label": "growthTokensWithdrawn",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:167"
            },
            {
              "label": "growthTokensInSmartContract",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:169"
            },
            {
              "label": "growthTokensLastWithdrawalTime",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:171"
            },
            {
              "label": "growthTokensStartFundingTime",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:173"
            },
            {
              "label": "growthTokensFundingStarted",
              "offset": 0,
              "slot": "7",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:175"
            },
            {
              "label": "teamTokensFunded",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:186"
            },
            {
              "label": "teamTokensWithdrawn",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:188"
            },
            {
              "label": "teamTokensInSmartContract",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:190"
            },
            {
              "label": "teamTokensStartFundingTime",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:192"
            },
            {
              "label": "teamTokensFundingStarted",
              "offset": 0,
              "slot": "12",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:194"
            },
            {
              "label": "rewardTokensFunded",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:205"
            },
            {
              "label": "rewardTokensDistributed",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:207"
            },
            {
              "label": "rewardTokensWithdrawn",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:209"
            },
            {
              "label": "rewardTokensInSmartContract",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:211"
            },
            {
              "label": "rewardTokensStartFundingTime",
              "offset": 0,
              "slot": "17",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:213"
            },
            {
              "label": "rewardTokensFundingStarted",
              "offset": 0,
              "slot": "18",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:215"
            },
            {
              "label": "whiteListerAddress",
              "offset": 1,
              "slot": "18",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:220"
            },
            {
              "label": "rewardsUpdaterAddress",
              "offset": 0,
              "slot": "19",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:222"
            },
            {
              "label": "maximumBatchSizeForUpdateRewards",
              "offset": 20,
              "slot": "19",
              "type": "t_uint8",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:244"
            },
            {
              "label": "wallets",
              "offset": 0,
              "slot": "20",
              "type": "t_mapping(t_address,t_struct(WalletData)1101_storage)",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:246"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)80_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(OwnableStorage)13_storage": {
              "label": "struct OwnableUpgradeable.OwnableStorage",
              "members": [
                {
                  "label": "_owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(PausableStorage)172_storage": {
              "label": "struct PausableUpgradeable.PausableStorage",
              "members": [
                {
                  "label": "_paused",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(ReentrancyGuardStorage)243_storage": {
              "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
              "members": [
                {
                  "label": "_status",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            },
            "t_contract(ERC20TokenInterface)839": {
              "label": "contract ERC20TokenInterface",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_struct(WalletData)1101_storage)": {
              "label": "mapping(address => struct UpgradeableHYAXRewards.WalletData)",
              "numberOfBytes": "32"
            },
            "t_struct(WalletData)1101_storage": {
              "label": "struct UpgradeableHYAXRewards.WalletData",
              "members": [
                {
                  "label": "hyaxHoldingAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "hyaxHoldingAmountAtWhitelistTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "totalHyaxRewardsAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "currentRewardsAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "rewardsWithdrawn",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "addedToWhitelistTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "teamTokenWithdrawalTimes",
                  "type": "t_uint8",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "lastRewardsWithdrawalTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "lastRewardsUpdateTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "isTeamWallet",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "isWhitelisted",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "9"
                },
                {
                  "label": "isBlacklisted",
                  "type": "t_bool",
                  "offset": 2,
                  "slot": "9"
                }
              ],
              "numberOfBytes": "320"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {
            "erc7201:openzeppelin.storage.ReentrancyGuard": [
              {
                "contract": "ReentrancyGuardUpgradeable",
                "label": "_status",
                "type": "t_uint256",
                "src": "@openzeppelin\\contracts-upgradeable\\utils\\ReentrancyGuardUpgradeable.sol:43",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Pausable": [
              {
                "contract": "PausableUpgradeable",
                "label": "_paused",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\utils\\PausableUpgradeable.sol:21",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Ownable": [
              {
                "contract": "OwnableUpgradeable",
                "label": "_owner",
                "type": "t_address",
                "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:24",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "hardhat/console.sol:console": {
        "src": "hardhat\\console.sol:4",
        "version": {
          "withMetadata": "b1be11c3bf90cff557541588c2ae5cd66dca02f69e0972ceeb9da182ee9131c5",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      }
    },
    {
      "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)80_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(OwnableStorage)13_storage": {
              "label": "struct OwnableUpgradeable.OwnableStorage",
              "members": [
                {
                  "label": "_owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Ownable": [
              {
                "contract": "OwnableUpgradeable",
                "label": "_owner",
                "type": "t_address",
                "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:24",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable": {
        "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:56",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)80_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:17",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)80_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:PausableUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\PausableUpgradeable.sol:18",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)80_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(PausableStorage)172_storage": {
              "label": "struct PausableUpgradeable.PausableStorage",
              "members": [
                {
                  "label": "_paused",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Pausable": [
              {
                "contract": "PausableUpgradeable",
                "label": "_paused",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\utils\\PausableUpgradeable.sol:21",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\ReentrancyGuardUpgradeable.sol:26",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)80_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(ReentrancyGuardStorage)243_storage": {
              "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
              "members": [
                {
                  "label": "_status",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.ReentrancyGuard": [
              {
                "contract": "ReentrancyGuardUpgradeable",
                "label": "_status",
                "type": "t_uint256",
                "src": "@openzeppelin\\contracts-upgradeable\\utils\\ReentrancyGuardUpgradeable.sol:43",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UpgradeableHYAXRewards.sol:ERC20TokenInterface": {
        "src": "contracts\\UpgradeableHYAXRewards.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "balanceOf(address)",
          "symbol()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UpgradeableHYAXRewards.sol:UpgradeableHYAXRewards": {
        "src": "contracts\\UpgradeableHYAXRewards.sol:23",
        "version": {
          "withMetadata": "82db74484eff21498d84ea13b69782d7818c9cd074373a34faaa08a3390edb15",
          "withoutMetadata": "f1e32b2c9c86a0379c2f4214a6596c961279af6f2725eb32640298eb670b8682",
          "linkedWithoutMetadata": "f1e32b2c9c86a0379c2f4214a6596c961279af6f2725eb32640298eb670b8682"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:PausableUpgradeable",
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "initialize(address)",
          "addWalletToWhitelist(address,bool,uint256)",
          "updateWhitelistStatus(address,bool)",
          "updateBlacklistStatus(address,bool)",
          "fundSmartContract(uint8,uint256)",
          "withdrawGrowthTokens()",
          "withdrawTeamTokens()",
          "calculateYearForTeamTokens()",
          "updateRewardsBatch(address[],uint256[])",
          "updateRewardsSingle(address,uint256)",
          "withdrawRewardTokens()",
          "withdrawTokensToBurn(uint8,uint256)",
          "recoverTeamTokens(address,address)",
          "updateWhiteListerAddress(address)",
          "updateRewardsUpdaterAddress(address)",
          "updateHyaxTokenAddress(address)",
          "updateMaximumBatchSizeForUpdateRewards(uint8)",
          "pause()",
          "unpause()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "hyaxTokenAddress",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:151"
            },
            {
              "label": "hyaxToken",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(ERC20TokenInterface)839",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:153"
            },
            {
              "label": "growthTokensFunded",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:165"
            },
            {
              "label": "growthTokensWithdrawn",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:167"
            },
            {
              "label": "growthTokensInSmartContract",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:169"
            },
            {
              "label": "growthTokensLastWithdrawalTime",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:171"
            },
            {
              "label": "growthTokensStartFundingTime",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:173"
            },
            {
              "label": "growthTokensFundingStarted",
              "offset": 0,
              "slot": "7",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:175"
            },
            {
              "label": "teamTokensFunded",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:186"
            },
            {
              "label": "teamTokensWithdrawn",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:188"
            },
            {
              "label": "teamTokensInSmartContract",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:190"
            },
            {
              "label": "teamTokensStartFundingTime",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:192"
            },
            {
              "label": "teamTokensFundingStarted",
              "offset": 0,
              "slot": "12",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:194"
            },
            {
              "label": "rewardTokensFunded",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:205"
            },
            {
              "label": "rewardTokensDistributed",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:207"
            },
            {
              "label": "rewardTokensWithdrawn",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:209"
            },
            {
              "label": "rewardTokensInSmartContract",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:211"
            },
            {
              "label": "rewardTokensStartFundingTime",
              "offset": 0,
              "slot": "17",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:213"
            },
            {
              "label": "rewardTokensFundingStarted",
              "offset": 0,
              "slot": "18",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:215"
            },
            {
              "label": "whiteListerAddress",
              "offset": 1,
              "slot": "18",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:220"
            },
            {
              "label": "rewardsUpdaterAddress",
              "offset": 0,
              "slot": "19",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:222"
            },
            {
              "label": "maximumBatchSizeForUpdateRewards",
              "offset": 20,
              "slot": "19",
              "type": "t_uint8",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:244"
            },
            {
              "label": "wallets",
              "offset": 0,
              "slot": "20",
              "type": "t_mapping(t_address,t_struct(WalletData)1101_storage)",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:246"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)80_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(OwnableStorage)13_storage": {
              "label": "struct OwnableUpgradeable.OwnableStorage",
              "members": [
                {
                  "label": "_owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(PausableStorage)172_storage": {
              "label": "struct PausableUpgradeable.PausableStorage",
              "members": [
                {
                  "label": "_paused",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(ReentrancyGuardStorage)243_storage": {
              "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
              "members": [
                {
                  "label": "_status",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            },
            "t_contract(ERC20TokenInterface)839": {
              "label": "contract ERC20TokenInterface",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_struct(WalletData)1101_storage)": {
              "label": "mapping(address => struct UpgradeableHYAXRewards.WalletData)",
              "numberOfBytes": "32"
            },
            "t_struct(WalletData)1101_storage": {
              "label": "struct UpgradeableHYAXRewards.WalletData",
              "members": [
                {
                  "label": "hyaxHoldingAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "hyaxHoldingAmountAtWhitelistTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "totalHyaxRewardsAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "currentRewardsAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "rewardsWithdrawn",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "addedToWhitelistTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "teamTokenWithdrawalTimes",
                  "type": "t_uint8",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "lastRewardsWithdrawalTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "lastRewardsUpdateTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "isTeamWallet",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "isWhitelisted",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "9"
                },
                {
                  "label": "isBlacklisted",
                  "type": "t_bool",
                  "offset": 2,
                  "slot": "9"
                }
              ],
              "numberOfBytes": "320"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {
            "erc7201:openzeppelin.storage.ReentrancyGuard": [
              {
                "contract": "ReentrancyGuardUpgradeable",
                "label": "_status",
                "type": "t_uint256",
                "src": "@openzeppelin\\contracts-upgradeable\\utils\\ReentrancyGuardUpgradeable.sol:43",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Pausable": [
              {
                "contract": "PausableUpgradeable",
                "label": "_paused",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\utils\\PausableUpgradeable.sol:21",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Ownable": [
              {
                "contract": "OwnableUpgradeable",
                "label": "_owner",
                "type": "t_address",
                "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:24",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "hardhat/console.sol:console": {
        "src": "hardhat\\console.sol:4",
        "version": {
          "withMetadata": "b1be11c3bf90cff557541588c2ae5cd66dca02f69e0972ceeb9da182ee9131c5",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      }
    },
    {
      "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)80_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(OwnableStorage)13_storage": {
              "label": "struct OwnableUpgradeable.OwnableStorage",
              "members": [
                {
                  "label": "_owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Ownable": [
              {
                "contract": "OwnableUpgradeable",
                "label": "_owner",
                "type": "t_address",
                "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:24",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable": {
        "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:56",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)80_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:17",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)80_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:PausableUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\PausableUpgradeable.sol:18",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)80_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(PausableStorage)172_storage": {
              "label": "struct PausableUpgradeable.PausableStorage",
              "members": [
                {
                  "label": "_paused",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Pausable": [
              {
                "contract": "PausableUpgradeable",
                "label": "_paused",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\utils\\PausableUpgradeable.sol:21",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\ReentrancyGuardUpgradeable.sol:26",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)80_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(ReentrancyGuardStorage)243_storage": {
              "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
              "members": [
                {
                  "label": "_status",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.ReentrancyGuard": [
              {
                "contract": "ReentrancyGuardUpgradeable",
                "label": "_status",
                "type": "t_uint256",
                "src": "@openzeppelin\\contracts-upgradeable\\utils\\ReentrancyGuardUpgradeable.sol:43",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UpgradeableHYAXRewards.sol:ERC20TokenInterface": {
        "src": "contracts\\UpgradeableHYAXRewards.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "balanceOf(address)",
          "symbol()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UpgradeableHYAXRewards.sol:UpgradeableHYAXRewards": {
        "src": "contracts\\UpgradeableHYAXRewards.sol:23",
        "version": {
          "withMetadata": "82db74484eff21498d84ea13b69782d7818c9cd074373a34faaa08a3390edb15",
          "withoutMetadata": "f1e32b2c9c86a0379c2f4214a6596c961279af6f2725eb32640298eb670b8682",
          "linkedWithoutMetadata": "f1e32b2c9c86a0379c2f4214a6596c961279af6f2725eb32640298eb670b8682"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:PausableUpgradeable",
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "initialize(address)",
          "addWalletToWhitelist(address,bool,uint256)",
          "updateWhitelistStatus(address,bool)",
          "updateBlacklistStatus(address,bool)",
          "fundSmartContract(uint8,uint256)",
          "withdrawGrowthTokens()",
          "withdrawTeamTokens()",
          "calculateYearForTeamTokens()",
          "updateRewardsBatch(address[],uint256[])",
          "updateRewardsSingle(address,uint256)",
          "withdrawRewardTokens()",
          "withdrawTokensToBurn(uint8,uint256)",
          "recoverTeamTokens(address,address)",
          "updateWhiteListerAddress(address)",
          "updateRewardsUpdaterAddress(address)",
          "updateHyaxTokenAddress(address)",
          "updateMaximumBatchSizeForUpdateRewards(uint8)",
          "pause()",
          "unpause()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "hyaxTokenAddress",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:151"
            },
            {
              "label": "hyaxToken",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(ERC20TokenInterface)839",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:153"
            },
            {
              "label": "growthTokensFunded",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:165"
            },
            {
              "label": "growthTokensWithdrawn",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:167"
            },
            {
              "label": "growthTokensInSmartContract",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:169"
            },
            {
              "label": "growthTokensLastWithdrawalTime",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:171"
            },
            {
              "label": "growthTokensStartFundingTime",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:173"
            },
            {
              "label": "growthTokensFundingStarted",
              "offset": 0,
              "slot": "7",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:175"
            },
            {
              "label": "teamTokensFunded",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:186"
            },
            {
              "label": "teamTokensWithdrawn",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:188"
            },
            {
              "label": "teamTokensInSmartContract",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:190"
            },
            {
              "label": "teamTokensStartFundingTime",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:192"
            },
            {
              "label": "teamTokensFundingStarted",
              "offset": 0,
              "slot": "12",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:194"
            },
            {
              "label": "rewardTokensFunded",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:205"
            },
            {
              "label": "rewardTokensDistributed",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:207"
            },
            {
              "label": "rewardTokensWithdrawn",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:209"
            },
            {
              "label": "rewardTokensInSmartContract",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:211"
            },
            {
              "label": "rewardTokensStartFundingTime",
              "offset": 0,
              "slot": "17",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:213"
            },
            {
              "label": "rewardTokensFundingStarted",
              "offset": 0,
              "slot": "18",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:215"
            },
            {
              "label": "whiteListerAddress",
              "offset": 1,
              "slot": "18",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:220"
            },
            {
              "label": "rewardsUpdaterAddress",
              "offset": 0,
              "slot": "19",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:222"
            },
            {
              "label": "maximumBatchSizeForUpdateRewards",
              "offset": 20,
              "slot": "19",
              "type": "t_uint8",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:244"
            },
            {
              "label": "wallets",
              "offset": 0,
              "slot": "20",
              "type": "t_mapping(t_address,t_struct(WalletData)1101_storage)",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:246"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)80_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(OwnableStorage)13_storage": {
              "label": "struct OwnableUpgradeable.OwnableStorage",
              "members": [
                {
                  "label": "_owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(PausableStorage)172_storage": {
              "label": "struct PausableUpgradeable.PausableStorage",
              "members": [
                {
                  "label": "_paused",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(ReentrancyGuardStorage)243_storage": {
              "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
              "members": [
                {
                  "label": "_status",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            },
            "t_contract(ERC20TokenInterface)839": {
              "label": "contract ERC20TokenInterface",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_struct(WalletData)1101_storage)": {
              "label": "mapping(address => struct UpgradeableHYAXRewards.WalletData)",
              "numberOfBytes": "32"
            },
            "t_struct(WalletData)1101_storage": {
              "label": "struct UpgradeableHYAXRewards.WalletData",
              "members": [
                {
                  "label": "hyaxHoldingAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "hyaxHoldingAmountAtWhitelistTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "totalHyaxRewardsAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "currentRewardsAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "rewardsWithdrawn",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "addedToWhitelistTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "teamTokenWithdrawalTimes",
                  "type": "t_uint8",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "lastRewardsWithdrawalTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "lastRewardsUpdateTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "isTeamWallet",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "isWhitelisted",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "9"
                },
                {
                  "label": "isBlacklisted",
                  "type": "t_bool",
                  "offset": 2,
                  "slot": "9"
                }
              ],
              "numberOfBytes": "320"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {
            "erc7201:openzeppelin.storage.ReentrancyGuard": [
              {
                "contract": "ReentrancyGuardUpgradeable",
                "label": "_status",
                "type": "t_uint256",
                "src": "@openzeppelin\\contracts-upgradeable\\utils\\ReentrancyGuardUpgradeable.sol:43",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Pausable": [
              {
                "contract": "PausableUpgradeable",
                "label": "_paused",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\utils\\PausableUpgradeable.sol:21",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Ownable": [
              {
                "contract": "OwnableUpgradeable",
                "label": "_owner",
                "type": "t_address",
                "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:24",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "hardhat/console.sol:console": {
        "src": "hardhat\\console.sol:4",
        "version": {
          "withMetadata": "b1be11c3bf90cff557541588c2ae5cd66dca02f69e0972ceeb9da182ee9131c5",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      }
    },
    {
      "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)80_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(OwnableStorage)13_storage": {
              "label": "struct OwnableUpgradeable.OwnableStorage",
              "members": [
                {
                  "label": "_owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Ownable": [
              {
                "contract": "OwnableUpgradeable",
                "label": "_owner",
                "type": "t_address",
                "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:24",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable": {
        "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:56",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)80_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:17",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)80_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:PausableUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\PausableUpgradeable.sol:18",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)80_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(PausableStorage)172_storage": {
              "label": "struct PausableUpgradeable.PausableStorage",
              "members": [
                {
                  "label": "_paused",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Pausable": [
              {
                "contract": "PausableUpgradeable",
                "label": "_paused",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\utils\\PausableUpgradeable.sol:21",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\ReentrancyGuardUpgradeable.sol:26",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)80_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(ReentrancyGuardStorage)243_storage": {
              "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
              "members": [
                {
                  "label": "_status",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.ReentrancyGuard": [
              {
                "contract": "ReentrancyGuardUpgradeable",
                "label": "_status",
                "type": "t_uint256",
                "src": "@openzeppelin\\contracts-upgradeable\\utils\\ReentrancyGuardUpgradeable.sol:43",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UpgradeableHYAXRewards.sol:ERC20TokenInterface": {
        "src": "contracts\\UpgradeableHYAXRewards.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "balanceOf(address)",
          "symbol()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UpgradeableHYAXRewards.sol:UpgradeableHYAXRewards": {
        "src": "contracts\\UpgradeableHYAXRewards.sol:23",
        "version": {
          "withMetadata": "67e58d07b5295949b4275512c4b1181bbf57fc1a35384e26cc5da966998d9e0e",
          "withoutMetadata": "f1e32b2c9c86a0379c2f4214a6596c961279af6f2725eb32640298eb670b8682",
          "linkedWithoutMetadata": "f1e32b2c9c86a0379c2f4214a6596c961279af6f2725eb32640298eb670b8682"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:PausableUpgradeable",
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "initialize(address)",
          "addWalletToWhitelist(address,bool,uint256)",
          "updateWhitelistStatus(address,bool)",
          "updateBlacklistStatus(address,bool)",
          "fundSmartContract(uint8,uint256)",
          "withdrawGrowthTokens()",
          "withdrawTeamTokens()",
          "calculateYearForTeamTokens()",
          "updateRewardsBatch(address[],uint256[])",
          "updateRewardsSingle(address,uint256)",
          "withdrawRewardTokens()",
          "withdrawTokensToBurn(uint8,uint256)",
          "recoverTeamTokens(address,address)",
          "updateWhiteListerAddress(address)",
          "updateRewardsUpdaterAddress(address)",
          "updateHyaxTokenAddress(address)",
          "updateMaximumBatchSizeForUpdateRewards(uint8)",
          "pause()",
          "unpause()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "hyaxTokenAddress",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:151"
            },
            {
              "label": "hyaxToken",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(ERC20TokenInterface)839",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:153"
            },
            {
              "label": "growthTokensFunded",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:165"
            },
            {
              "label": "growthTokensWithdrawn",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:167"
            },
            {
              "label": "growthTokensInSmartContract",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:169"
            },
            {
              "label": "growthTokensLastWithdrawalTime",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:171"
            },
            {
              "label": "growthTokensStartFundingTime",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:173"
            },
            {
              "label": "growthTokensFundingStarted",
              "offset": 0,
              "slot": "7",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:175"
            },
            {
              "label": "teamTokensFunded",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:186"
            },
            {
              "label": "teamTokensWithdrawn",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:188"
            },
            {
              "label": "teamTokensInSmartContract",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:190"
            },
            {
              "label": "teamTokensStartFundingTime",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:192"
            },
            {
              "label": "teamTokensFundingStarted",
              "offset": 0,
              "slot": "12",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:194"
            },
            {
              "label": "rewardTokensFunded",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:205"
            },
            {
              "label": "rewardTokensDistributed",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:207"
            },
            {
              "label": "rewardTokensWithdrawn",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:209"
            },
            {
              "label": "rewardTokensInSmartContract",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:211"
            },
            {
              "label": "rewardTokensStartFundingTime",
              "offset": 0,
              "slot": "17",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:213"
            },
            {
              "label": "rewardTokensFundingStarted",
              "offset": 0,
              "slot": "18",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:215"
            },
            {
              "label": "whiteListerAddress",
              "offset": 1,
              "slot": "18",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:220"
            },
            {
              "label": "rewardsUpdaterAddress",
              "offset": 0,
              "slot": "19",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:222"
            },
            {
              "label": "maximumBatchSizeForUpdateRewards",
              "offset": 20,
              "slot": "19",
              "type": "t_uint8",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:244"
            },
            {
              "label": "wallets",
              "offset": 0,
              "slot": "20",
              "type": "t_mapping(t_address,t_struct(WalletData)1101_storage)",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:246"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)80_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(OwnableStorage)13_storage": {
              "label": "struct OwnableUpgradeable.OwnableStorage",
              "members": [
                {
                  "label": "_owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(PausableStorage)172_storage": {
              "label": "struct PausableUpgradeable.PausableStorage",
              "members": [
                {
                  "label": "_paused",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(ReentrancyGuardStorage)243_storage": {
              "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
              "members": [
                {
                  "label": "_status",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            },
            "t_contract(ERC20TokenInterface)839": {
              "label": "contract ERC20TokenInterface",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_struct(WalletData)1101_storage)": {
              "label": "mapping(address => struct UpgradeableHYAXRewards.WalletData)",
              "numberOfBytes": "32"
            },
            "t_struct(WalletData)1101_storage": {
              "label": "struct UpgradeableHYAXRewards.WalletData",
              "members": [
                {
                  "label": "hyaxHoldingAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "hyaxHoldingAmountAtWhitelistTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "totalHyaxRewardsAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "currentRewardsAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "rewardsWithdrawn",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "addedToWhitelistTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "teamTokenWithdrawalTimes",
                  "type": "t_uint8",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "lastRewardsWithdrawalTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "lastRewardsUpdateTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "isTeamWallet",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "isWhitelisted",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "9"
                },
                {
                  "label": "isBlacklisted",
                  "type": "t_bool",
                  "offset": 2,
                  "slot": "9"
                }
              ],
              "numberOfBytes": "320"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {
            "erc7201:openzeppelin.storage.ReentrancyGuard": [
              {
                "contract": "ReentrancyGuardUpgradeable",
                "label": "_status",
                "type": "t_uint256",
                "src": "@openzeppelin\\contracts-upgradeable\\utils\\ReentrancyGuardUpgradeable.sol:43",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Pausable": [
              {
                "contract": "PausableUpgradeable",
                "label": "_paused",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\utils\\PausableUpgradeable.sol:21",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Ownable": [
              {
                "contract": "OwnableUpgradeable",
                "label": "_owner",
                "type": "t_address",
                "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:24",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "hardhat/console.sol:console": {
        "src": "hardhat\\console.sol:4",
        "version": {
          "withMetadata": "b1be11c3bf90cff557541588c2ae5cd66dca02f69e0972ceeb9da182ee9131c5",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      }
    },
    {
      "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)80_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(OwnableStorage)13_storage": {
              "label": "struct OwnableUpgradeable.OwnableStorage",
              "members": [
                {
                  "label": "_owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Ownable": [
              {
                "contract": "OwnableUpgradeable",
                "label": "_owner",
                "type": "t_address",
                "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:24",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable": {
        "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:56",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)80_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:17",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)80_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:PausableUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\PausableUpgradeable.sol:18",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)80_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(PausableStorage)172_storage": {
              "label": "struct PausableUpgradeable.PausableStorage",
              "members": [
                {
                  "label": "_paused",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Pausable": [
              {
                "contract": "PausableUpgradeable",
                "label": "_paused",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\utils\\PausableUpgradeable.sol:21",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\ReentrancyGuardUpgradeable.sol:26",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)80_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(ReentrancyGuardStorage)243_storage": {
              "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
              "members": [
                {
                  "label": "_status",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.ReentrancyGuard": [
              {
                "contract": "ReentrancyGuardUpgradeable",
                "label": "_status",
                "type": "t_uint256",
                "src": "@openzeppelin\\contracts-upgradeable\\utils\\ReentrancyGuardUpgradeable.sol:43",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UpgradeableHYAXRewards.sol:ERC20TokenInterface": {
        "src": "contracts\\UpgradeableHYAXRewards.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "balanceOf(address)",
          "symbol()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UpgradeableHYAXRewards.sol:UpgradeableHYAXRewards": {
        "src": "contracts\\UpgradeableHYAXRewards.sol:23",
        "version": {
          "withMetadata": "48dbb36e1914cc3958bfce07ed24f431cb1d23abd4bc46c0b1d81a0d56d18243",
          "withoutMetadata": "9941916bc9b4f38d510aa9217b21a7e52faecd42d2bdede5d61dad275173d06a",
          "linkedWithoutMetadata": "9941916bc9b4f38d510aa9217b21a7e52faecd42d2bdede5d61dad275173d06a"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:PausableUpgradeable",
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "initialize(address)",
          "addWalletToWhitelist(address,bool,uint256)",
          "updateWhitelistStatus(address,bool)",
          "updateBlacklistStatus(address,bool)",
          "fundSmartContract(uint8,uint256)",
          "withdrawGrowthTokens()",
          "withdrawTeamTokens()",
          "calculateYearForTeamTokens()",
          "updateRewardsBatch(address[],uint256[])",
          "updateRewardsSingle(address,uint256)",
          "withdrawRewardTokens()",
          "withdrawTokensToBurn(uint8,uint256)",
          "recoverTeamTokens(address,address)",
          "updateWhiteListerAddress(address)",
          "updateRewardsUpdaterAddress(address)",
          "updateHyaxTokenAddress(address)",
          "updateMaximumBatchSizeForUpdateRewards(uint8)",
          "pause()",
          "unpause()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "hyaxTokenAddress",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:151"
            },
            {
              "label": "hyaxToken",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(ERC20TokenInterface)839",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:153"
            },
            {
              "label": "growthTokensFunded",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:165"
            },
            {
              "label": "growthTokensWithdrawn",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:167"
            },
            {
              "label": "growthTokensInSmartContract",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:169"
            },
            {
              "label": "growthTokensLastWithdrawalTime",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:171"
            },
            {
              "label": "growthTokensStartFundingTime",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:173"
            },
            {
              "label": "growthTokensFundingStarted",
              "offset": 0,
              "slot": "7",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:175"
            },
            {
              "label": "teamTokensFunded",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:186"
            },
            {
              "label": "teamTokensWithdrawn",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:188"
            },
            {
              "label": "teamTokensInSmartContract",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:190"
            },
            {
              "label": "teamTokensStartFundingTime",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:192"
            },
            {
              "label": "teamTokensFundingStarted",
              "offset": 0,
              "slot": "12",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:194"
            },
            {
              "label": "rewardTokensFunded",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:205"
            },
            {
              "label": "rewardTokensDistributed",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:207"
            },
            {
              "label": "rewardTokensWithdrawn",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:209"
            },
            {
              "label": "rewardTokensInSmartContract",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:211"
            },
            {
              "label": "rewardTokensStartFundingTime",
              "offset": 0,
              "slot": "17",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:213"
            },
            {
              "label": "rewardTokensFundingStarted",
              "offset": 0,
              "slot": "18",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:215"
            },
            {
              "label": "whiteListerAddress",
              "offset": 1,
              "slot": "18",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:220"
            },
            {
              "label": "rewardsUpdaterAddress",
              "offset": 0,
              "slot": "19",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:222"
            },
            {
              "label": "maximumBatchSizeForUpdateRewards",
              "offset": 20,
              "slot": "19",
              "type": "t_uint8",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:244"
            },
            {
              "label": "wallets",
              "offset": 0,
              "slot": "20",
              "type": "t_mapping(t_address,t_struct(WalletData)1103_storage)",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:246"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)80_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(OwnableStorage)13_storage": {
              "label": "struct OwnableUpgradeable.OwnableStorage",
              "members": [
                {
                  "label": "_owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(PausableStorage)172_storage": {
              "label": "struct PausableUpgradeable.PausableStorage",
              "members": [
                {
                  "label": "_paused",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(ReentrancyGuardStorage)243_storage": {
              "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
              "members": [
                {
                  "label": "_status",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            },
            "t_contract(ERC20TokenInterface)839": {
              "label": "contract ERC20TokenInterface",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_struct(WalletData)1103_storage)": {
              "label": "mapping(address => struct UpgradeableHYAXRewards.WalletData)",
              "numberOfBytes": "32"
            },
            "t_struct(WalletData)1103_storage": {
              "label": "struct UpgradeableHYAXRewards.WalletData",
              "members": [
                {
                  "label": "hyaxHoldingAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "hyaxHoldingAmountAtWhitelistTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "totalHyaxRewardsAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "currentRewardsAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "rewardsWithdrawn",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "addedToWhitelistTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "teamTokenWithdrawalTimes",
                  "type": "t_uint8",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "lastRewardsWithdrawalTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "lastRewardsUpdateTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "isTeamWallet",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "isWhitelisted",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "9"
                },
                {
                  "label": "isBlacklisted",
                  "type": "t_bool",
                  "offset": 2,
                  "slot": "9"
                }
              ],
              "numberOfBytes": "320"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {
            "erc7201:openzeppelin.storage.ReentrancyGuard": [
              {
                "contract": "ReentrancyGuardUpgradeable",
                "label": "_status",
                "type": "t_uint256",
                "src": "@openzeppelin\\contracts-upgradeable\\utils\\ReentrancyGuardUpgradeable.sol:43",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Pausable": [
              {
                "contract": "PausableUpgradeable",
                "label": "_paused",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\utils\\PausableUpgradeable.sol:21",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Ownable": [
              {
                "contract": "OwnableUpgradeable",
                "label": "_owner",
                "type": "t_address",
                "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:24",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "hardhat/console.sol:console": {
        "src": "hardhat\\console.sol:4",
        "version": {
          "withMetadata": "b1be11c3bf90cff557541588c2ae5cd66dca02f69e0972ceeb9da182ee9131c5",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      }
    },
    {
      "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)80_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(OwnableStorage)13_storage": {
              "label": "struct OwnableUpgradeable.OwnableStorage",
              "members": [
                {
                  "label": "_owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Ownable": [
              {
                "contract": "OwnableUpgradeable",
                "label": "_owner",
                "type": "t_address",
                "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:24",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable": {
        "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:56",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)80_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:17",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)80_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:PausableUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\PausableUpgradeable.sol:18",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)80_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(PausableStorage)172_storage": {
              "label": "struct PausableUpgradeable.PausableStorage",
              "members": [
                {
                  "label": "_paused",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Pausable": [
              {
                "contract": "PausableUpgradeable",
                "label": "_paused",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\utils\\PausableUpgradeable.sol:21",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\ReentrancyGuardUpgradeable.sol:26",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)80_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(ReentrancyGuardStorage)243_storage": {
              "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
              "members": [
                {
                  "label": "_status",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.ReentrancyGuard": [
              {
                "contract": "ReentrancyGuardUpgradeable",
                "label": "_status",
                "type": "t_uint256",
                "src": "@openzeppelin\\contracts-upgradeable\\utils\\ReentrancyGuardUpgradeable.sol:43",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UpgradeableHYAXRewards.sol:ERC20TokenInterface": {
        "src": "contracts\\UpgradeableHYAXRewards.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "balanceOf(address)",
          "symbol()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UpgradeableHYAXRewards.sol:UpgradeableHYAXRewards": {
        "src": "contracts\\UpgradeableHYAXRewards.sol:23",
        "version": {
          "withMetadata": "4cea4432c80b88817bb8a5b72ad58f38f38d2f947069d8ac528ed199d524ef25",
          "withoutMetadata": "9941916bc9b4f38d510aa9217b21a7e52faecd42d2bdede5d61dad275173d06a",
          "linkedWithoutMetadata": "9941916bc9b4f38d510aa9217b21a7e52faecd42d2bdede5d61dad275173d06a"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:PausableUpgradeable",
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "initialize(address)",
          "addWalletToWhitelist(address,bool,uint256)",
          "updateWhitelistStatus(address,bool)",
          "updateBlacklistStatus(address,bool)",
          "fundSmartContract(uint8,uint256)",
          "withdrawGrowthTokens()",
          "withdrawTeamTokens()",
          "calculateYearForTeamTokens()",
          "updateRewardsBatch(address[],uint256[])",
          "updateRewardsSingle(address,uint256)",
          "withdrawRewardTokens()",
          "withdrawTokensToBurn(uint8,uint256)",
          "recoverTeamTokens(address,address)",
          "updateWhiteListerAddress(address)",
          "updateRewardsUpdaterAddress(address)",
          "updateHyaxTokenAddress(address)",
          "updateMaximumBatchSizeForUpdateRewards(uint8)",
          "pause()",
          "unpause()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "hyaxTokenAddress",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:151"
            },
            {
              "label": "hyaxToken",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(ERC20TokenInterface)839",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:153"
            },
            {
              "label": "growthTokensFunded",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:165"
            },
            {
              "label": "growthTokensWithdrawn",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:167"
            },
            {
              "label": "growthTokensInSmartContract",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:169"
            },
            {
              "label": "growthTokensLastWithdrawalTime",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:171"
            },
            {
              "label": "growthTokensStartFundingTime",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:173"
            },
            {
              "label": "growthTokensFundingStarted",
              "offset": 0,
              "slot": "7",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:175"
            },
            {
              "label": "teamTokensFunded",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:186"
            },
            {
              "label": "teamTokensWithdrawn",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:188"
            },
            {
              "label": "teamTokensInSmartContract",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:190"
            },
            {
              "label": "teamTokensStartFundingTime",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:192"
            },
            {
              "label": "teamTokensFundingStarted",
              "offset": 0,
              "slot": "12",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:194"
            },
            {
              "label": "rewardTokensFunded",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:205"
            },
            {
              "label": "rewardTokensDistributed",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:207"
            },
            {
              "label": "rewardTokensWithdrawn",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:209"
            },
            {
              "label": "rewardTokensInSmartContract",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:211"
            },
            {
              "label": "rewardTokensStartFundingTime",
              "offset": 0,
              "slot": "17",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:213"
            },
            {
              "label": "rewardTokensFundingStarted",
              "offset": 0,
              "slot": "18",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:215"
            },
            {
              "label": "whiteListerAddress",
              "offset": 1,
              "slot": "18",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:220"
            },
            {
              "label": "rewardsUpdaterAddress",
              "offset": 0,
              "slot": "19",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:222"
            },
            {
              "label": "maximumBatchSizeForUpdateRewards",
              "offset": 20,
              "slot": "19",
              "type": "t_uint8",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:244"
            },
            {
              "label": "wallets",
              "offset": 0,
              "slot": "20",
              "type": "t_mapping(t_address,t_struct(WalletData)1103_storage)",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:246"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)80_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(OwnableStorage)13_storage": {
              "label": "struct OwnableUpgradeable.OwnableStorage",
              "members": [
                {
                  "label": "_owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(PausableStorage)172_storage": {
              "label": "struct PausableUpgradeable.PausableStorage",
              "members": [
                {
                  "label": "_paused",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(ReentrancyGuardStorage)243_storage": {
              "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
              "members": [
                {
                  "label": "_status",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            },
            "t_contract(ERC20TokenInterface)839": {
              "label": "contract ERC20TokenInterface",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_struct(WalletData)1103_storage)": {
              "label": "mapping(address => struct UpgradeableHYAXRewards.WalletData)",
              "numberOfBytes": "32"
            },
            "t_struct(WalletData)1103_storage": {
              "label": "struct UpgradeableHYAXRewards.WalletData",
              "members": [
                {
                  "label": "hyaxHoldingAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "hyaxHoldingAmountAtWhitelistTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "totalHyaxRewardsAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "currentRewardsAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "rewardsWithdrawn",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "addedToWhitelistTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "teamTokenWithdrawalTimes",
                  "type": "t_uint8",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "lastRewardsWithdrawalTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "lastRewardsUpdateTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "isTeamWallet",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "isWhitelisted",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "9"
                },
                {
                  "label": "isBlacklisted",
                  "type": "t_bool",
                  "offset": 2,
                  "slot": "9"
                }
              ],
              "numberOfBytes": "320"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {
            "erc7201:openzeppelin.storage.ReentrancyGuard": [
              {
                "contract": "ReentrancyGuardUpgradeable",
                "label": "_status",
                "type": "t_uint256",
                "src": "@openzeppelin\\contracts-upgradeable\\utils\\ReentrancyGuardUpgradeable.sol:43",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Pausable": [
              {
                "contract": "PausableUpgradeable",
                "label": "_paused",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\utils\\PausableUpgradeable.sol:21",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Ownable": [
              {
                "contract": "OwnableUpgradeable",
                "label": "_owner",
                "type": "t_address",
                "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:24",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "hardhat/console.sol:console": {
        "src": "hardhat\\console.sol:4",
        "version": {
          "withMetadata": "b1be11c3bf90cff557541588c2ae5cd66dca02f69e0972ceeb9da182ee9131c5",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      }
    },
    {
      "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)80_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(OwnableStorage)13_storage": {
              "label": "struct OwnableUpgradeable.OwnableStorage",
              "members": [
                {
                  "label": "_owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Ownable": [
              {
                "contract": "OwnableUpgradeable",
                "label": "_owner",
                "type": "t_address",
                "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:24",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable": {
        "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:56",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)80_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:17",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)80_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:PausableUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\PausableUpgradeable.sol:18",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)80_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(PausableStorage)172_storage": {
              "label": "struct PausableUpgradeable.PausableStorage",
              "members": [
                {
                  "label": "_paused",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Pausable": [
              {
                "contract": "PausableUpgradeable",
                "label": "_paused",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\utils\\PausableUpgradeable.sol:21",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\ReentrancyGuardUpgradeable.sol:26",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)80_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(ReentrancyGuardStorage)243_storage": {
              "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
              "members": [
                {
                  "label": "_status",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.ReentrancyGuard": [
              {
                "contract": "ReentrancyGuardUpgradeable",
                "label": "_status",
                "type": "t_uint256",
                "src": "@openzeppelin\\contracts-upgradeable\\utils\\ReentrancyGuardUpgradeable.sol:43",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UpgradeableHYAXRewards.sol:ERC20TokenInterface": {
        "src": "contracts\\UpgradeableHYAXRewards.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "balanceOf(address)",
          "symbol()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UpgradeableHYAXRewards.sol:UpgradeableHYAXRewards": {
        "src": "contracts\\UpgradeableHYAXRewards.sol:23",
        "version": {
          "withMetadata": "7bd200d2d5e32c63229b0d1a29876f07c6b87248a8140fa2a68a7438ed21e4d4",
          "withoutMetadata": "b6b4077b5fa5a4e8dff118a37436f4b0fb408286df675508fb6781185ce93461",
          "linkedWithoutMetadata": "b6b4077b5fa5a4e8dff118a37436f4b0fb408286df675508fb6781185ce93461"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:PausableUpgradeable",
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "initialize(address)",
          "addWalletToWhitelist(address,bool,uint256)",
          "updateWhitelistStatus(address,bool)",
          "updateBlacklistStatus(address,bool)",
          "fundSmartContract(uint8,uint256)",
          "withdrawGrowthTokens()",
          "withdrawTeamTokens()",
          "calculateYearForTeamTokens()",
          "updateRewardsBatch(address[],uint256[])",
          "updateRewardsSingle(address,uint256)",
          "withdrawRewardTokens()",
          "withdrawTokensToBurn(uint8,uint256)",
          "recoverTeamTokens(address,address)",
          "updateWhiteListerAddress(address)",
          "updateRewardsUpdaterAddress(address)",
          "updateHyaxTokenAddress(address)",
          "updateMaximumBatchSizeForUpdateRewards(uint8)",
          "pause()",
          "unpause()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "hyaxTokenAddress",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:151"
            },
            {
              "label": "hyaxToken",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(ERC20TokenInterface)839",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:153"
            },
            {
              "label": "growthTokensFunded",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:165"
            },
            {
              "label": "growthTokensWithdrawn",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:167"
            },
            {
              "label": "growthTokensInSmartContract",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:169"
            },
            {
              "label": "growthTokensLastWithdrawalTime",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:171"
            },
            {
              "label": "growthTokensStartFundingTime",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:173"
            },
            {
              "label": "growthTokensFundingStarted",
              "offset": 0,
              "slot": "7",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:175"
            },
            {
              "label": "teamTokensFunded",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:186"
            },
            {
              "label": "teamTokensWithdrawn",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:188"
            },
            {
              "label": "teamTokensInSmartContract",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:190"
            },
            {
              "label": "teamTokensStartFundingTime",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:192"
            },
            {
              "label": "teamTokensFundingStarted",
              "offset": 0,
              "slot": "12",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:194"
            },
            {
              "label": "rewardTokensFunded",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:205"
            },
            {
              "label": "rewardTokensDistributed",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:207"
            },
            {
              "label": "rewardTokensWithdrawn",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:209"
            },
            {
              "label": "rewardTokensInSmartContract",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:211"
            },
            {
              "label": "rewardTokensStartFundingTime",
              "offset": 0,
              "slot": "17",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:213"
            },
            {
              "label": "rewardTokensFundingStarted",
              "offset": 0,
              "slot": "18",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:215"
            },
            {
              "label": "whiteListerAddress",
              "offset": 1,
              "slot": "18",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:220"
            },
            {
              "label": "rewardsUpdaterAddress",
              "offset": 0,
              "slot": "19",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:222"
            },
            {
              "label": "maximumBatchSizeForUpdateRewards",
              "offset": 20,
              "slot": "19",
              "type": "t_uint8",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:244"
            },
            {
              "label": "wallets",
              "offset": 0,
              "slot": "20",
              "type": "t_mapping(t_address,t_struct(WalletData)1103_storage)",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:246"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)80_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(OwnableStorage)13_storage": {
              "label": "struct OwnableUpgradeable.OwnableStorage",
              "members": [
                {
                  "label": "_owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(PausableStorage)172_storage": {
              "label": "struct PausableUpgradeable.PausableStorage",
              "members": [
                {
                  "label": "_paused",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(ReentrancyGuardStorage)243_storage": {
              "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
              "members": [
                {
                  "label": "_status",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            },
            "t_contract(ERC20TokenInterface)839": {
              "label": "contract ERC20TokenInterface",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_struct(WalletData)1103_storage)": {
              "label": "mapping(address => struct UpgradeableHYAXRewards.WalletData)",
              "numberOfBytes": "32"
            },
            "t_struct(WalletData)1103_storage": {
              "label": "struct UpgradeableHYAXRewards.WalletData",
              "members": [
                {
                  "label": "hyaxHoldingAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "hyaxHoldingAmountAtWhitelistTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "totalHyaxRewardsAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "currentRewardsAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "rewardsWithdrawn",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "addedToWhitelistTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "teamTokenWithdrawalTimes",
                  "type": "t_uint8",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "lastRewardsWithdrawalTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "lastRewardsUpdateTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "isTeamWallet",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "isWhitelisted",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "9"
                },
                {
                  "label": "isBlacklisted",
                  "type": "t_bool",
                  "offset": 2,
                  "slot": "9"
                }
              ],
              "numberOfBytes": "320"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {
            "erc7201:openzeppelin.storage.ReentrancyGuard": [
              {
                "contract": "ReentrancyGuardUpgradeable",
                "label": "_status",
                "type": "t_uint256",
                "src": "@openzeppelin\\contracts-upgradeable\\utils\\ReentrancyGuardUpgradeable.sol:43",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Pausable": [
              {
                "contract": "PausableUpgradeable",
                "label": "_paused",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\utils\\PausableUpgradeable.sol:21",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Ownable": [
              {
                "contract": "OwnableUpgradeable",
                "label": "_owner",
                "type": "t_address",
                "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:24",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "hardhat/console.sol:console": {
        "src": "hardhat\\console.sol:4",
        "version": {
          "withMetadata": "b1be11c3bf90cff557541588c2ae5cd66dca02f69e0972ceeb9da182ee9131c5",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      }
    },
    {
      "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)80_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(OwnableStorage)13_storage": {
              "label": "struct OwnableUpgradeable.OwnableStorage",
              "members": [
                {
                  "label": "_owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Ownable": [
              {
                "contract": "OwnableUpgradeable",
                "label": "_owner",
                "type": "t_address",
                "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:24",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable": {
        "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:56",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)80_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:17",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)80_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:PausableUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\PausableUpgradeable.sol:18",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)80_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(PausableStorage)172_storage": {
              "label": "struct PausableUpgradeable.PausableStorage",
              "members": [
                {
                  "label": "_paused",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Pausable": [
              {
                "contract": "PausableUpgradeable",
                "label": "_paused",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\utils\\PausableUpgradeable.sol:21",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\ReentrancyGuardUpgradeable.sol:26",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)80_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(ReentrancyGuardStorage)243_storage": {
              "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
              "members": [
                {
                  "label": "_status",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.ReentrancyGuard": [
              {
                "contract": "ReentrancyGuardUpgradeable",
                "label": "_status",
                "type": "t_uint256",
                "src": "@openzeppelin\\contracts-upgradeable\\utils\\ReentrancyGuardUpgradeable.sol:43",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UpgradeableHYAXRewards.sol:ERC20TokenInterface": {
        "src": "contracts\\UpgradeableHYAXRewards.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "balanceOf(address)",
          "symbol()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UpgradeableHYAXRewards.sol:UpgradeableHYAXRewards": {
        "src": "contracts\\UpgradeableHYAXRewards.sol:23",
        "version": {
          "withMetadata": "7bd200d2d5e32c63229b0d1a29876f07c6b87248a8140fa2a68a7438ed21e4d4",
          "withoutMetadata": "b6b4077b5fa5a4e8dff118a37436f4b0fb408286df675508fb6781185ce93461",
          "linkedWithoutMetadata": "b6b4077b5fa5a4e8dff118a37436f4b0fb408286df675508fb6781185ce93461"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:PausableUpgradeable",
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "initialize(address)",
          "addWalletToWhitelist(address,bool,uint256)",
          "updateWhitelistStatus(address,bool)",
          "updateBlacklistStatus(address,bool)",
          "fundSmartContract(uint8,uint256)",
          "withdrawGrowthTokens()",
          "withdrawTeamTokens()",
          "calculateYearForTeamTokens()",
          "updateRewardsBatch(address[],uint256[])",
          "updateRewardsSingle(address,uint256)",
          "withdrawRewardTokens()",
          "withdrawTokensToBurn(uint8,uint256)",
          "recoverTeamTokens(address,address)",
          "updateWhiteListerAddress(address)",
          "updateRewardsUpdaterAddress(address)",
          "updateHyaxTokenAddress(address)",
          "updateMaximumBatchSizeForUpdateRewards(uint8)",
          "pause()",
          "unpause()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "hyaxTokenAddress",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:151"
            },
            {
              "label": "hyaxToken",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(ERC20TokenInterface)839",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:153"
            },
            {
              "label": "growthTokensFunded",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:165"
            },
            {
              "label": "growthTokensWithdrawn",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:167"
            },
            {
              "label": "growthTokensInSmartContract",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:169"
            },
            {
              "label": "growthTokensLastWithdrawalTime",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:171"
            },
            {
              "label": "growthTokensStartFundingTime",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:173"
            },
            {
              "label": "growthTokensFundingStarted",
              "offset": 0,
              "slot": "7",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:175"
            },
            {
              "label": "teamTokensFunded",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:186"
            },
            {
              "label": "teamTokensWithdrawn",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:188"
            },
            {
              "label": "teamTokensInSmartContract",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:190"
            },
            {
              "label": "teamTokensStartFundingTime",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:192"
            },
            {
              "label": "teamTokensFundingStarted",
              "offset": 0,
              "slot": "12",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:194"
            },
            {
              "label": "rewardTokensFunded",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:205"
            },
            {
              "label": "rewardTokensDistributed",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:207"
            },
            {
              "label": "rewardTokensWithdrawn",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:209"
            },
            {
              "label": "rewardTokensInSmartContract",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:211"
            },
            {
              "label": "rewardTokensStartFundingTime",
              "offset": 0,
              "slot": "17",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:213"
            },
            {
              "label": "rewardTokensFundingStarted",
              "offset": 0,
              "slot": "18",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:215"
            },
            {
              "label": "whiteListerAddress",
              "offset": 1,
              "slot": "18",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:220"
            },
            {
              "label": "rewardsUpdaterAddress",
              "offset": 0,
              "slot": "19",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:222"
            },
            {
              "label": "maximumBatchSizeForUpdateRewards",
              "offset": 20,
              "slot": "19",
              "type": "t_uint8",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:244"
            },
            {
              "label": "wallets",
              "offset": 0,
              "slot": "20",
              "type": "t_mapping(t_address,t_struct(WalletData)1103_storage)",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:246"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)80_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(OwnableStorage)13_storage": {
              "label": "struct OwnableUpgradeable.OwnableStorage",
              "members": [
                {
                  "label": "_owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(PausableStorage)172_storage": {
              "label": "struct PausableUpgradeable.PausableStorage",
              "members": [
                {
                  "label": "_paused",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(ReentrancyGuardStorage)243_storage": {
              "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
              "members": [
                {
                  "label": "_status",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            },
            "t_contract(ERC20TokenInterface)839": {
              "label": "contract ERC20TokenInterface",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_struct(WalletData)1103_storage)": {
              "label": "mapping(address => struct UpgradeableHYAXRewards.WalletData)",
              "numberOfBytes": "32"
            },
            "t_struct(WalletData)1103_storage": {
              "label": "struct UpgradeableHYAXRewards.WalletData",
              "members": [
                {
                  "label": "hyaxHoldingAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "hyaxHoldingAmountAtWhitelistTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "totalHyaxRewardsAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "currentRewardsAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "rewardsWithdrawn",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "addedToWhitelistTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "teamTokenWithdrawalTimes",
                  "type": "t_uint8",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "lastRewardsWithdrawalTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "lastRewardsUpdateTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "isTeamWallet",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "isWhitelisted",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "9"
                },
                {
                  "label": "isBlacklisted",
                  "type": "t_bool",
                  "offset": 2,
                  "slot": "9"
                }
              ],
              "numberOfBytes": "320"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {
            "erc7201:openzeppelin.storage.ReentrancyGuard": [
              {
                "contract": "ReentrancyGuardUpgradeable",
                "label": "_status",
                "type": "t_uint256",
                "src": "@openzeppelin\\contracts-upgradeable\\utils\\ReentrancyGuardUpgradeable.sol:43",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Pausable": [
              {
                "contract": "PausableUpgradeable",
                "label": "_paused",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\utils\\PausableUpgradeable.sol:21",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Ownable": [
              {
                "contract": "OwnableUpgradeable",
                "label": "_owner",
                "type": "t_address",
                "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:24",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "hardhat/console.sol:console": {
        "src": "hardhat\\console.sol:4",
        "version": {
          "withMetadata": "b1be11c3bf90cff557541588c2ae5cd66dca02f69e0972ceeb9da182ee9131c5",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      }
    },
    {
      "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)80_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(OwnableStorage)13_storage": {
              "label": "struct OwnableUpgradeable.OwnableStorage",
              "members": [
                {
                  "label": "_owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Ownable": [
              {
                "contract": "OwnableUpgradeable",
                "label": "_owner",
                "type": "t_address",
                "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:24",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable": {
        "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:56",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)80_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:17",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)80_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:PausableUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\PausableUpgradeable.sol:18",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)80_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(PausableStorage)172_storage": {
              "label": "struct PausableUpgradeable.PausableStorage",
              "members": [
                {
                  "label": "_paused",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Pausable": [
              {
                "contract": "PausableUpgradeable",
                "label": "_paused",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\utils\\PausableUpgradeable.sol:21",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\ReentrancyGuardUpgradeable.sol:26",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)80_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(ReentrancyGuardStorage)243_storage": {
              "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
              "members": [
                {
                  "label": "_status",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.ReentrancyGuard": [
              {
                "contract": "ReentrancyGuardUpgradeable",
                "label": "_status",
                "type": "t_uint256",
                "src": "@openzeppelin\\contracts-upgradeable\\utils\\ReentrancyGuardUpgradeable.sol:43",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UpgradeableHYAXRewards.sol:ERC20TokenInterface": {
        "src": "contracts\\UpgradeableHYAXRewards.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "balanceOf(address)",
          "symbol()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UpgradeableHYAXRewards.sol:UpgradeableHYAXRewards": {
        "src": "contracts\\UpgradeableHYAXRewards.sol:23",
        "version": {
          "withMetadata": "7251820d5d3dead61b1d8cb3b57fb67527bf9c4e79b2c3cfab8efc7b7f4d7ba4",
          "withoutMetadata": "b6b4077b5fa5a4e8dff118a37436f4b0fb408286df675508fb6781185ce93461",
          "linkedWithoutMetadata": "b6b4077b5fa5a4e8dff118a37436f4b0fb408286df675508fb6781185ce93461"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:PausableUpgradeable",
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "initialize(address)",
          "addWalletToWhitelist(address,bool,uint256)",
          "updateWhitelistStatus(address,bool)",
          "updateBlacklistStatus(address,bool)",
          "fundSmartContract(uint8,uint256)",
          "withdrawGrowthTokens()",
          "withdrawTeamTokens()",
          "calculateYearForTeamTokens()",
          "updateRewardsBatch(address[],uint256[])",
          "updateRewardsSingle(address,uint256)",
          "withdrawRewardTokens()",
          "withdrawTokensToBurn(uint8,uint256)",
          "recoverTeamTokens(address,address)",
          "updateWhiteListerAddress(address)",
          "updateRewardsUpdaterAddress(address)",
          "updateHyaxTokenAddress(address)",
          "updateMaximumBatchSizeForUpdateRewards(uint8)",
          "pause()",
          "unpause()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "hyaxTokenAddress",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:151"
            },
            {
              "label": "hyaxToken",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(ERC20TokenInterface)839",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:153"
            },
            {
              "label": "growthTokensFunded",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:165"
            },
            {
              "label": "growthTokensWithdrawn",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:167"
            },
            {
              "label": "growthTokensInSmartContract",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:169"
            },
            {
              "label": "growthTokensLastWithdrawalTime",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:171"
            },
            {
              "label": "growthTokensStartFundingTime",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:173"
            },
            {
              "label": "growthTokensFundingStarted",
              "offset": 0,
              "slot": "7",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:175"
            },
            {
              "label": "teamTokensFunded",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:186"
            },
            {
              "label": "teamTokensWithdrawn",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:188"
            },
            {
              "label": "teamTokensInSmartContract",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:190"
            },
            {
              "label": "teamTokensStartFundingTime",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:192"
            },
            {
              "label": "teamTokensFundingStarted",
              "offset": 0,
              "slot": "12",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:194"
            },
            {
              "label": "rewardTokensFunded",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:205"
            },
            {
              "label": "rewardTokensDistributed",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:207"
            },
            {
              "label": "rewardTokensWithdrawn",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:209"
            },
            {
              "label": "rewardTokensInSmartContract",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:211"
            },
            {
              "label": "rewardTokensStartFundingTime",
              "offset": 0,
              "slot": "17",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:213"
            },
            {
              "label": "rewardTokensFundingStarted",
              "offset": 0,
              "slot": "18",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:215"
            },
            {
              "label": "whiteListerAddress",
              "offset": 1,
              "slot": "18",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:220"
            },
            {
              "label": "rewardsUpdaterAddress",
              "offset": 0,
              "slot": "19",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:222"
            },
            {
              "label": "maximumBatchSizeForUpdateRewards",
              "offset": 20,
              "slot": "19",
              "type": "t_uint8",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:244"
            },
            {
              "label": "wallets",
              "offset": 0,
              "slot": "20",
              "type": "t_mapping(t_address,t_struct(WalletData)1103_storage)",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:246"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)80_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(OwnableStorage)13_storage": {
              "label": "struct OwnableUpgradeable.OwnableStorage",
              "members": [
                {
                  "label": "_owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(PausableStorage)172_storage": {
              "label": "struct PausableUpgradeable.PausableStorage",
              "members": [
                {
                  "label": "_paused",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(ReentrancyGuardStorage)243_storage": {
              "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
              "members": [
                {
                  "label": "_status",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            },
            "t_contract(ERC20TokenInterface)839": {
              "label": "contract ERC20TokenInterface",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_struct(WalletData)1103_storage)": {
              "label": "mapping(address => struct UpgradeableHYAXRewards.WalletData)",
              "numberOfBytes": "32"
            },
            "t_struct(WalletData)1103_storage": {
              "label": "struct UpgradeableHYAXRewards.WalletData",
              "members": [
                {
                  "label": "hyaxHoldingAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "hyaxHoldingAmountAtWhitelistTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "totalHyaxRewardsAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "currentRewardsAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "rewardsWithdrawn",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "addedToWhitelistTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "teamTokenWithdrawalTimes",
                  "type": "t_uint8",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "lastRewardsWithdrawalTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "lastRewardsUpdateTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "isTeamWallet",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "isWhitelisted",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "9"
                },
                {
                  "label": "isBlacklisted",
                  "type": "t_bool",
                  "offset": 2,
                  "slot": "9"
                }
              ],
              "numberOfBytes": "320"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {
            "erc7201:openzeppelin.storage.ReentrancyGuard": [
              {
                "contract": "ReentrancyGuardUpgradeable",
                "label": "_status",
                "type": "t_uint256",
                "src": "@openzeppelin\\contracts-upgradeable\\utils\\ReentrancyGuardUpgradeable.sol:43",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Pausable": [
              {
                "contract": "PausableUpgradeable",
                "label": "_paused",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\utils\\PausableUpgradeable.sol:21",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Ownable": [
              {
                "contract": "OwnableUpgradeable",
                "label": "_owner",
                "type": "t_address",
                "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:24",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "hardhat/console.sol:console": {
        "src": "hardhat\\console.sol:4",
        "version": {
          "withMetadata": "b1be11c3bf90cff557541588c2ae5cd66dca02f69e0972ceeb9da182ee9131c5",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      }
    },
    {
      "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)80_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(OwnableStorage)13_storage": {
              "label": "struct OwnableUpgradeable.OwnableStorage",
              "members": [
                {
                  "label": "_owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Ownable": [
              {
                "contract": "OwnableUpgradeable",
                "label": "_owner",
                "type": "t_address",
                "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:24",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable": {
        "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:56",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)80_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:17",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)80_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:PausableUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\PausableUpgradeable.sol:18",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)80_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(PausableStorage)172_storage": {
              "label": "struct PausableUpgradeable.PausableStorage",
              "members": [
                {
                  "label": "_paused",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Pausable": [
              {
                "contract": "PausableUpgradeable",
                "label": "_paused",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\utils\\PausableUpgradeable.sol:21",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\ReentrancyGuardUpgradeable.sol:26",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)80_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(ReentrancyGuardStorage)243_storage": {
              "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
              "members": [
                {
                  "label": "_status",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.ReentrancyGuard": [
              {
                "contract": "ReentrancyGuardUpgradeable",
                "label": "_status",
                "type": "t_uint256",
                "src": "@openzeppelin\\contracts-upgradeable\\utils\\ReentrancyGuardUpgradeable.sol:43",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UpgradeableHYAXRewards.sol:ERC20TokenInterface": {
        "src": "contracts\\UpgradeableHYAXRewards.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "balanceOf(address)",
          "symbol()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UpgradeableHYAXRewards.sol:UpgradeableHYAXRewards": {
        "src": "contracts\\UpgradeableHYAXRewards.sol:23",
        "version": {
          "withMetadata": "7251820d5d3dead61b1d8cb3b57fb67527bf9c4e79b2c3cfab8efc7b7f4d7ba4",
          "withoutMetadata": "b6b4077b5fa5a4e8dff118a37436f4b0fb408286df675508fb6781185ce93461",
          "linkedWithoutMetadata": "b6b4077b5fa5a4e8dff118a37436f4b0fb408286df675508fb6781185ce93461"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:PausableUpgradeable",
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "initialize(address)",
          "addWalletToWhitelist(address,bool,uint256)",
          "updateWhitelistStatus(address,bool)",
          "updateBlacklistStatus(address,bool)",
          "fundSmartContract(uint8,uint256)",
          "withdrawGrowthTokens()",
          "withdrawTeamTokens()",
          "calculateYearForTeamTokens()",
          "updateRewardsBatch(address[],uint256[])",
          "updateRewardsSingle(address,uint256)",
          "withdrawRewardTokens()",
          "withdrawTokensToBurn(uint8,uint256)",
          "recoverTeamTokens(address,address)",
          "updateWhiteListerAddress(address)",
          "updateRewardsUpdaterAddress(address)",
          "updateHyaxTokenAddress(address)",
          "updateMaximumBatchSizeForUpdateRewards(uint8)",
          "pause()",
          "unpause()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "hyaxTokenAddress",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:151"
            },
            {
              "label": "hyaxToken",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(ERC20TokenInterface)839",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:153"
            },
            {
              "label": "growthTokensFunded",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:165"
            },
            {
              "label": "growthTokensWithdrawn",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:167"
            },
            {
              "label": "growthTokensInSmartContract",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:169"
            },
            {
              "label": "growthTokensLastWithdrawalTime",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:171"
            },
            {
              "label": "growthTokensStartFundingTime",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:173"
            },
            {
              "label": "growthTokensFundingStarted",
              "offset": 0,
              "slot": "7",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:175"
            },
            {
              "label": "teamTokensFunded",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:186"
            },
            {
              "label": "teamTokensWithdrawn",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:188"
            },
            {
              "label": "teamTokensInSmartContract",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:190"
            },
            {
              "label": "teamTokensStartFundingTime",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:192"
            },
            {
              "label": "teamTokensFundingStarted",
              "offset": 0,
              "slot": "12",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:194"
            },
            {
              "label": "rewardTokensFunded",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:205"
            },
            {
              "label": "rewardTokensDistributed",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:207"
            },
            {
              "label": "rewardTokensWithdrawn",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:209"
            },
            {
              "label": "rewardTokensInSmartContract",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:211"
            },
            {
              "label": "rewardTokensStartFundingTime",
              "offset": 0,
              "slot": "17",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:213"
            },
            {
              "label": "rewardTokensFundingStarted",
              "offset": 0,
              "slot": "18",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:215"
            },
            {
              "label": "whiteListerAddress",
              "offset": 1,
              "slot": "18",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:220"
            },
            {
              "label": "rewardsUpdaterAddress",
              "offset": 0,
              "slot": "19",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:222"
            },
            {
              "label": "maximumBatchSizeForUpdateRewards",
              "offset": 20,
              "slot": "19",
              "type": "t_uint8",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:244"
            },
            {
              "label": "wallets",
              "offset": 0,
              "slot": "20",
              "type": "t_mapping(t_address,t_struct(WalletData)1103_storage)",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:246"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)80_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(OwnableStorage)13_storage": {
              "label": "struct OwnableUpgradeable.OwnableStorage",
              "members": [
                {
                  "label": "_owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(PausableStorage)172_storage": {
              "label": "struct PausableUpgradeable.PausableStorage",
              "members": [
                {
                  "label": "_paused",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(ReentrancyGuardStorage)243_storage": {
              "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
              "members": [
                {
                  "label": "_status",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            },
            "t_contract(ERC20TokenInterface)839": {
              "label": "contract ERC20TokenInterface",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_struct(WalletData)1103_storage)": {
              "label": "mapping(address => struct UpgradeableHYAXRewards.WalletData)",
              "numberOfBytes": "32"
            },
            "t_struct(WalletData)1103_storage": {
              "label": "struct UpgradeableHYAXRewards.WalletData",
              "members": [
                {
                  "label": "hyaxHoldingAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "hyaxHoldingAmountAtWhitelistTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "totalHyaxRewardsAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "currentRewardsAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "rewardsWithdrawn",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "addedToWhitelistTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "teamTokenWithdrawalTimes",
                  "type": "t_uint8",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "lastRewardsWithdrawalTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "lastRewardsUpdateTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "isTeamWallet",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "isWhitelisted",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "9"
                },
                {
                  "label": "isBlacklisted",
                  "type": "t_bool",
                  "offset": 2,
                  "slot": "9"
                }
              ],
              "numberOfBytes": "320"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {
            "erc7201:openzeppelin.storage.ReentrancyGuard": [
              {
                "contract": "ReentrancyGuardUpgradeable",
                "label": "_status",
                "type": "t_uint256",
                "src": "@openzeppelin\\contracts-upgradeable\\utils\\ReentrancyGuardUpgradeable.sol:43",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Pausable": [
              {
                "contract": "PausableUpgradeable",
                "label": "_paused",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\utils\\PausableUpgradeable.sol:21",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Ownable": [
              {
                "contract": "OwnableUpgradeable",
                "label": "_owner",
                "type": "t_address",
                "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:24",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "hardhat/console.sol:console": {
        "src": "hardhat\\console.sol:4",
        "version": {
          "withMetadata": "b1be11c3bf90cff557541588c2ae5cd66dca02f69e0972ceeb9da182ee9131c5",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      }
    },
    {
      "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)80_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(OwnableStorage)13_storage": {
              "label": "struct OwnableUpgradeable.OwnableStorage",
              "members": [
                {
                  "label": "_owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Ownable": [
              {
                "contract": "OwnableUpgradeable",
                "label": "_owner",
                "type": "t_address",
                "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:24",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable": {
        "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:56",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)80_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:17",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)80_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:PausableUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\PausableUpgradeable.sol:18",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)80_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(PausableStorage)172_storage": {
              "label": "struct PausableUpgradeable.PausableStorage",
              "members": [
                {
                  "label": "_paused",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Pausable": [
              {
                "contract": "PausableUpgradeable",
                "label": "_paused",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\utils\\PausableUpgradeable.sol:21",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\ReentrancyGuardUpgradeable.sol:26",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)80_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(ReentrancyGuardStorage)243_storage": {
              "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
              "members": [
                {
                  "label": "_status",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.ReentrancyGuard": [
              {
                "contract": "ReentrancyGuardUpgradeable",
                "label": "_status",
                "type": "t_uint256",
                "src": "@openzeppelin\\contracts-upgradeable\\utils\\ReentrancyGuardUpgradeable.sol:43",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UpgradeableHYAXRewards.sol:ERC20TokenInterface": {
        "src": "contracts\\UpgradeableHYAXRewards.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "balanceOf(address)",
          "symbol()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UpgradeableHYAXRewards.sol:UpgradeableHYAXRewards": {
        "src": "contracts\\UpgradeableHYAXRewards.sol:23",
        "version": {
          "withMetadata": "a6d68df3c54abcce6540e29f80b5920cb0bd96cea0f7ee191e9df962392eed88",
          "withoutMetadata": "f64bb4fbec90acfd466f2624fd94a9d08ef16673b70301382eda4895a8a91199",
          "linkedWithoutMetadata": "f64bb4fbec90acfd466f2624fd94a9d08ef16673b70301382eda4895a8a91199"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:PausableUpgradeable",
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "initialize(address)",
          "addWalletToWhitelist(address,bool,uint256)",
          "updateWhitelistStatus(address,bool)",
          "updateBlacklistStatus(address,bool)",
          "fundSmartContract(uint8,uint256)",
          "withdrawGrowthTokens()",
          "withdrawTeamTokens()",
          "calculateYearForTeamTokens()",
          "updateRewardsBatch(address[],uint256[])",
          "updateRewardsSingle(address,uint256)",
          "withdrawRewardTokens()",
          "withdrawTokensToBurn(uint8,uint256)",
          "recoverTeamTokens(address,address)",
          "updateWhiteListerAddress(address)",
          "updateRewardsUpdaterAddress(address)",
          "updateHyaxTokenAddress(address)",
          "updateMaximumBatchSizeForUpdateRewards(uint8)",
          "pause()",
          "unpause()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "hyaxTokenAddress",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:151"
            },
            {
              "label": "hyaxToken",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(ERC20TokenInterface)839",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:153"
            },
            {
              "label": "growthTokensFunded",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:165"
            },
            {
              "label": "growthTokensWithdrawn",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:167"
            },
            {
              "label": "growthTokensInSmartContract",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:169"
            },
            {
              "label": "growthTokensLastWithdrawalTime",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:171"
            },
            {
              "label": "growthTokensStartFundingTime",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:173"
            },
            {
              "label": "growthTokensFundingStarted",
              "offset": 0,
              "slot": "7",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:175"
            },
            {
              "label": "teamTokensFunded",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:186"
            },
            {
              "label": "teamTokensWithdrawn",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:188"
            },
            {
              "label": "teamTokensInSmartContract",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:190"
            },
            {
              "label": "teamTokensStartFundingTime",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:192"
            },
            {
              "label": "teamTokensFundingStarted",
              "offset": 0,
              "slot": "12",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:194"
            },
            {
              "label": "rewardTokensFunded",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:205"
            },
            {
              "label": "rewardTokensDistributed",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:207"
            },
            {
              "label": "rewardTokensWithdrawn",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:209"
            },
            {
              "label": "rewardTokensInSmartContract",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:211"
            },
            {
              "label": "rewardTokensStartFundingTime",
              "offset": 0,
              "slot": "17",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:213"
            },
            {
              "label": "rewardTokensFundingStarted",
              "offset": 0,
              "slot": "18",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:215"
            },
            {
              "label": "whiteListerAddress",
              "offset": 1,
              "slot": "18",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:220"
            },
            {
              "label": "rewardsUpdaterAddress",
              "offset": 0,
              "slot": "19",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:222"
            },
            {
              "label": "maximumBatchSizeForUpdateRewards",
              "offset": 20,
              "slot": "19",
              "type": "t_uint8",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:244"
            },
            {
              "label": "wallets",
              "offset": 0,
              "slot": "20",
              "type": "t_mapping(t_address,t_struct(WalletData)1103_storage)",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:246"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)80_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(OwnableStorage)13_storage": {
              "label": "struct OwnableUpgradeable.OwnableStorage",
              "members": [
                {
                  "label": "_owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(PausableStorage)172_storage": {
              "label": "struct PausableUpgradeable.PausableStorage",
              "members": [
                {
                  "label": "_paused",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(ReentrancyGuardStorage)243_storage": {
              "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
              "members": [
                {
                  "label": "_status",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            },
            "t_contract(ERC20TokenInterface)839": {
              "label": "contract ERC20TokenInterface",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_struct(WalletData)1103_storage)": {
              "label": "mapping(address => struct UpgradeableHYAXRewards.WalletData)",
              "numberOfBytes": "32"
            },
            "t_struct(WalletData)1103_storage": {
              "label": "struct UpgradeableHYAXRewards.WalletData",
              "members": [
                {
                  "label": "hyaxHoldingAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "hyaxHoldingAmountAtWhitelistTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "totalHyaxRewardsAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "currentRewardsAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "rewardsWithdrawn",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "addedToWhitelistTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "teamTokenWithdrawalTimes",
                  "type": "t_uint8",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "lastRewardsWithdrawalTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "lastRewardsUpdateTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "isTeamWallet",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "isWhitelisted",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "9"
                },
                {
                  "label": "isBlacklisted",
                  "type": "t_bool",
                  "offset": 2,
                  "slot": "9"
                }
              ],
              "numberOfBytes": "320"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {
            "erc7201:openzeppelin.storage.ReentrancyGuard": [
              {
                "contract": "ReentrancyGuardUpgradeable",
                "label": "_status",
                "type": "t_uint256",
                "src": "@openzeppelin\\contracts-upgradeable\\utils\\ReentrancyGuardUpgradeable.sol:43",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Pausable": [
              {
                "contract": "PausableUpgradeable",
                "label": "_paused",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\utils\\PausableUpgradeable.sol:21",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Ownable": [
              {
                "contract": "OwnableUpgradeable",
                "label": "_owner",
                "type": "t_address",
                "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:24",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "hardhat/console.sol:console": {
        "src": "hardhat\\console.sol:4",
        "version": {
          "withMetadata": "b1be11c3bf90cff557541588c2ae5cd66dca02f69e0972ceeb9da182ee9131c5",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      }
    },
    {
      "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)80_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(OwnableStorage)13_storage": {
              "label": "struct OwnableUpgradeable.OwnableStorage",
              "members": [
                {
                  "label": "_owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Ownable": [
              {
                "contract": "OwnableUpgradeable",
                "label": "_owner",
                "type": "t_address",
                "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:24",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable": {
        "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:56",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)80_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:17",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)80_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:PausableUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\PausableUpgradeable.sol:18",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)80_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(PausableStorage)172_storage": {
              "label": "struct PausableUpgradeable.PausableStorage",
              "members": [
                {
                  "label": "_paused",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Pausable": [
              {
                "contract": "PausableUpgradeable",
                "label": "_paused",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\utils\\PausableUpgradeable.sol:21",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\ReentrancyGuardUpgradeable.sol:26",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)80_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(ReentrancyGuardStorage)243_storage": {
              "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
              "members": [
                {
                  "label": "_status",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.ReentrancyGuard": [
              {
                "contract": "ReentrancyGuardUpgradeable",
                "label": "_status",
                "type": "t_uint256",
                "src": "@openzeppelin\\contracts-upgradeable\\utils\\ReentrancyGuardUpgradeable.sol:43",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UpgradeableHYAXRewards.sol:ERC20TokenInterface": {
        "src": "contracts\\UpgradeableHYAXRewards.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "balanceOf(address)",
          "symbol()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UpgradeableHYAXRewards.sol:UpgradeableHYAXRewards": {
        "src": "contracts\\UpgradeableHYAXRewards.sol:23",
        "version": {
          "withMetadata": "9cb0fad7b60843acd5730ee1e271ac04887c897c3bb2ae184db5b26e2f3699b4",
          "withoutMetadata": "f64bb4fbec90acfd466f2624fd94a9d08ef16673b70301382eda4895a8a91199",
          "linkedWithoutMetadata": "f64bb4fbec90acfd466f2624fd94a9d08ef16673b70301382eda4895a8a91199"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:PausableUpgradeable",
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "initialize(address)",
          "addWalletToWhitelist(address,bool,uint256)",
          "updateWhitelistStatus(address,bool)",
          "updateBlacklistStatus(address,bool)",
          "fundSmartContract(uint8,uint256)",
          "withdrawGrowthTokens()",
          "withdrawTeamTokens()",
          "calculateYearForTeamTokens()",
          "updateRewardsBatch(address[],uint256[])",
          "updateRewardsSingle(address,uint256)",
          "withdrawRewardTokens()",
          "withdrawTokensToBurn(uint8,uint256)",
          "recoverTeamTokens(address,address)",
          "updateWhiteListerAddress(address)",
          "updateRewardsUpdaterAddress(address)",
          "updateHyaxTokenAddress(address)",
          "updateMaximumBatchSizeForUpdateRewards(uint8)",
          "pause()",
          "unpause()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "hyaxTokenAddress",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:151"
            },
            {
              "label": "hyaxToken",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(ERC20TokenInterface)839",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:153"
            },
            {
              "label": "growthTokensFunded",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:165"
            },
            {
              "label": "growthTokensWithdrawn",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:167"
            },
            {
              "label": "growthTokensInSmartContract",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:169"
            },
            {
              "label": "growthTokensLastWithdrawalTime",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:171"
            },
            {
              "label": "growthTokensStartFundingTime",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:173"
            },
            {
              "label": "growthTokensFundingStarted",
              "offset": 0,
              "slot": "7",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:175"
            },
            {
              "label": "teamTokensFunded",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:186"
            },
            {
              "label": "teamTokensWithdrawn",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:188"
            },
            {
              "label": "teamTokensInSmartContract",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:190"
            },
            {
              "label": "teamTokensStartFundingTime",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:192"
            },
            {
              "label": "teamTokensFundingStarted",
              "offset": 0,
              "slot": "12",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:194"
            },
            {
              "label": "rewardTokensFunded",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:205"
            },
            {
              "label": "rewardTokensDistributed",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:207"
            },
            {
              "label": "rewardTokensWithdrawn",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:209"
            },
            {
              "label": "rewardTokensInSmartContract",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:211"
            },
            {
              "label": "rewardTokensStartFundingTime",
              "offset": 0,
              "slot": "17",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:213"
            },
            {
              "label": "rewardTokensFundingStarted",
              "offset": 0,
              "slot": "18",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:215"
            },
            {
              "label": "whiteListerAddress",
              "offset": 1,
              "slot": "18",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:220"
            },
            {
              "label": "rewardsUpdaterAddress",
              "offset": 0,
              "slot": "19",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:222"
            },
            {
              "label": "maximumBatchSizeForUpdateRewards",
              "offset": 20,
              "slot": "19",
              "type": "t_uint8",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:244"
            },
            {
              "label": "wallets",
              "offset": 0,
              "slot": "20",
              "type": "t_mapping(t_address,t_struct(WalletData)1103_storage)",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:246"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)80_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(OwnableStorage)13_storage": {
              "label": "struct OwnableUpgradeable.OwnableStorage",
              "members": [
                {
                  "label": "_owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(PausableStorage)172_storage": {
              "label": "struct PausableUpgradeable.PausableStorage",
              "members": [
                {
                  "label": "_paused",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(ReentrancyGuardStorage)243_storage": {
              "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
              "members": [
                {
                  "label": "_status",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            },
            "t_contract(ERC20TokenInterface)839": {
              "label": "contract ERC20TokenInterface",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_struct(WalletData)1103_storage)": {
              "label": "mapping(address => struct UpgradeableHYAXRewards.WalletData)",
              "numberOfBytes": "32"
            },
            "t_struct(WalletData)1103_storage": {
              "label": "struct UpgradeableHYAXRewards.WalletData",
              "members": [
                {
                  "label": "hyaxHoldingAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "hyaxHoldingAmountAtWhitelistTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "totalHyaxRewardsAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "currentRewardsAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "rewardsWithdrawn",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "addedToWhitelistTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "teamTokenWithdrawalTimes",
                  "type": "t_uint8",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "lastRewardsWithdrawalTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "lastRewardsUpdateTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "isTeamWallet",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "isWhitelisted",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "9"
                },
                {
                  "label": "isBlacklisted",
                  "type": "t_bool",
                  "offset": 2,
                  "slot": "9"
                }
              ],
              "numberOfBytes": "320"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {
            "erc7201:openzeppelin.storage.ReentrancyGuard": [
              {
                "contract": "ReentrancyGuardUpgradeable",
                "label": "_status",
                "type": "t_uint256",
                "src": "@openzeppelin\\contracts-upgradeable\\utils\\ReentrancyGuardUpgradeable.sol:43",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Pausable": [
              {
                "contract": "PausableUpgradeable",
                "label": "_paused",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\utils\\PausableUpgradeable.sol:21",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Ownable": [
              {
                "contract": "OwnableUpgradeable",
                "label": "_owner",
                "type": "t_address",
                "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:24",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "hardhat/console.sol:console": {
        "src": "hardhat\\console.sol:4",
        "version": {
          "withMetadata": "b1be11c3bf90cff557541588c2ae5cd66dca02f69e0972ceeb9da182ee9131c5",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      }
    },
    {
      "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)80_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(OwnableStorage)13_storage": {
              "label": "struct OwnableUpgradeable.OwnableStorage",
              "members": [
                {
                  "label": "_owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Ownable": [
              {
                "contract": "OwnableUpgradeable",
                "label": "_owner",
                "type": "t_address",
                "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:24",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable": {
        "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:56",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)80_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:17",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)80_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:PausableUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\PausableUpgradeable.sol:18",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)80_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(PausableStorage)172_storage": {
              "label": "struct PausableUpgradeable.PausableStorage",
              "members": [
                {
                  "label": "_paused",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Pausable": [
              {
                "contract": "PausableUpgradeable",
                "label": "_paused",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\utils\\PausableUpgradeable.sol:21",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\ReentrancyGuardUpgradeable.sol:26",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)80_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(ReentrancyGuardStorage)243_storage": {
              "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
              "members": [
                {
                  "label": "_status",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.ReentrancyGuard": [
              {
                "contract": "ReentrancyGuardUpgradeable",
                "label": "_status",
                "type": "t_uint256",
                "src": "@openzeppelin\\contracts-upgradeable\\utils\\ReentrancyGuardUpgradeable.sol:43",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UpgradeableHYAXRewards.sol:ERC20TokenInterface": {
        "src": "contracts\\UpgradeableHYAXRewards.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "balanceOf(address)",
          "symbol()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UpgradeableHYAXRewards.sol:UpgradeableHYAXRewards": {
        "src": "contracts\\UpgradeableHYAXRewards.sol:23",
        "version": {
          "withMetadata": "31069f4cb34a7450ec62735f8085fae203d25a0f754edd4f3cc9706a5b33f8b0",
          "withoutMetadata": "f64bb4fbec90acfd466f2624fd94a9d08ef16673b70301382eda4895a8a91199",
          "linkedWithoutMetadata": "f64bb4fbec90acfd466f2624fd94a9d08ef16673b70301382eda4895a8a91199"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:PausableUpgradeable",
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "initialize(address)",
          "addWalletToWhitelist(address,bool,uint256)",
          "updateWhitelistStatus(address,bool)",
          "updateBlacklistStatus(address,bool)",
          "fundSmartContract(uint8,uint256)",
          "withdrawGrowthTokens()",
          "withdrawTeamTokens()",
          "calculateYearForTeamTokens()",
          "updateRewardsBatch(address[],uint256[])",
          "updateRewardsSingle(address,uint256)",
          "withdrawRewardTokens()",
          "withdrawTokensToBurn(uint8,uint256)",
          "recoverTeamTokens(address,address)",
          "updateWhiteListerAddress(address)",
          "updateRewardsUpdaterAddress(address)",
          "updateHyaxTokenAddress(address)",
          "updateMaximumBatchSizeForUpdateRewards(uint8)",
          "pause()",
          "unpause()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "hyaxTokenAddress",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:151"
            },
            {
              "label": "hyaxToken",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(ERC20TokenInterface)839",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:153"
            },
            {
              "label": "growthTokensFunded",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:165"
            },
            {
              "label": "growthTokensWithdrawn",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:167"
            },
            {
              "label": "growthTokensInSmartContract",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:169"
            },
            {
              "label": "growthTokensLastWithdrawalTime",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:171"
            },
            {
              "label": "growthTokensStartFundingTime",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:173"
            },
            {
              "label": "growthTokensFundingStarted",
              "offset": 0,
              "slot": "7",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:175"
            },
            {
              "label": "teamTokensFunded",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:186"
            },
            {
              "label": "teamTokensWithdrawn",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:188"
            },
            {
              "label": "teamTokensInSmartContract",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:190"
            },
            {
              "label": "teamTokensStartFundingTime",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:192"
            },
            {
              "label": "teamTokensFundingStarted",
              "offset": 0,
              "slot": "12",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:194"
            },
            {
              "label": "rewardTokensFunded",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:205"
            },
            {
              "label": "rewardTokensDistributed",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:207"
            },
            {
              "label": "rewardTokensWithdrawn",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:209"
            },
            {
              "label": "rewardTokensInSmartContract",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:211"
            },
            {
              "label": "rewardTokensStartFundingTime",
              "offset": 0,
              "slot": "17",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:213"
            },
            {
              "label": "rewardTokensFundingStarted",
              "offset": 0,
              "slot": "18",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:215"
            },
            {
              "label": "whiteListerAddress",
              "offset": 1,
              "slot": "18",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:220"
            },
            {
              "label": "rewardsUpdaterAddress",
              "offset": 0,
              "slot": "19",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:222"
            },
            {
              "label": "maximumBatchSizeForUpdateRewards",
              "offset": 20,
              "slot": "19",
              "type": "t_uint8",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:244"
            },
            {
              "label": "wallets",
              "offset": 0,
              "slot": "20",
              "type": "t_mapping(t_address,t_struct(WalletData)1103_storage)",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:246"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)80_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(OwnableStorage)13_storage": {
              "label": "struct OwnableUpgradeable.OwnableStorage",
              "members": [
                {
                  "label": "_owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(PausableStorage)172_storage": {
              "label": "struct PausableUpgradeable.PausableStorage",
              "members": [
                {
                  "label": "_paused",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(ReentrancyGuardStorage)243_storage": {
              "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
              "members": [
                {
                  "label": "_status",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            },
            "t_contract(ERC20TokenInterface)839": {
              "label": "contract ERC20TokenInterface",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_struct(WalletData)1103_storage)": {
              "label": "mapping(address => struct UpgradeableHYAXRewards.WalletData)",
              "numberOfBytes": "32"
            },
            "t_struct(WalletData)1103_storage": {
              "label": "struct UpgradeableHYAXRewards.WalletData",
              "members": [
                {
                  "label": "hyaxHoldingAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "hyaxHoldingAmountAtWhitelistTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "totalHyaxRewardsAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "currentRewardsAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "rewardsWithdrawn",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "addedToWhitelistTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "teamTokenWithdrawalTimes",
                  "type": "t_uint8",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "lastRewardsWithdrawalTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "lastRewardsUpdateTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "isTeamWallet",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "isWhitelisted",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "9"
                },
                {
                  "label": "isBlacklisted",
                  "type": "t_bool",
                  "offset": 2,
                  "slot": "9"
                }
              ],
              "numberOfBytes": "320"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {
            "erc7201:openzeppelin.storage.ReentrancyGuard": [
              {
                "contract": "ReentrancyGuardUpgradeable",
                "label": "_status",
                "type": "t_uint256",
                "src": "@openzeppelin\\contracts-upgradeable\\utils\\ReentrancyGuardUpgradeable.sol:43",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Pausable": [
              {
                "contract": "PausableUpgradeable",
                "label": "_paused",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\utils\\PausableUpgradeable.sol:21",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Ownable": [
              {
                "contract": "OwnableUpgradeable",
                "label": "_owner",
                "type": "t_address",
                "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:24",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "hardhat/console.sol:console": {
        "src": "hardhat\\console.sol:4",
        "version": {
          "withMetadata": "b1be11c3bf90cff557541588c2ae5cd66dca02f69e0972ceeb9da182ee9131c5",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      }
    },
    {
      "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)80_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(OwnableStorage)13_storage": {
              "label": "struct OwnableUpgradeable.OwnableStorage",
              "members": [
                {
                  "label": "_owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Ownable": [
              {
                "contract": "OwnableUpgradeable",
                "label": "_owner",
                "type": "t_address",
                "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:24",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable": {
        "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:56",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)80_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:17",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)80_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:PausableUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\PausableUpgradeable.sol:18",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)80_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(PausableStorage)172_storage": {
              "label": "struct PausableUpgradeable.PausableStorage",
              "members": [
                {
                  "label": "_paused",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Pausable": [
              {
                "contract": "PausableUpgradeable",
                "label": "_paused",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\utils\\PausableUpgradeable.sol:21",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\ReentrancyGuardUpgradeable.sol:26",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)80_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(ReentrancyGuardStorage)243_storage": {
              "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
              "members": [
                {
                  "label": "_status",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.ReentrancyGuard": [
              {
                "contract": "ReentrancyGuardUpgradeable",
                "label": "_status",
                "type": "t_uint256",
                "src": "@openzeppelin\\contracts-upgradeable\\utils\\ReentrancyGuardUpgradeable.sol:43",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UpgradeableHYAXRewards.sol:ERC20TokenInterface": {
        "src": "contracts\\UpgradeableHYAXRewards.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "balanceOf(address)",
          "symbol()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UpgradeableHYAXRewards.sol:UpgradeableHYAXRewards": {
        "src": "contracts\\UpgradeableHYAXRewards.sol:23",
        "version": {
          "withMetadata": "654b8573baa5407eb640f06370f0c37278a43720d54074fbb0431df3c9d8eac8",
          "withoutMetadata": "f64bb4fbec90acfd466f2624fd94a9d08ef16673b70301382eda4895a8a91199",
          "linkedWithoutMetadata": "f64bb4fbec90acfd466f2624fd94a9d08ef16673b70301382eda4895a8a91199"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:PausableUpgradeable",
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "initialize(address)",
          "addWalletToWhitelist(address,bool,uint256)",
          "updateWhitelistStatus(address,bool)",
          "updateBlacklistStatus(address,bool)",
          "fundSmartContract(uint8,uint256)",
          "withdrawGrowthTokens()",
          "withdrawTeamTokens()",
          "calculateYearForTeamTokens()",
          "updateRewardsBatch(address[],uint256[])",
          "updateRewardsSingle(address,uint256)",
          "withdrawRewardTokens()",
          "withdrawTokensToBurn(uint8,uint256)",
          "recoverTeamTokens(address,address)",
          "updateWhiteListerAddress(address)",
          "updateRewardsUpdaterAddress(address)",
          "updateHyaxTokenAddress(address)",
          "updateMaximumBatchSizeForUpdateRewards(uint8)",
          "pause()",
          "unpause()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "hyaxTokenAddress",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:151"
            },
            {
              "label": "hyaxToken",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(ERC20TokenInterface)839",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:153"
            },
            {
              "label": "growthTokensFunded",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:165"
            },
            {
              "label": "growthTokensWithdrawn",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:167"
            },
            {
              "label": "growthTokensInSmartContract",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:169"
            },
            {
              "label": "growthTokensLastWithdrawalTime",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:171"
            },
            {
              "label": "growthTokensStartFundingTime",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:173"
            },
            {
              "label": "growthTokensFundingStarted",
              "offset": 0,
              "slot": "7",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:175"
            },
            {
              "label": "teamTokensFunded",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:186"
            },
            {
              "label": "teamTokensWithdrawn",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:188"
            },
            {
              "label": "teamTokensInSmartContract",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:190"
            },
            {
              "label": "teamTokensStartFundingTime",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:192"
            },
            {
              "label": "teamTokensFundingStarted",
              "offset": 0,
              "slot": "12",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:194"
            },
            {
              "label": "rewardTokensFunded",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:205"
            },
            {
              "label": "rewardTokensDistributed",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:207"
            },
            {
              "label": "rewardTokensWithdrawn",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:209"
            },
            {
              "label": "rewardTokensInSmartContract",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:211"
            },
            {
              "label": "rewardTokensStartFundingTime",
              "offset": 0,
              "slot": "17",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:213"
            },
            {
              "label": "rewardTokensFundingStarted",
              "offset": 0,
              "slot": "18",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:215"
            },
            {
              "label": "whiteListerAddress",
              "offset": 1,
              "slot": "18",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:220"
            },
            {
              "label": "rewardsUpdaterAddress",
              "offset": 0,
              "slot": "19",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:222"
            },
            {
              "label": "maximumBatchSizeForUpdateRewards",
              "offset": 20,
              "slot": "19",
              "type": "t_uint8",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:244"
            },
            {
              "label": "wallets",
              "offset": 0,
              "slot": "20",
              "type": "t_mapping(t_address,t_struct(WalletData)1103_storage)",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:246"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)80_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(OwnableStorage)13_storage": {
              "label": "struct OwnableUpgradeable.OwnableStorage",
              "members": [
                {
                  "label": "_owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(PausableStorage)172_storage": {
              "label": "struct PausableUpgradeable.PausableStorage",
              "members": [
                {
                  "label": "_paused",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(ReentrancyGuardStorage)243_storage": {
              "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
              "members": [
                {
                  "label": "_status",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            },
            "t_contract(ERC20TokenInterface)839": {
              "label": "contract ERC20TokenInterface",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_struct(WalletData)1103_storage)": {
              "label": "mapping(address => struct UpgradeableHYAXRewards.WalletData)",
              "numberOfBytes": "32"
            },
            "t_struct(WalletData)1103_storage": {
              "label": "struct UpgradeableHYAXRewards.WalletData",
              "members": [
                {
                  "label": "hyaxHoldingAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "hyaxHoldingAmountAtWhitelistTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "totalHyaxRewardsAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "currentRewardsAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "rewardsWithdrawn",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "addedToWhitelistTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "teamTokenWithdrawalTimes",
                  "type": "t_uint8",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "lastRewardsWithdrawalTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "lastRewardsUpdateTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "isTeamWallet",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "isWhitelisted",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "9"
                },
                {
                  "label": "isBlacklisted",
                  "type": "t_bool",
                  "offset": 2,
                  "slot": "9"
                }
              ],
              "numberOfBytes": "320"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {
            "erc7201:openzeppelin.storage.ReentrancyGuard": [
              {
                "contract": "ReentrancyGuardUpgradeable",
                "label": "_status",
                "type": "t_uint256",
                "src": "@openzeppelin\\contracts-upgradeable\\utils\\ReentrancyGuardUpgradeable.sol:43",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Pausable": [
              {
                "contract": "PausableUpgradeable",
                "label": "_paused",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\utils\\PausableUpgradeable.sol:21",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Ownable": [
              {
                "contract": "OwnableUpgradeable",
                "label": "_owner",
                "type": "t_address",
                "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:24",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "hardhat/console.sol:console": {
        "src": "hardhat\\console.sol:4",
        "version": {
          "withMetadata": "b1be11c3bf90cff557541588c2ae5cd66dca02f69e0972ceeb9da182ee9131c5",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      }
    },
    {
      "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)80_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(OwnableStorage)13_storage": {
              "label": "struct OwnableUpgradeable.OwnableStorage",
              "members": [
                {
                  "label": "_owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Ownable": [
              {
                "contract": "OwnableUpgradeable",
                "label": "_owner",
                "type": "t_address",
                "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:24",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable": {
        "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:56",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)80_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:17",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)80_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:PausableUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\PausableUpgradeable.sol:18",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)80_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(PausableStorage)172_storage": {
              "label": "struct PausableUpgradeable.PausableStorage",
              "members": [
                {
                  "label": "_paused",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Pausable": [
              {
                "contract": "PausableUpgradeable",
                "label": "_paused",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\utils\\PausableUpgradeable.sol:21",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\ReentrancyGuardUpgradeable.sol:26",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)80_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(ReentrancyGuardStorage)243_storage": {
              "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
              "members": [
                {
                  "label": "_status",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.ReentrancyGuard": [
              {
                "contract": "ReentrancyGuardUpgradeable",
                "label": "_status",
                "type": "t_uint256",
                "src": "@openzeppelin\\contracts-upgradeable\\utils\\ReentrancyGuardUpgradeable.sol:43",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UpgradeableHYAXRewardsV2.sol:ERC20TokenInterface": {
        "src": "contracts\\UpgradeableHYAXRewardsV2.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "balanceOf(address)",
          "symbol()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UpgradeableHYAXRewardsV2.sol:UpgradeableHYAXRewardsV2": {
        "src": "contracts\\UpgradeableHYAXRewardsV2.sol:23",
        "version": {
          "withMetadata": "cdd4288bf0a107e733b0a4c81911ee96529b1045157de4fb95a184fe181ba41f",
          "withoutMetadata": "ca961939136fb5c8ec50f73dfca1a0dfcfa00903e27ad68b0c6f52b74ef9c524",
          "linkedWithoutMetadata": "ca961939136fb5c8ec50f73dfca1a0dfcfa00903e27ad68b0c6f52b74ef9c524"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:PausableUpgradeable",
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "initialize(address)",
          "addWalletToWhitelist(address,bool,uint256)",
          "updateWhitelistStatus(address,bool)",
          "updateBlacklistStatus(address,bool)",
          "fundSmartContract(uint8,uint256)",
          "withdrawGrowthTokens()",
          "withdrawTeamTokens()",
          "calculateYearForTeamTokens()",
          "updateRewardsBatch(address[],uint256[])",
          "updateRewardsSingle(address,uint256)",
          "withdrawRewardTokens()",
          "withdrawTokensToBurn(uint8,uint256)",
          "recoverTeamTokens(address,address)",
          "updateWhiteListerAddress(address)",
          "updateRewardsUpdaterAddress(address)",
          "updateHyaxTokenAddress(address)",
          "updateMaximumBatchSizeForUpdateRewards(uint8)",
          "pause()",
          "unpause()",
          "transferOwnership(address)",
          "newFunction()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "hyaxTokenAddress",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewardsV2",
              "src": "contracts\\UpgradeableHYAXRewardsV2.sol:151"
            },
            {
              "label": "hyaxToken",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(ERC20TokenInterface)839",
              "contract": "UpgradeableHYAXRewardsV2",
              "src": "contracts\\UpgradeableHYAXRewardsV2.sol:153"
            },
            {
              "label": "growthTokensFunded",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewardsV2",
              "src": "contracts\\UpgradeableHYAXRewardsV2.sol:165"
            },
            {
              "label": "growthTokensWithdrawn",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewardsV2",
              "src": "contracts\\UpgradeableHYAXRewardsV2.sol:167"
            },
            {
              "label": "growthTokensInSmartContract",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewardsV2",
              "src": "contracts\\UpgradeableHYAXRewardsV2.sol:169"
            },
            {
              "label": "growthTokensLastWithdrawalTime",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewardsV2",
              "src": "contracts\\UpgradeableHYAXRewardsV2.sol:171"
            },
            {
              "label": "growthTokensStartFundingTime",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewardsV2",
              "src": "contracts\\UpgradeableHYAXRewardsV2.sol:173"
            },
            {
              "label": "growthTokensFundingStarted",
              "offset": 0,
              "slot": "7",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewardsV2",
              "src": "contracts\\UpgradeableHYAXRewardsV2.sol:175"
            },
            {
              "label": "teamTokensFunded",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewardsV2",
              "src": "contracts\\UpgradeableHYAXRewardsV2.sol:186"
            },
            {
              "label": "teamTokensWithdrawn",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewardsV2",
              "src": "contracts\\UpgradeableHYAXRewardsV2.sol:188"
            },
            {
              "label": "teamTokensInSmartContract",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewardsV2",
              "src": "contracts\\UpgradeableHYAXRewardsV2.sol:190"
            },
            {
              "label": "teamTokensStartFundingTime",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewardsV2",
              "src": "contracts\\UpgradeableHYAXRewardsV2.sol:192"
            },
            {
              "label": "teamTokensFundingStarted",
              "offset": 0,
              "slot": "12",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewardsV2",
              "src": "contracts\\UpgradeableHYAXRewardsV2.sol:194"
            },
            {
              "label": "rewardTokensFunded",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewardsV2",
              "src": "contracts\\UpgradeableHYAXRewardsV2.sol:205"
            },
            {
              "label": "rewardTokensDistributed",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewardsV2",
              "src": "contracts\\UpgradeableHYAXRewardsV2.sol:207"
            },
            {
              "label": "rewardTokensWithdrawn",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewardsV2",
              "src": "contracts\\UpgradeableHYAXRewardsV2.sol:209"
            },
            {
              "label": "rewardTokensInSmartContract",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewardsV2",
              "src": "contracts\\UpgradeableHYAXRewardsV2.sol:211"
            },
            {
              "label": "rewardTokensStartFundingTime",
              "offset": 0,
              "slot": "17",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewardsV2",
              "src": "contracts\\UpgradeableHYAXRewardsV2.sol:213"
            },
            {
              "label": "rewardTokensFundingStarted",
              "offset": 0,
              "slot": "18",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewardsV2",
              "src": "contracts\\UpgradeableHYAXRewardsV2.sol:215"
            },
            {
              "label": "whiteListerAddress",
              "offset": 1,
              "slot": "18",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewardsV2",
              "src": "contracts\\UpgradeableHYAXRewardsV2.sol:220"
            },
            {
              "label": "rewardsUpdaterAddress",
              "offset": 0,
              "slot": "19",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewardsV2",
              "src": "contracts\\UpgradeableHYAXRewardsV2.sol:222"
            },
            {
              "label": "maximumBatchSizeForUpdateRewards",
              "offset": 20,
              "slot": "19",
              "type": "t_uint8",
              "contract": "UpgradeableHYAXRewardsV2",
              "src": "contracts\\UpgradeableHYAXRewardsV2.sol:244"
            },
            {
              "label": "wallets",
              "offset": 0,
              "slot": "20",
              "type": "t_mapping(t_address,t_struct(WalletData)1103_storage)",
              "contract": "UpgradeableHYAXRewardsV2",
              "src": "contracts\\UpgradeableHYAXRewardsV2.sol:246"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)80_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(OwnableStorage)13_storage": {
              "label": "struct OwnableUpgradeable.OwnableStorage",
              "members": [
                {
                  "label": "_owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(PausableStorage)172_storage": {
              "label": "struct PausableUpgradeable.PausableStorage",
              "members": [
                {
                  "label": "_paused",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(ReentrancyGuardStorage)243_storage": {
              "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
              "members": [
                {
                  "label": "_status",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            },
            "t_contract(ERC20TokenInterface)839": {
              "label": "contract ERC20TokenInterface",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_struct(WalletData)1103_storage)": {
              "label": "mapping(address => struct UpgradeableHYAXRewardsV2.WalletData)",
              "numberOfBytes": "32"
            },
            "t_struct(WalletData)1103_storage": {
              "label": "struct UpgradeableHYAXRewardsV2.WalletData",
              "members": [
                {
                  "label": "hyaxHoldingAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "hyaxHoldingAmountAtWhitelistTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "totalHyaxRewardsAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "currentRewardsAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "rewardsWithdrawn",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "addedToWhitelistTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "teamTokenWithdrawalTimes",
                  "type": "t_uint8",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "lastRewardsWithdrawalTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "lastRewardsUpdateTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "isTeamWallet",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "isWhitelisted",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "9"
                },
                {
                  "label": "isBlacklisted",
                  "type": "t_bool",
                  "offset": 2,
                  "slot": "9"
                }
              ],
              "numberOfBytes": "320"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {
            "erc7201:openzeppelin.storage.ReentrancyGuard": [
              {
                "contract": "ReentrancyGuardUpgradeable",
                "label": "_status",
                "type": "t_uint256",
                "src": "@openzeppelin\\contracts-upgradeable\\utils\\ReentrancyGuardUpgradeable.sol:43",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Pausable": [
              {
                "contract": "PausableUpgradeable",
                "label": "_paused",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\utils\\PausableUpgradeable.sol:21",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Ownable": [
              {
                "contract": "OwnableUpgradeable",
                "label": "_owner",
                "type": "t_address",
                "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:24",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "hardhat/console.sol:console": {
        "src": "hardhat\\console.sol:4",
        "version": {
          "withMetadata": "b1be11c3bf90cff557541588c2ae5cd66dca02f69e0972ceeb9da182ee9131c5",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      }
    },
    {
      "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)80_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(OwnableStorage)13_storage": {
              "label": "struct OwnableUpgradeable.OwnableStorage",
              "members": [
                {
                  "label": "_owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Ownable": [
              {
                "contract": "OwnableUpgradeable",
                "label": "_owner",
                "type": "t_address",
                "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:24",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable": {
        "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:56",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)80_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:17",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)80_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:PausableUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\PausableUpgradeable.sol:18",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)80_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(PausableStorage)172_storage": {
              "label": "struct PausableUpgradeable.PausableStorage",
              "members": [
                {
                  "label": "_paused",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Pausable": [
              {
                "contract": "PausableUpgradeable",
                "label": "_paused",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\utils\\PausableUpgradeable.sol:21",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\ReentrancyGuardUpgradeable.sol:26",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)80_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(ReentrancyGuardStorage)243_storage": {
              "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
              "members": [
                {
                  "label": "_status",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.ReentrancyGuard": [
              {
                "contract": "ReentrancyGuardUpgradeable",
                "label": "_status",
                "type": "t_uint256",
                "src": "@openzeppelin\\contracts-upgradeable\\utils\\ReentrancyGuardUpgradeable.sol:43",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UpgradeableHYAXRewards.sol:ERC20TokenInterface": {
        "src": "contracts\\UpgradeableHYAXRewards.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "balanceOf(address)",
          "symbol()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UpgradeableHYAXRewards.sol:UpgradeableHYAXRewards": {
        "src": "contracts\\UpgradeableHYAXRewards.sol:23",
        "version": {
          "withMetadata": "5bd488c8ce11499407e9da04fc7f20b129eb74cf3daf7994560cbbfbced36428",
          "withoutMetadata": "f64bb4fbec90acfd466f2624fd94a9d08ef16673b70301382eda4895a8a91199",
          "linkedWithoutMetadata": "f64bb4fbec90acfd466f2624fd94a9d08ef16673b70301382eda4895a8a91199"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:PausableUpgradeable",
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "initialize(address)",
          "addWalletToWhitelist(address,bool,uint256)",
          "updateWhitelistStatus(address,bool)",
          "updateBlacklistStatus(address,bool)",
          "fundSmartContract(uint8,uint256)",
          "withdrawGrowthTokens()",
          "withdrawTeamTokens()",
          "calculateYearForTeamTokens()",
          "updateRewardsBatch(address[],uint256[])",
          "updateRewardsSingle(address,uint256)",
          "withdrawRewardTokens()",
          "withdrawTokensToBurn(uint8,uint256)",
          "recoverTeamTokens(address,address)",
          "updateWhiteListerAddress(address)",
          "updateRewardsUpdaterAddress(address)",
          "updateHyaxTokenAddress(address)",
          "updateMaximumBatchSizeForUpdateRewards(uint8)",
          "pause()",
          "unpause()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "hyaxTokenAddress",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:151"
            },
            {
              "label": "hyaxToken",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(ERC20TokenInterface)839",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:153"
            },
            {
              "label": "growthTokensFunded",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:165"
            },
            {
              "label": "growthTokensWithdrawn",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:167"
            },
            {
              "label": "growthTokensInSmartContract",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:169"
            },
            {
              "label": "growthTokensLastWithdrawalTime",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:171"
            },
            {
              "label": "growthTokensStartFundingTime",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:173"
            },
            {
              "label": "growthTokensFundingStarted",
              "offset": 0,
              "slot": "7",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:175"
            },
            {
              "label": "teamTokensFunded",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:186"
            },
            {
              "label": "teamTokensWithdrawn",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:188"
            },
            {
              "label": "teamTokensInSmartContract",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:190"
            },
            {
              "label": "teamTokensStartFundingTime",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:192"
            },
            {
              "label": "teamTokensFundingStarted",
              "offset": 0,
              "slot": "12",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:194"
            },
            {
              "label": "rewardTokensFunded",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:205"
            },
            {
              "label": "rewardTokensDistributed",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:207"
            },
            {
              "label": "rewardTokensWithdrawn",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:209"
            },
            {
              "label": "rewardTokensInSmartContract",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:211"
            },
            {
              "label": "rewardTokensStartFundingTime",
              "offset": 0,
              "slot": "17",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:213"
            },
            {
              "label": "rewardTokensFundingStarted",
              "offset": 0,
              "slot": "18",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:215"
            },
            {
              "label": "whiteListerAddress",
              "offset": 1,
              "slot": "18",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:220"
            },
            {
              "label": "rewardsUpdaterAddress",
              "offset": 0,
              "slot": "19",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:222"
            },
            {
              "label": "maximumBatchSizeForUpdateRewards",
              "offset": 20,
              "slot": "19",
              "type": "t_uint8",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:244"
            },
            {
              "label": "wallets",
              "offset": 0,
              "slot": "20",
              "type": "t_mapping(t_address,t_struct(WalletData)1103_storage)",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:246"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)80_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(OwnableStorage)13_storage": {
              "label": "struct OwnableUpgradeable.OwnableStorage",
              "members": [
                {
                  "label": "_owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(PausableStorage)172_storage": {
              "label": "struct PausableUpgradeable.PausableStorage",
              "members": [
                {
                  "label": "_paused",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(ReentrancyGuardStorage)243_storage": {
              "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
              "members": [
                {
                  "label": "_status",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            },
            "t_contract(ERC20TokenInterface)839": {
              "label": "contract ERC20TokenInterface",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_struct(WalletData)1103_storage)": {
              "label": "mapping(address => struct UpgradeableHYAXRewards.WalletData)",
              "numberOfBytes": "32"
            },
            "t_struct(WalletData)1103_storage": {
              "label": "struct UpgradeableHYAXRewards.WalletData",
              "members": [
                {
                  "label": "hyaxHoldingAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "hyaxHoldingAmountAtWhitelistTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "totalHyaxRewardsAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "currentRewardsAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "rewardsWithdrawn",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "addedToWhitelistTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "teamTokenWithdrawalTimes",
                  "type": "t_uint8",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "lastRewardsWithdrawalTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "lastRewardsUpdateTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "isTeamWallet",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "isWhitelisted",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "9"
                },
                {
                  "label": "isBlacklisted",
                  "type": "t_bool",
                  "offset": 2,
                  "slot": "9"
                }
              ],
              "numberOfBytes": "320"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {
            "erc7201:openzeppelin.storage.ReentrancyGuard": [
              {
                "contract": "ReentrancyGuardUpgradeable",
                "label": "_status",
                "type": "t_uint256",
                "src": "@openzeppelin\\contracts-upgradeable\\utils\\ReentrancyGuardUpgradeable.sol:43",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Pausable": [
              {
                "contract": "PausableUpgradeable",
                "label": "_paused",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\utils\\PausableUpgradeable.sol:21",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Ownable": [
              {
                "contract": "OwnableUpgradeable",
                "label": "_owner",
                "type": "t_address",
                "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:24",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "hardhat/console.sol:console": {
        "src": "hardhat\\console.sol:4",
        "version": {
          "withMetadata": "b1be11c3bf90cff557541588c2ae5cd66dca02f69e0972ceeb9da182ee9131c5",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      }
    },
    {
      "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)80_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(OwnableStorage)13_storage": {
              "label": "struct OwnableUpgradeable.OwnableStorage",
              "members": [
                {
                  "label": "_owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Ownable": [
              {
                "contract": "OwnableUpgradeable",
                "label": "_owner",
                "type": "t_address",
                "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:24",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable": {
        "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:56",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)80_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:17",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)80_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:PausableUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\PausableUpgradeable.sol:18",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)80_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(PausableStorage)172_storage": {
              "label": "struct PausableUpgradeable.PausableStorage",
              "members": [
                {
                  "label": "_paused",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Pausable": [
              {
                "contract": "PausableUpgradeable",
                "label": "_paused",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\utils\\PausableUpgradeable.sol:21",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\ReentrancyGuardUpgradeable.sol:26",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)80_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(ReentrancyGuardStorage)243_storage": {
              "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
              "members": [
                {
                  "label": "_status",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.ReentrancyGuard": [
              {
                "contract": "ReentrancyGuardUpgradeable",
                "label": "_status",
                "type": "t_uint256",
                "src": "@openzeppelin\\contracts-upgradeable\\utils\\ReentrancyGuardUpgradeable.sol:43",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC1155Errors": {
        "src": "@openzeppelin\\contracts\\interfaces\\draft-IERC6093.sol:113",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors": {
        "src": "@openzeppelin\\contracts\\interfaces\\draft-IERC6093.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC721Errors": {
        "src": "@openzeppelin\\contracts\\interfaces\\draft-IERC6093.sol:55",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:29",
        "inherit": [
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:45"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:30"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:32"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:34"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:11",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/HYAXToken.sol:HYAXToken": {
        "src": "contracts\\HYAXToken.sol:6",
        "version": {
          "withMetadata": "4e38874832bb6dfddf1d30273054677c79c9e90bae0f9c19c8c692abe2e79067",
          "withoutMetadata": "71e2c006166b48e30c5c3b87e1e0c46cf859ecb5d28506e125fced85500ff9fb",
          "linkedWithoutMetadata": "71e2c006166b48e30c5c3b87e1e0c46cf859ecb5d28506e125fced85500ff9fb"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "HYAXToken",
            "src": "contracts\\HYAXToken.sol:7"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:30"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:32"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:34"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/USDCToken.sol:USDCToken": {
        "src": "contracts\\USDCToken.sol:6",
        "version": {
          "withMetadata": "7df6bd29532985a38a1065ac1f897f9d103be07cd4bbc9cf82aab334042f7bbe",
          "withoutMetadata": "e1a9238a836f134ac6a2291975a4008709cacec2c8c411698903b60ce9a1fcdc",
          "linkedWithoutMetadata": "e1a9238a836f134ac6a2291975a4008709cacec2c8c411698903b60ce9a1fcdc"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "USDCToken",
            "src": "contracts\\USDCToken.sol:7"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:30"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:32"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:34"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UpgradeableHYAXRewards.sol:ERC20TokenInterface": {
        "src": "contracts\\UpgradeableHYAXRewards.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "balanceOf(address)",
          "symbol()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UpgradeableHYAXRewards.sol:UpgradeableHYAXRewards": {
        "src": "contracts\\UpgradeableHYAXRewards.sol:23",
        "version": {
          "withMetadata": "e8364689ecef0b7b4465c6e012d95ba4c5e8cd5193f49da706e3add4ca7d3278",
          "withoutMetadata": "ad90d7e671b548a9f8a76f76d3fc8f1a720988b136adc11a1cdc20ba0578ff59",
          "linkedWithoutMetadata": "ad90d7e671b548a9f8a76f76d3fc8f1a720988b136adc11a1cdc20ba0578ff59"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:PausableUpgradeable",
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "initialize(address)",
          "addWalletToWhitelist(address,bool,uint256)",
          "updateWhitelistStatus(address,bool)",
          "updateBlacklistStatus(address,bool)",
          "fundSmartContract(uint8,uint256)",
          "withdrawGrowthTokens()",
          "withdrawTeamTokens()",
          "calculateYearForTeamTokens()",
          "updateRewardsBatch(address[],uint256[])",
          "updateRewardsSingle(address,uint256)",
          "withdrawRewardTokens()",
          "withdrawTokensToBurn(uint8,uint256)",
          "recoverTeamTokens(address,address)",
          "updateWhiteListerAddress(address)",
          "updateRewardsUpdaterAddress(address)",
          "updateHyaxTokenAddress(address)",
          "updateMaximumBatchSizeForUpdateRewards(uint8)",
          "pause()",
          "unpause()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "maximumBatchSizeForUpdateRewards",
            "src": "contracts\\UpgradeableHYAXRewards.sol:244"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "hyaxTokenAddress",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:151"
            },
            {
              "label": "hyaxToken",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(ERC20TokenInterface)1675",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:153"
            },
            {
              "label": "growthTokensFunded",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:165"
            },
            {
              "label": "growthTokensWithdrawn",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:167"
            },
            {
              "label": "growthTokensInSmartContract",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:169"
            },
            {
              "label": "growthTokensLastWithdrawalTime",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:171"
            },
            {
              "label": "growthTokensStartFundingTime",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:173"
            },
            {
              "label": "growthTokensFundingStarted",
              "offset": 0,
              "slot": "7",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:175"
            },
            {
              "label": "teamTokensFunded",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:186"
            },
            {
              "label": "teamTokensWithdrawn",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:188"
            },
            {
              "label": "teamTokensInSmartContract",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:190"
            },
            {
              "label": "teamTokensStartFundingTime",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:192"
            },
            {
              "label": "teamTokensFundingStarted",
              "offset": 0,
              "slot": "12",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:194"
            },
            {
              "label": "rewardTokensFunded",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:205"
            },
            {
              "label": "rewardTokensDistributed",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:207"
            },
            {
              "label": "rewardTokensWithdrawn",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:209"
            },
            {
              "label": "rewardTokensInSmartContract",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:211"
            },
            {
              "label": "rewardTokensStartFundingTime",
              "offset": 0,
              "slot": "17",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:213"
            },
            {
              "label": "rewardTokensFundingStarted",
              "offset": 0,
              "slot": "18",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:215"
            },
            {
              "label": "whiteListerAddress",
              "offset": 1,
              "slot": "18",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:220"
            },
            {
              "label": "rewardsUpdaterAddress",
              "offset": 0,
              "slot": "19",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:222"
            },
            {
              "label": "maximumBatchSizeForUpdateRewards",
              "offset": 20,
              "slot": "19",
              "type": "t_uint8",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:244"
            },
            {
              "label": "wallets",
              "offset": 0,
              "slot": "20",
              "type": "t_mapping(t_address,t_struct(WalletData)1939_storage)",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:246"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)80_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(OwnableStorage)13_storage": {
              "label": "struct OwnableUpgradeable.OwnableStorage",
              "members": [
                {
                  "label": "_owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(PausableStorage)172_storage": {
              "label": "struct PausableUpgradeable.PausableStorage",
              "members": [
                {
                  "label": "_paused",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(ReentrancyGuardStorage)243_storage": {
              "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
              "members": [
                {
                  "label": "_status",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            },
            "t_contract(ERC20TokenInterface)1675": {
              "label": "contract ERC20TokenInterface",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_struct(WalletData)1939_storage)": {
              "label": "mapping(address => struct UpgradeableHYAXRewards.WalletData)",
              "numberOfBytes": "32"
            },
            "t_struct(WalletData)1939_storage": {
              "label": "struct UpgradeableHYAXRewards.WalletData",
              "members": [
                {
                  "label": "hyaxHoldingAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "hyaxHoldingAmountAtWhitelistTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "totalHyaxRewardsAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "currentRewardsAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "rewardsWithdrawn",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "addedToWhitelistTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "teamTokenWithdrawalTimes",
                  "type": "t_uint8",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "lastRewardsWithdrawalTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "lastRewardsUpdateTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "isTeamWallet",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "isWhitelisted",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "9"
                },
                {
                  "label": "isBlacklisted",
                  "type": "t_bool",
                  "offset": 2,
                  "slot": "9"
                }
              ],
              "numberOfBytes": "320"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {
            "erc7201:openzeppelin.storage.ReentrancyGuard": [
              {
                "contract": "ReentrancyGuardUpgradeable",
                "label": "_status",
                "type": "t_uint256",
                "src": "@openzeppelin\\contracts-upgradeable\\utils\\ReentrancyGuardUpgradeable.sol:43",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Pausable": [
              {
                "contract": "PausableUpgradeable",
                "label": "_paused",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\utils\\PausableUpgradeable.sol:21",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Ownable": [
              {
                "contract": "OwnableUpgradeable",
                "label": "_owner",
                "type": "t_address",
                "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:24",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "hardhat/console.sol:console": {
        "src": "hardhat\\console.sol:4",
        "version": {
          "withMetadata": "b1be11c3bf90cff557541588c2ae5cd66dca02f69e0972ceeb9da182ee9131c5",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Pausable.sol:Pausable": {
        "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:17",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Pausable",
            "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:43"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_paused",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UpgradeableHYAXRewards.sol:ERC20TokenInterface": {
        "src": "contracts\\UpgradeableHYAXRewards.sol:13",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "balanceOf(address)",
          "symbol()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UpgradeableHYAXRewards.sol:UpgradeableHYAXRewards": {
        "src": "contracts\\UpgradeableHYAXRewards.sol:20",
        "version": {
          "withMetadata": "16b1f07d10fe99307702ca92a52d3c82a352932478007a54d867c788f67ff8a9",
          "withoutMetadata": "98af840509a9f06221af0e17a98197c29db749a34965213398560f932727183d",
          "linkedWithoutMetadata": "98af840509a9f06221af0e17a98197c29db749a34965213398560f932727183d"
        },
        "inherit": [
          "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "addWalletToWhitelist(address,bool,uint256)",
          "updateWhitelistStatus(address,bool)",
          "updateBlacklistStatus(address,bool)",
          "fundSmartContract(uint8,uint256)",
          "withdrawGrowthTokens()",
          "withdrawTeamTokens()",
          "calculateYearForTeamTokens()",
          "updateRewardsBatch(address[],uint256[])",
          "updateRewardsSingle(address,uint256)",
          "withdrawRewardTokens()",
          "withdrawTokensToBurn(uint8,uint256)",
          "recoverTeamTokens(address,address)",
          "updateWhiteListerAddress(address)",
          "updateRewardsUpdaterAddress(address)",
          "updateHyaxTokenAddress(address)",
          "updateMaximumBatchSizeForUpdateRewards(uint8)",
          "pause()",
          "unpause()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UpgradeableHYAXRewards",
            "src": "contracts\\UpgradeableHYAXRewards.sol:246"
          },
          {
            "kind": "state-variable-assignment",
            "name": "maximumBatchSizeForUpdateRewards",
            "src": "contracts\\UpgradeableHYAXRewards.sol:241"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "_paused",
              "offset": 20,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:37"
            },
            {
              "label": "hyaxTokenAddress",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:148"
            },
            {
              "label": "hyaxToken",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(ERC20TokenInterface)403",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:150"
            },
            {
              "label": "growthTokensFunded",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:162"
            },
            {
              "label": "growthTokensWithdrawn",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:164"
            },
            {
              "label": "growthTokensInSmartContract",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:166"
            },
            {
              "label": "growthTokensLastWithdrawalTime",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:168"
            },
            {
              "label": "growthTokensStartFundingTime",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:170"
            },
            {
              "label": "growthTokensFundingStarted",
              "offset": 0,
              "slot": "9",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:172"
            },
            {
              "label": "teamTokensFunded",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:183"
            },
            {
              "label": "teamTokensWithdrawn",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:185"
            },
            {
              "label": "teamTokensInSmartContract",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:187"
            },
            {
              "label": "teamTokensStartFundingTime",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:189"
            },
            {
              "label": "teamTokensFundingStarted",
              "offset": 0,
              "slot": "14",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:191"
            },
            {
              "label": "rewardTokensFunded",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:202"
            },
            {
              "label": "rewardTokensDistributed",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:204"
            },
            {
              "label": "rewardTokensWithdrawn",
              "offset": 0,
              "slot": "17",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:206"
            },
            {
              "label": "rewardTokensInSmartContract",
              "offset": 0,
              "slot": "18",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:208"
            },
            {
              "label": "rewardTokensStartFundingTime",
              "offset": 0,
              "slot": "19",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:210"
            },
            {
              "label": "rewardTokensFundingStarted",
              "offset": 0,
              "slot": "20",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:212"
            },
            {
              "label": "whiteListerAddress",
              "offset": 1,
              "slot": "20",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:217"
            },
            {
              "label": "rewardsUpdaterAddress",
              "offset": 0,
              "slot": "21",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:219"
            },
            {
              "label": "maximumBatchSizeForUpdateRewards",
              "offset": 20,
              "slot": "21",
              "type": "t_uint8",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:241"
            },
            {
              "label": "wallets",
              "offset": 0,
              "slot": "22",
              "type": "t_mapping(t_address,t_struct(WalletData)667_storage)",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:243"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ERC20TokenInterface)403": {
              "label": "contract ERC20TokenInterface",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_struct(WalletData)667_storage)": {
              "label": "mapping(address => struct UpgradeableHYAXRewards.WalletData)",
              "numberOfBytes": "32"
            },
            "t_struct(WalletData)667_storage": {
              "label": "struct UpgradeableHYAXRewards.WalletData",
              "members": [
                {
                  "label": "hyaxHoldingAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "hyaxHoldingAmountAtWhitelistTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "totalHyaxRewardsAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "currentRewardsAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "rewardsWithdrawn",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "addedToWhitelistTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "teamTokenWithdrawalTimes",
                  "type": "t_uint8",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "lastRewardsWithdrawalTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "lastRewardsUpdateTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "isTeamWallet",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "isWhitelisted",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "9"
                },
                {
                  "label": "isBlacklisted",
                  "type": "t_bool",
                  "offset": 2,
                  "slot": "9"
                }
              ],
              "numberOfBytes": "320"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "hardhat/console.sol:console": {
        "src": "hardhat\\console.sol:4",
        "version": {
          "withMetadata": "b1be11c3bf90cff557541588c2ae5cd66dca02f69e0972ceeb9da182ee9131c5",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Pausable.sol:Pausable": {
        "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:17",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Pausable",
            "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:43"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_paused",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UpgradeableHYAXRewards.sol:ERC20TokenInterface": {
        "src": "contracts\\UpgradeableHYAXRewards.sol:13",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "balanceOf(address)",
          "symbol()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UpgradeableHYAXRewards.sol:UpgradeableHYAXRewards": {
        "src": "contracts\\UpgradeableHYAXRewards.sol:20",
        "version": {
          "withMetadata": "8ae3bef78fc4b0f3aac0bf2dbf7fbda1f357c8fe09b40c330c757acd0550d08e",
          "withoutMetadata": "2d9fa7c3a0157b5a0f027dc83da51c2d09f620be1ffb7223dbb900c4f9346e14",
          "linkedWithoutMetadata": "2d9fa7c3a0157b5a0f027dc83da51c2d09f620be1ffb7223dbb900c4f9346e14"
        },
        "inherit": [
          "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "addWalletToWhitelist(address,bool,uint256)",
          "updateWhitelistStatus(address,bool)",
          "updateBlacklistStatus(address,bool)",
          "fundSmartContract(uint8,uint256)",
          "withdrawGrowthTokens()",
          "withdrawTeamTokens()",
          "calculateYearForTeamTokens()",
          "updateRewardsBatch(address[],uint256[])",
          "updateRewardsSingle(address,uint256)",
          "withdrawRewardTokens()",
          "withdrawTokensToBurn(uint8,uint256)",
          "recoverTeamTokens(address,address)",
          "updateWhiteListerAddress(address)",
          "updateRewardsUpdaterAddress(address)",
          "updateHyaxTokenAddress(address)",
          "updateMaximumBatchSizeForUpdateRewards(uint8)",
          "pause()",
          "unpause()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UpgradeableHYAXRewards",
            "src": "contracts\\UpgradeableHYAXRewards.sol:250"
          },
          {
            "kind": "state-variable-assignment",
            "name": "maximumBatchSizeForUpdateRewards",
            "src": "contracts\\UpgradeableHYAXRewards.sol:245"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "_paused",
              "offset": 20,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:37"
            },
            {
              "label": "hyaxTokenAddress",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:148"
            },
            {
              "label": "hyaxToken",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(ERC20TokenInterface)403",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:150"
            },
            {
              "label": "growthTokensFunded",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:162"
            },
            {
              "label": "growthTokensWithdrawn",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:164"
            },
            {
              "label": "growthTokensInSmartContract",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:166"
            },
            {
              "label": "growthTokensLastWithdrawalTime",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:168"
            },
            {
              "label": "growthTokensStartFundingTime",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:170"
            },
            {
              "label": "growthTokensFundingStarted",
              "offset": 0,
              "slot": "9",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:172"
            },
            {
              "label": "teamTokensFunded",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:183"
            },
            {
              "label": "teamTokensWithdrawn",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:185"
            },
            {
              "label": "teamTokensInSmartContract",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:187"
            },
            {
              "label": "teamTokensLastWithdrawalTime",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:189"
            },
            {
              "label": "teamTokensStartFundingTime",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:191"
            },
            {
              "label": "teamTokensFundingStarted",
              "offset": 0,
              "slot": "15",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:193"
            },
            {
              "label": "rewardTokensFunded",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:206"
            },
            {
              "label": "rewardTokensDistributed",
              "offset": 0,
              "slot": "17",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:208"
            },
            {
              "label": "rewardTokensWithdrawn",
              "offset": 0,
              "slot": "18",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:210"
            },
            {
              "label": "rewardTokensInSmartContract",
              "offset": 0,
              "slot": "19",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:212"
            },
            {
              "label": "rewardTokensStartFundingTime",
              "offset": 0,
              "slot": "20",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:214"
            },
            {
              "label": "rewardTokensFundingStarted",
              "offset": 0,
              "slot": "21",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:216"
            },
            {
              "label": "whiteListerAddress",
              "offset": 1,
              "slot": "21",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:221"
            },
            {
              "label": "rewardsUpdaterAddress",
              "offset": 0,
              "slot": "22",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:223"
            },
            {
              "label": "maximumBatchSizeForUpdateRewards",
              "offset": 20,
              "slot": "22",
              "type": "t_uint8",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:245"
            },
            {
              "label": "wallets",
              "offset": 0,
              "slot": "23",
              "type": "t_mapping(t_address,t_struct(WalletData)672_storage)",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:247"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ERC20TokenInterface)403": {
              "label": "contract ERC20TokenInterface",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_struct(WalletData)672_storage)": {
              "label": "mapping(address => struct UpgradeableHYAXRewards.WalletData)",
              "numberOfBytes": "32"
            },
            "t_struct(WalletData)672_storage": {
              "label": "struct UpgradeableHYAXRewards.WalletData",
              "members": [
                {
                  "label": "hyaxHoldingAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "hyaxHoldingAmountAtWhitelistTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "totalHyaxRewardsAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "currentRewardsAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "rewardsWithdrawn",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "addedToWhitelistTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "tokenWithdrawalTimes",
                  "type": "t_uint8",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "lastRewardsWithdrawalTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "lastRewardsUpdateTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "isTeamWallet",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "isWhitelisted",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "9"
                },
                {
                  "label": "isBlacklisted",
                  "type": "t_bool",
                  "offset": 2,
                  "slot": "9"
                }
              ],
              "numberOfBytes": "320"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "hardhat/console.sol:console": {
        "src": "hardhat\\console.sol:4",
        "version": {
          "withMetadata": "b1be11c3bf90cff557541588c2ae5cd66dca02f69e0972ceeb9da182ee9131c5",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Pausable.sol:Pausable": {
        "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:17",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Pausable",
            "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:43"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_paused",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UpgradeableHYAXRewards.sol:ERC20TokenInterface": {
        "src": "contracts\\UpgradeableHYAXRewards.sol:13",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "balanceOf(address)",
          "symbol()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UpgradeableHYAXRewards.sol:UpgradeableHYAXRewards": {
        "src": "contracts\\UpgradeableHYAXRewards.sol:20",
        "version": {
          "withMetadata": "9babbea60b5ddc6ff0621f7d0ee63a6ab9f9ef2431bcbad4104aff665d2e4d0f",
          "withoutMetadata": "9430d62ff1165c24e9a709b5ba7762f4015e90ce900caf2344a5a548fa6d36e3",
          "linkedWithoutMetadata": "9430d62ff1165c24e9a709b5ba7762f4015e90ce900caf2344a5a548fa6d36e3"
        },
        "inherit": [
          "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "addWalletToWhitelist(address,bool,uint256)",
          "updateWhitelistStatus(address,bool)",
          "updateBlacklistStatus(address,bool)",
          "fundSmartContract(uint8,uint256)",
          "withdrawGrowthTokens()",
          "withdrawTeamTokens()",
          "calculateYearForTeamTokens()",
          "updateRewardsBatch(address[],uint256[])",
          "updateRewardsSingle(address,uint256)",
          "withdrawRewardTokens()",
          "withdrawTokensToBurn(uint8,uint256)",
          "recoverTeamTokens(address,address)",
          "updateWhiteListerAddress(address)",
          "updateRewardsUpdaterAddress(address)",
          "updateHyaxTokenAddress(address)",
          "updateMaximumBatchSizeForUpdateRewards(uint8)",
          "pause()",
          "unpause()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UpgradeableHYAXRewards",
            "src": "contracts\\UpgradeableHYAXRewards.sol:250"
          },
          {
            "kind": "state-variable-assignment",
            "name": "maximumBatchSizeForUpdateRewards",
            "src": "contracts\\UpgradeableHYAXRewards.sol:245"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "_paused",
              "offset": 20,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:37"
            },
            {
              "label": "hyaxTokenAddress",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:148"
            },
            {
              "label": "hyaxToken",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(ERC20TokenInterface)403",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:150"
            },
            {
              "label": "growthTokensFunded",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:162"
            },
            {
              "label": "growthTokensWithdrawn",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:164"
            },
            {
              "label": "growthTokensInSmartContract",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:166"
            },
            {
              "label": "growthTokensLastWithdrawalTime",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:168"
            },
            {
              "label": "growthTokensStartFundingTime",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:170"
            },
            {
              "label": "growthTokensFundingStarted",
              "offset": 0,
              "slot": "9",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:172"
            },
            {
              "label": "teamTokensFunded",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:183"
            },
            {
              "label": "teamTokensWithdrawn",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:185"
            },
            {
              "label": "teamTokensInSmartContract",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:187"
            },
            {
              "label": "teamTokensLastWithdrawalTime",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:189"
            },
            {
              "label": "teamTokensStartFundingTime",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:191"
            },
            {
              "label": "teamTokensFundingStarted",
              "offset": 0,
              "slot": "15",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:193"
            },
            {
              "label": "rewardTokensFunded",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:206"
            },
            {
              "label": "rewardTokensDistributed",
              "offset": 0,
              "slot": "17",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:208"
            },
            {
              "label": "rewardTokensWithdrawn",
              "offset": 0,
              "slot": "18",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:210"
            },
            {
              "label": "rewardTokensInSmartContract",
              "offset": 0,
              "slot": "19",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:212"
            },
            {
              "label": "rewardTokensStartFundingTime",
              "offset": 0,
              "slot": "20",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:214"
            },
            {
              "label": "rewardTokensFundingStarted",
              "offset": 0,
              "slot": "21",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:216"
            },
            {
              "label": "whiteListerAddress",
              "offset": 1,
              "slot": "21",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:221"
            },
            {
              "label": "rewardsUpdaterAddress",
              "offset": 0,
              "slot": "22",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:223"
            },
            {
              "label": "maximumBatchSizeForUpdateRewards",
              "offset": 20,
              "slot": "22",
              "type": "t_uint8",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:245"
            },
            {
              "label": "wallets",
              "offset": 0,
              "slot": "23",
              "type": "t_mapping(t_address,t_struct(WalletData)672_storage)",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:247"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ERC20TokenInterface)403": {
              "label": "contract ERC20TokenInterface",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_struct(WalletData)672_storage)": {
              "label": "mapping(address => struct UpgradeableHYAXRewards.WalletData)",
              "numberOfBytes": "32"
            },
            "t_struct(WalletData)672_storage": {
              "label": "struct UpgradeableHYAXRewards.WalletData",
              "members": [
                {
                  "label": "hyaxHoldingAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "hyaxHoldingAmountAtWhitelistTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "totalHyaxRewardsAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "currentRewardsAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "rewardsWithdrawn",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "addedToWhitelistTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "tokenWithdrawalTimes",
                  "type": "t_uint8",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "lastRewardsWithdrawalTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "lastRewardsUpdateTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "isTeamWallet",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "isWhitelisted",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "9"
                },
                {
                  "label": "isBlacklisted",
                  "type": "t_bool",
                  "offset": 2,
                  "slot": "9"
                }
              ],
              "numberOfBytes": "320"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "hardhat/console.sol:console": {
        "src": "hardhat\\console.sol:4",
        "version": {
          "withMetadata": "b1be11c3bf90cff557541588c2ae5cd66dca02f69e0972ceeb9da182ee9131c5",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Pausable.sol:Pausable": {
        "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:17",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Pausable",
            "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:43"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_paused",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UpgradeableHYAXRewards.sol:ERC20TokenInterface": {
        "src": "contracts\\UpgradeableHYAXRewards.sol:13",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "balanceOf(address)",
          "symbol()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UpgradeableHYAXRewards.sol:UpgradeableHYAXRewards": {
        "src": "contracts\\UpgradeableHYAXRewards.sol:20",
        "version": {
          "withMetadata": "0601a15975e9a4e26faddc4ac8d040f0df7fba8eb6e09a09ea56a3fe89359015",
          "withoutMetadata": "9430d62ff1165c24e9a709b5ba7762f4015e90ce900caf2344a5a548fa6d36e3",
          "linkedWithoutMetadata": "9430d62ff1165c24e9a709b5ba7762f4015e90ce900caf2344a5a548fa6d36e3"
        },
        "inherit": [
          "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "addWalletToWhitelist(address,bool,uint256)",
          "updateWhitelistStatus(address,bool)",
          "updateBlacklistStatus(address,bool)",
          "fundSmartContract(uint8,uint256)",
          "withdrawGrowthTokens()",
          "withdrawTeamTokens()",
          "calculateYearForTeamTokens()",
          "updateRewardsBatch(address[],uint256[])",
          "updateRewardsSingle(address,uint256)",
          "withdrawRewardTokens()",
          "withdrawTokensToBurn(uint8,uint256)",
          "recoverTeamTokens(address,address)",
          "updateWhiteListerAddress(address)",
          "updateRewardsUpdaterAddress(address)",
          "updateHyaxTokenAddress(address)",
          "updateMaximumBatchSizeForUpdateRewards(uint8)",
          "pause()",
          "unpause()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UpgradeableHYAXRewards",
            "src": "contracts\\UpgradeableHYAXRewards.sol:250"
          },
          {
            "kind": "state-variable-assignment",
            "name": "maximumBatchSizeForUpdateRewards",
            "src": "contracts\\UpgradeableHYAXRewards.sol:245"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "_paused",
              "offset": 20,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:37"
            },
            {
              "label": "hyaxTokenAddress",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:148"
            },
            {
              "label": "hyaxToken",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(ERC20TokenInterface)403",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:150"
            },
            {
              "label": "growthTokensFunded",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:162"
            },
            {
              "label": "growthTokensWithdrawn",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:164"
            },
            {
              "label": "growthTokensInSmartContract",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:166"
            },
            {
              "label": "growthTokensLastWithdrawalTime",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:168"
            },
            {
              "label": "growthTokensStartFundingTime",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:170"
            },
            {
              "label": "growthTokensFundingStarted",
              "offset": 0,
              "slot": "9",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:172"
            },
            {
              "label": "teamTokensFunded",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:183"
            },
            {
              "label": "teamTokensWithdrawn",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:185"
            },
            {
              "label": "teamTokensInSmartContract",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:187"
            },
            {
              "label": "teamTokensLastWithdrawalTime",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:189"
            },
            {
              "label": "teamTokensStartFundingTime",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:191"
            },
            {
              "label": "teamTokensFundingStarted",
              "offset": 0,
              "slot": "15",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:193"
            },
            {
              "label": "rewardTokensFunded",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:206"
            },
            {
              "label": "rewardTokensDistributed",
              "offset": 0,
              "slot": "17",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:208"
            },
            {
              "label": "rewardTokensWithdrawn",
              "offset": 0,
              "slot": "18",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:210"
            },
            {
              "label": "rewardTokensInSmartContract",
              "offset": 0,
              "slot": "19",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:212"
            },
            {
              "label": "rewardTokensStartFundingTime",
              "offset": 0,
              "slot": "20",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:214"
            },
            {
              "label": "rewardTokensFundingStarted",
              "offset": 0,
              "slot": "21",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:216"
            },
            {
              "label": "whiteListerAddress",
              "offset": 1,
              "slot": "21",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:221"
            },
            {
              "label": "rewardsUpdaterAddress",
              "offset": 0,
              "slot": "22",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:223"
            },
            {
              "label": "maximumBatchSizeForUpdateRewards",
              "offset": 20,
              "slot": "22",
              "type": "t_uint8",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:245"
            },
            {
              "label": "wallets",
              "offset": 0,
              "slot": "23",
              "type": "t_mapping(t_address,t_struct(WalletData)672_storage)",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:247"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ERC20TokenInterface)403": {
              "label": "contract ERC20TokenInterface",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_struct(WalletData)672_storage)": {
              "label": "mapping(address => struct UpgradeableHYAXRewards.WalletData)",
              "numberOfBytes": "32"
            },
            "t_struct(WalletData)672_storage": {
              "label": "struct UpgradeableHYAXRewards.WalletData",
              "members": [
                {
                  "label": "hyaxHoldingAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "hyaxHoldingAmountAtWhitelistTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "totalHyaxRewardsAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "currentRewardsAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "rewardsWithdrawn",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "addedToWhitelistTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "tokenWithdrawalTimes",
                  "type": "t_uint8",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "lastRewardsWithdrawalTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "lastRewardsUpdateTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "isTeamWallet",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "isWhitelisted",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "9"
                },
                {
                  "label": "isBlacklisted",
                  "type": "t_bool",
                  "offset": 2,
                  "slot": "9"
                }
              ],
              "numberOfBytes": "320"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "hardhat/console.sol:console": {
        "src": "hardhat\\console.sol:4",
        "version": {
          "withMetadata": "b1be11c3bf90cff557541588c2ae5cd66dca02f69e0972ceeb9da182ee9131c5",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Pausable.sol:Pausable": {
        "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:17",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Pausable",
            "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:43"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_paused",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UpgradeableHYAXRewards.sol:ERC20TokenInterface": {
        "src": "contracts\\UpgradeableHYAXRewards.sol:13",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "balanceOf(address)",
          "symbol()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UpgradeableHYAXRewards.sol:UpgradeableHYAXRewards": {
        "src": "contracts\\UpgradeableHYAXRewards.sol:20",
        "version": {
          "withMetadata": "c59e0269b5620e269b0239025b4728858a247e8ff9985fd34d147a58fa6406c0",
          "withoutMetadata": "a85b311c89cb023619ddf8fbac659fcf274a088d4fc1dc2bd2673f2b08802beb",
          "linkedWithoutMetadata": "a85b311c89cb023619ddf8fbac659fcf274a088d4fc1dc2bd2673f2b08802beb"
        },
        "inherit": [
          "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "addWalletToWhitelist(address,bool,uint256)",
          "updateWhitelistStatus(address,bool)",
          "updateBlacklistStatus(address,bool)",
          "fundSmartContract(uint8,uint256)",
          "withdrawGrowthTokens()",
          "withdrawTeamTokens()",
          "calculateYearForTeamTokens()",
          "updateRewardsBatch(address[],uint256[])",
          "updateRewardsSingle(address,uint256)",
          "withdrawRewardTokens()",
          "withdrawTokensToBurn(uint8,uint256)",
          "recoverTeamTokens(address,address)",
          "updateWhiteListerAddress(address)",
          "updateRewardsUpdaterAddress(address)",
          "updateHyaxTokenAddress(address)",
          "updateMaximumBatchSizeForUpdateRewards(uint8)",
          "pause()",
          "unpause()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UpgradeableHYAXRewards",
            "src": "contracts\\UpgradeableHYAXRewards.sol:250"
          },
          {
            "kind": "state-variable-assignment",
            "name": "maximumBatchSizeForUpdateRewards",
            "src": "contracts\\UpgradeableHYAXRewards.sol:245"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "_paused",
              "offset": 20,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:37"
            },
            {
              "label": "hyaxTokenAddress",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:148"
            },
            {
              "label": "hyaxToken",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(ERC20TokenInterface)403",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:150"
            },
            {
              "label": "growthTokensFunded",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:162"
            },
            {
              "label": "growthTokensWithdrawn",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:164"
            },
            {
              "label": "growthTokensInSmartContract",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:166"
            },
            {
              "label": "growthTokensLastWithdrawalTime",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:168"
            },
            {
              "label": "growthTokensStartFundingTime",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:170"
            },
            {
              "label": "growthTokensFundingStarted",
              "offset": 0,
              "slot": "9",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:172"
            },
            {
              "label": "teamTokensFunded",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:183"
            },
            {
              "label": "teamTokensWithdrawn",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:185"
            },
            {
              "label": "teamTokensInSmartContract",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:187"
            },
            {
              "label": "teamTokensLastWithdrawalTime",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:189"
            },
            {
              "label": "teamTokensStartFundingTime",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:191"
            },
            {
              "label": "teamTokensFundingStarted",
              "offset": 0,
              "slot": "15",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:193"
            },
            {
              "label": "rewardTokensFunded",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:206"
            },
            {
              "label": "rewardTokensDistributed",
              "offset": 0,
              "slot": "17",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:208"
            },
            {
              "label": "rewardTokensWithdrawn",
              "offset": 0,
              "slot": "18",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:210"
            },
            {
              "label": "rewardTokensInSmartContract",
              "offset": 0,
              "slot": "19",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:212"
            },
            {
              "label": "rewardTokensStartFundingTime",
              "offset": 0,
              "slot": "20",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:214"
            },
            {
              "label": "rewardTokensFundingStarted",
              "offset": 0,
              "slot": "21",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:216"
            },
            {
              "label": "whiteListerAddress",
              "offset": 1,
              "slot": "21",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:221"
            },
            {
              "label": "rewardsUpdaterAddress",
              "offset": 0,
              "slot": "22",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:223"
            },
            {
              "label": "maximumBatchSizeForUpdateRewards",
              "offset": 20,
              "slot": "22",
              "type": "t_uint8",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:245"
            },
            {
              "label": "wallets",
              "offset": 0,
              "slot": "23",
              "type": "t_mapping(t_address,t_struct(WalletData)672_storage)",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:247"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ERC20TokenInterface)403": {
              "label": "contract ERC20TokenInterface",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_struct(WalletData)672_storage)": {
              "label": "mapping(address => struct UpgradeableHYAXRewards.WalletData)",
              "numberOfBytes": "32"
            },
            "t_struct(WalletData)672_storage": {
              "label": "struct UpgradeableHYAXRewards.WalletData",
              "members": [
                {
                  "label": "hyaxHoldingAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "hyaxHoldingAmountAtWhitelistTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "totalHyaxRewardsAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "currentRewardsAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "rewardsWithdrawn",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "addedToWhitelistTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "tokenWithdrawalTimes",
                  "type": "t_uint8",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "lastRewardsWithdrawalTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "lastRewardsUpdateTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "isTeamWallet",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "isWhitelisted",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "9"
                },
                {
                  "label": "isBlacklisted",
                  "type": "t_bool",
                  "offset": 2,
                  "slot": "9"
                }
              ],
              "numberOfBytes": "320"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "hardhat/console.sol:console": {
        "src": "hardhat\\console.sol:4",
        "version": {
          "withMetadata": "b1be11c3bf90cff557541588c2ae5cd66dca02f69e0972ceeb9da182ee9131c5",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Pausable.sol:Pausable": {
        "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:17",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Pausable",
            "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:43"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_paused",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UpgradeableHYAXRewards.sol:ERC20TokenInterface": {
        "src": "contracts\\UpgradeableHYAXRewards.sol:13",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "balanceOf(address)",
          "symbol()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UpgradeableHYAXRewards.sol:UpgradeableHYAXRewards": {
        "src": "contracts\\UpgradeableHYAXRewards.sol:20",
        "version": {
          "withMetadata": "fa5be537a33448adaef0b6074398918c938a82867caf4e1cbb45a2c593fcce64",
          "withoutMetadata": "5229e24c9d7192fdce8da3321076a9363aa31767f280faa79e170dd3feb32cfd",
          "linkedWithoutMetadata": "5229e24c9d7192fdce8da3321076a9363aa31767f280faa79e170dd3feb32cfd"
        },
        "inherit": [
          "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "addWalletToWhitelist(address,bool,uint256)",
          "updateWhitelistStatus(address,bool)",
          "updateBlacklistStatus(address,bool)",
          "fundSmartContract(uint8,uint256)",
          "withdrawGrowthTokens()",
          "withdrawTeamTokens()",
          "calculateYearForTeamTokens()",
          "updateRewardsBatch(address[],uint256[])",
          "updateRewardsSingle(address,uint256)",
          "withdrawRewardTokens()",
          "withdrawTokensToBurn(uint8,uint256)",
          "recoverTeamTokens(address,address)",
          "updateWhiteListerAddress(address)",
          "updateRewardsUpdaterAddress(address)",
          "updateHyaxTokenAddress(address)",
          "updateMaximumBatchSizeForUpdateRewards(uint8)",
          "pause()",
          "unpause()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UpgradeableHYAXRewards",
            "src": "contracts\\UpgradeableHYAXRewards.sol:250"
          },
          {
            "kind": "state-variable-assignment",
            "name": "maximumBatchSizeForUpdateRewards",
            "src": "contracts\\UpgradeableHYAXRewards.sol:245"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "_paused",
              "offset": 20,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:37"
            },
            {
              "label": "hyaxTokenAddress",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:148"
            },
            {
              "label": "hyaxToken",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(ERC20TokenInterface)403",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:150"
            },
            {
              "label": "growthTokensFunded",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:162"
            },
            {
              "label": "growthTokensWithdrawn",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:164"
            },
            {
              "label": "growthTokensInSmartContract",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:166"
            },
            {
              "label": "growthTokensLastWithdrawalTime",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:168"
            },
            {
              "label": "growthTokensStartFundingTime",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:170"
            },
            {
              "label": "growthTokensFundingStarted",
              "offset": 0,
              "slot": "9",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:172"
            },
            {
              "label": "teamTokensFunded",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:183"
            },
            {
              "label": "teamTokensWithdrawn",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:185"
            },
            {
              "label": "teamTokensInSmartContract",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:187"
            },
            {
              "label": "teamTokensLastWithdrawalTime",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:189"
            },
            {
              "label": "teamTokensStartFundingTime",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:191"
            },
            {
              "label": "teamTokensFundingStarted",
              "offset": 0,
              "slot": "15",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:193"
            },
            {
              "label": "rewardTokensFunded",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:206"
            },
            {
              "label": "rewardTokensDistributed",
              "offset": 0,
              "slot": "17",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:208"
            },
            {
              "label": "rewardTokensWithdrawn",
              "offset": 0,
              "slot": "18",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:210"
            },
            {
              "label": "rewardTokensInSmartContract",
              "offset": 0,
              "slot": "19",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:212"
            },
            {
              "label": "rewardTokensStartFundingTime",
              "offset": 0,
              "slot": "20",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:214"
            },
            {
              "label": "rewardTokensFundingStarted",
              "offset": 0,
              "slot": "21",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:216"
            },
            {
              "label": "whiteListerAddress",
              "offset": 1,
              "slot": "21",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:221"
            },
            {
              "label": "rewardsUpdaterAddress",
              "offset": 0,
              "slot": "22",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:223"
            },
            {
              "label": "maximumBatchSizeForUpdateRewards",
              "offset": 20,
              "slot": "22",
              "type": "t_uint8",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:245"
            },
            {
              "label": "wallets",
              "offset": 0,
              "slot": "23",
              "type": "t_mapping(t_address,t_struct(WalletData)672_storage)",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:247"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ERC20TokenInterface)403": {
              "label": "contract ERC20TokenInterface",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_struct(WalletData)672_storage)": {
              "label": "mapping(address => struct UpgradeableHYAXRewards.WalletData)",
              "numberOfBytes": "32"
            },
            "t_struct(WalletData)672_storage": {
              "label": "struct UpgradeableHYAXRewards.WalletData",
              "members": [
                {
                  "label": "hyaxHoldingAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "hyaxHoldingAmountAtWhitelistTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "totalHyaxRewardsAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "currentRewardsAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "rewardsWithdrawn",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "addedToWhitelistTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "tokenWithdrawalTimes",
                  "type": "t_uint8",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "lastRewardsWithdrawalTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "lastRewardsUpdateTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "isTeamWallet",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "isWhitelisted",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "9"
                },
                {
                  "label": "isBlacklisted",
                  "type": "t_bool",
                  "offset": 2,
                  "slot": "9"
                }
              ],
              "numberOfBytes": "320"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "hardhat/console.sol:console": {
        "src": "hardhat\\console.sol:4",
        "version": {
          "withMetadata": "b1be11c3bf90cff557541588c2ae5cd66dca02f69e0972ceeb9da182ee9131c5",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Pausable.sol:Pausable": {
        "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:17",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Pausable",
            "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:43"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_paused",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UpgradeableHYAXRewards.sol:ERC20TokenInterface": {
        "src": "contracts\\UpgradeableHYAXRewards.sol:13",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "balanceOf(address)",
          "symbol()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UpgradeableHYAXRewards.sol:UpgradeableHYAXRewards": {
        "src": "contracts\\UpgradeableHYAXRewards.sol:20",
        "version": {
          "withMetadata": "7378946b0e7e77db4db37518a33c3f5feea3dcc22c34f3b46665b4f04369833b",
          "withoutMetadata": "cb7d822771288d1c23417a0b5025feedad85efcac66841d26c1bb813697656a8",
          "linkedWithoutMetadata": "cb7d822771288d1c23417a0b5025feedad85efcac66841d26c1bb813697656a8"
        },
        "inherit": [
          "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "addWalletToWhitelist(address,bool,uint256)",
          "updateWhitelistStatus(address,bool)",
          "updateBlacklistStatus(address,bool)",
          "fundSmartContract(uint8,uint256)",
          "withdrawGrowthTokens()",
          "withdrawTeamTokens()",
          "calculateYearForTeamTokens()",
          "updateRewardsBatch(address[],uint256[])",
          "updateRewardsSingle(address,uint256)",
          "withdrawRewardTokens()",
          "withdrawTokensToBurn(uint8,uint256)",
          "recoverTeamTokens(address,address)",
          "updateWhiteListerAddress(address)",
          "updateRewardsUpdaterAddress(address)",
          "updateHyaxTokenAddress(address)",
          "updateMaximumBatchSizeForUpdateRewards(uint8)",
          "pause()",
          "unpause()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UpgradeableHYAXRewards",
            "src": "contracts\\UpgradeableHYAXRewards.sol:250"
          },
          {
            "kind": "state-variable-assignment",
            "name": "maximumBatchSizeForUpdateRewards",
            "src": "contracts\\UpgradeableHYAXRewards.sol:245"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "_paused",
              "offset": 20,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:37"
            },
            {
              "label": "hyaxTokenAddress",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:148"
            },
            {
              "label": "hyaxToken",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(ERC20TokenInterface)403",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:150"
            },
            {
              "label": "growthTokensFunded",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:162"
            },
            {
              "label": "growthTokensWithdrawn",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:164"
            },
            {
              "label": "growthTokensInSmartContract",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:166"
            },
            {
              "label": "growthTokensLastWithdrawalTime",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:168"
            },
            {
              "label": "growthTokensStartFundingTime",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:170"
            },
            {
              "label": "growthTokensFundingStarted",
              "offset": 0,
              "slot": "9",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:172"
            },
            {
              "label": "teamTokensFunded",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:183"
            },
            {
              "label": "teamTokensWithdrawn",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:185"
            },
            {
              "label": "teamTokensInSmartContract",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:187"
            },
            {
              "label": "teamTokensLastWithdrawalTime",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:189"
            },
            {
              "label": "teamTokensStartFundingTime",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:191"
            },
            {
              "label": "teamTokensFundingStarted",
              "offset": 0,
              "slot": "15",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:193"
            },
            {
              "label": "rewardTokensFunded",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:206"
            },
            {
              "label": "rewardTokensDistributed",
              "offset": 0,
              "slot": "17",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:208"
            },
            {
              "label": "rewardTokensWithdrawn",
              "offset": 0,
              "slot": "18",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:210"
            },
            {
              "label": "rewardTokensInSmartContract",
              "offset": 0,
              "slot": "19",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:212"
            },
            {
              "label": "rewardTokensStartFundingTime",
              "offset": 0,
              "slot": "20",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:214"
            },
            {
              "label": "rewardTokensFundingStarted",
              "offset": 0,
              "slot": "21",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:216"
            },
            {
              "label": "whiteListerAddress",
              "offset": 1,
              "slot": "21",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:221"
            },
            {
              "label": "rewardsUpdaterAddress",
              "offset": 0,
              "slot": "22",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:223"
            },
            {
              "label": "maximumBatchSizeForUpdateRewards",
              "offset": 20,
              "slot": "22",
              "type": "t_uint8",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:245"
            },
            {
              "label": "wallets",
              "offset": 0,
              "slot": "23",
              "type": "t_mapping(t_address,t_struct(WalletData)672_storage)",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:247"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ERC20TokenInterface)403": {
              "label": "contract ERC20TokenInterface",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_struct(WalletData)672_storage)": {
              "label": "mapping(address => struct UpgradeableHYAXRewards.WalletData)",
              "numberOfBytes": "32"
            },
            "t_struct(WalletData)672_storage": {
              "label": "struct UpgradeableHYAXRewards.WalletData",
              "members": [
                {
                  "label": "hyaxHoldingAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "hyaxHoldingAmountAtWhitelistTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "totalHyaxRewardsAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "currentRewardsAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "rewardsWithdrawn",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "addedToWhitelistTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "tokenWithdrawalTimes",
                  "type": "t_uint8",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "lastRewardsWithdrawalTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "lastRewardsUpdateTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "isTeamWallet",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "isWhitelisted",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "9"
                },
                {
                  "label": "isBlacklisted",
                  "type": "t_bool",
                  "offset": 2,
                  "slot": "9"
                }
              ],
              "numberOfBytes": "320"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "hardhat/console.sol:console": {
        "src": "hardhat\\console.sol:4",
        "version": {
          "withMetadata": "b1be11c3bf90cff557541588c2ae5cd66dca02f69e0972ceeb9da182ee9131c5",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Pausable.sol:Pausable": {
        "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:17",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Pausable",
            "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:43"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_paused",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UpgradeableHYAXRewards.sol:ERC20TokenInterface": {
        "src": "contracts\\UpgradeableHYAXRewards.sol:13",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "balanceOf(address)",
          "symbol()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UpgradeableHYAXRewards.sol:UpgradeableHYAXRewards": {
        "src": "contracts\\UpgradeableHYAXRewards.sol:20",
        "version": {
          "withMetadata": "76bb374bfd9512ef85e488181c87ffbaff1e8687f1b1c228f43488ae8ab929de",
          "withoutMetadata": "adc1d4a4bb59835b29f9f251983abcc49322c4cf03adc60174acc72199d13fbb",
          "linkedWithoutMetadata": "adc1d4a4bb59835b29f9f251983abcc49322c4cf03adc60174acc72199d13fbb"
        },
        "inherit": [
          "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "addWalletToWhitelist(address,bool,uint256)",
          "updateWhitelistStatus(address,bool)",
          "updateBlacklistStatus(address,bool)",
          "fundSmartContract(uint8,uint256)",
          "withdrawGrowthTokens()",
          "withdrawTeamTokens()",
          "calculateYearForTeamTokens()",
          "updateRewardsBatch(address[],uint256[])",
          "updateRewardsSingle(address,uint256)",
          "withdrawRewardTokens()",
          "withdrawTokensToBurn(uint8,uint256)",
          "recoverTeamTokens(address,address)",
          "updateWhiteListerAddress(address)",
          "updateRewardsUpdaterAddress(address)",
          "updateHyaxTokenAddress(address)",
          "updateMaximumBatchSizeForUpdateRewards(uint8)",
          "pause()",
          "unpause()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UpgradeableHYAXRewards",
            "src": "contracts\\UpgradeableHYAXRewards.sol:250"
          },
          {
            "kind": "state-variable-assignment",
            "name": "maximumBatchSizeForUpdateRewards",
            "src": "contracts\\UpgradeableHYAXRewards.sol:245"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "_paused",
              "offset": 20,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:37"
            },
            {
              "label": "hyaxTokenAddress",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:148"
            },
            {
              "label": "hyaxToken",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(ERC20TokenInterface)403",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:150"
            },
            {
              "label": "growthTokensFunded",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:162"
            },
            {
              "label": "growthTokensWithdrawn",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:164"
            },
            {
              "label": "growthTokensInSmartContract",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:166"
            },
            {
              "label": "growthTokensLastWithdrawalTime",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:168"
            },
            {
              "label": "growthTokensStartFundingTime",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:170"
            },
            {
              "label": "growthTokensFundingStarted",
              "offset": 0,
              "slot": "9",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:172"
            },
            {
              "label": "teamTokensFunded",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:183"
            },
            {
              "label": "teamTokensWithdrawn",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:185"
            },
            {
              "label": "teamTokensInSmartContract",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:187"
            },
            {
              "label": "teamTokensLastWithdrawalTime",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:189"
            },
            {
              "label": "teamTokensStartFundingTime",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:191"
            },
            {
              "label": "teamTokensFundingStarted",
              "offset": 0,
              "slot": "15",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:193"
            },
            {
              "label": "rewardTokensFunded",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:206"
            },
            {
              "label": "rewardTokensDistributed",
              "offset": 0,
              "slot": "17",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:208"
            },
            {
              "label": "rewardTokensWithdrawn",
              "offset": 0,
              "slot": "18",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:210"
            },
            {
              "label": "rewardTokensInSmartContract",
              "offset": 0,
              "slot": "19",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:212"
            },
            {
              "label": "rewardTokensStartFundingTime",
              "offset": 0,
              "slot": "20",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:214"
            },
            {
              "label": "rewardTokensFundingStarted",
              "offset": 0,
              "slot": "21",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:216"
            },
            {
              "label": "whiteListerAddress",
              "offset": 1,
              "slot": "21",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:221"
            },
            {
              "label": "rewardsUpdaterAddress",
              "offset": 0,
              "slot": "22",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:223"
            },
            {
              "label": "maximumBatchSizeForUpdateRewards",
              "offset": 20,
              "slot": "22",
              "type": "t_uint8",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:245"
            },
            {
              "label": "wallets",
              "offset": 0,
              "slot": "23",
              "type": "t_mapping(t_address,t_struct(WalletData)672_storage)",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:247"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ERC20TokenInterface)403": {
              "label": "contract ERC20TokenInterface",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_struct(WalletData)672_storage)": {
              "label": "mapping(address => struct UpgradeableHYAXRewards.WalletData)",
              "numberOfBytes": "32"
            },
            "t_struct(WalletData)672_storage": {
              "label": "struct UpgradeableHYAXRewards.WalletData",
              "members": [
                {
                  "label": "hyaxHoldingAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "hyaxHoldingAmountAtWhitelistTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "totalHyaxRewardsAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "currentRewardsAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "rewardsWithdrawn",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "addedToWhitelistTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "tokenWithdrawalTimes",
                  "type": "t_uint8",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "lastRewardsWithdrawalTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "lastRewardsUpdateTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "isTeamWallet",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "isWhitelisted",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "9"
                },
                {
                  "label": "isBlacklisted",
                  "type": "t_bool",
                  "offset": 2,
                  "slot": "9"
                }
              ],
              "numberOfBytes": "320"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "hardhat/console.sol:console": {
        "src": "hardhat\\console.sol:4",
        "version": {
          "withMetadata": "b1be11c3bf90cff557541588c2ae5cd66dca02f69e0972ceeb9da182ee9131c5",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Pausable.sol:Pausable": {
        "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:17",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Pausable",
            "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:43"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_paused",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UpgradeableHYAXRewards.sol:ERC20TokenInterface": {
        "src": "contracts\\UpgradeableHYAXRewards.sol:13",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "balanceOf(address)",
          "symbol()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UpgradeableHYAXRewards.sol:UpgradeableHYAXRewards": {
        "src": "contracts\\UpgradeableHYAXRewards.sol:20",
        "version": {
          "withMetadata": "0d70eab7b59f01efb3625a7f355b654ff076b05f8ab760f173ff1fe776b73899",
          "withoutMetadata": "adc1d4a4bb59835b29f9f251983abcc49322c4cf03adc60174acc72199d13fbb",
          "linkedWithoutMetadata": "adc1d4a4bb59835b29f9f251983abcc49322c4cf03adc60174acc72199d13fbb"
        },
        "inherit": [
          "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "addWalletToWhitelist(address,bool,uint256)",
          "updateWhitelistStatus(address,bool)",
          "updateBlacklistStatus(address,bool)",
          "fundSmartContract(uint8,uint256)",
          "withdrawGrowthTokens()",
          "withdrawTeamTokens()",
          "calculateYearForTeamTokens()",
          "updateRewardsBatch(address[],uint256[])",
          "updateRewardsSingle(address,uint256)",
          "withdrawRewardTokens()",
          "withdrawTokensToBurn(uint8,uint256)",
          "recoverTeamTokens(address,address)",
          "updateWhiteListerAddress(address)",
          "updateRewardsUpdaterAddress(address)",
          "updateHyaxTokenAddress(address)",
          "updateMaximumBatchSizeForUpdateRewards(uint8)",
          "pause()",
          "unpause()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UpgradeableHYAXRewards",
            "src": "contracts\\UpgradeableHYAXRewards.sol:250"
          },
          {
            "kind": "state-variable-assignment",
            "name": "maximumBatchSizeForUpdateRewards",
            "src": "contracts\\UpgradeableHYAXRewards.sol:245"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "_paused",
              "offset": 20,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:37"
            },
            {
              "label": "hyaxTokenAddress",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:148"
            },
            {
              "label": "hyaxToken",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(ERC20TokenInterface)403",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:150"
            },
            {
              "label": "growthTokensFunded",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:162"
            },
            {
              "label": "growthTokensWithdrawn",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:164"
            },
            {
              "label": "growthTokensInSmartContract",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:166"
            },
            {
              "label": "growthTokensLastWithdrawalTime",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:168"
            },
            {
              "label": "growthTokensStartFundingTime",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:170"
            },
            {
              "label": "growthTokensFundingStarted",
              "offset": 0,
              "slot": "9",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:172"
            },
            {
              "label": "teamTokensFunded",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:183"
            },
            {
              "label": "teamTokensWithdrawn",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:185"
            },
            {
              "label": "teamTokensInSmartContract",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:187"
            },
            {
              "label": "teamTokensLastWithdrawalTime",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:189"
            },
            {
              "label": "teamTokensStartFundingTime",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:191"
            },
            {
              "label": "teamTokensFundingStarted",
              "offset": 0,
              "slot": "15",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:193"
            },
            {
              "label": "rewardTokensFunded",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:206"
            },
            {
              "label": "rewardTokensDistributed",
              "offset": 0,
              "slot": "17",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:208"
            },
            {
              "label": "rewardTokensWithdrawn",
              "offset": 0,
              "slot": "18",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:210"
            },
            {
              "label": "rewardTokensInSmartContract",
              "offset": 0,
              "slot": "19",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:212"
            },
            {
              "label": "rewardTokensStartFundingTime",
              "offset": 0,
              "slot": "20",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:214"
            },
            {
              "label": "rewardTokensFundingStarted",
              "offset": 0,
              "slot": "21",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:216"
            },
            {
              "label": "whiteListerAddress",
              "offset": 1,
              "slot": "21",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:221"
            },
            {
              "label": "rewardsUpdaterAddress",
              "offset": 0,
              "slot": "22",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:223"
            },
            {
              "label": "maximumBatchSizeForUpdateRewards",
              "offset": 20,
              "slot": "22",
              "type": "t_uint8",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:245"
            },
            {
              "label": "wallets",
              "offset": 0,
              "slot": "23",
              "type": "t_mapping(t_address,t_struct(WalletData)672_storage)",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:247"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ERC20TokenInterface)403": {
              "label": "contract ERC20TokenInterface",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_struct(WalletData)672_storage)": {
              "label": "mapping(address => struct UpgradeableHYAXRewards.WalletData)",
              "numberOfBytes": "32"
            },
            "t_struct(WalletData)672_storage": {
              "label": "struct UpgradeableHYAXRewards.WalletData",
              "members": [
                {
                  "label": "hyaxHoldingAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "hyaxHoldingAmountAtWhitelistTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "totalHyaxRewardsAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "currentRewardsAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "rewardsWithdrawn",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "addedToWhitelistTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "tokenWithdrawalTimes",
                  "type": "t_uint8",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "lastRewardsWithdrawalTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "lastRewardsUpdateTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "isTeamWallet",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "isWhitelisted",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "9"
                },
                {
                  "label": "isBlacklisted",
                  "type": "t_bool",
                  "offset": 2,
                  "slot": "9"
                }
              ],
              "numberOfBytes": "320"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "hardhat/console.sol:console": {
        "src": "hardhat\\console.sol:4",
        "version": {
          "withMetadata": "b1be11c3bf90cff557541588c2ae5cd66dca02f69e0972ceeb9da182ee9131c5",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Pausable.sol:Pausable": {
        "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:17",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Pausable",
            "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:43"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_paused",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UpgradeableHYAXRewards.sol:ERC20TokenInterface": {
        "src": "contracts\\UpgradeableHYAXRewards.sol:13",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "balanceOf(address)",
          "symbol()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UpgradeableHYAXRewards.sol:UpgradeableHYAXRewards": {
        "src": "contracts\\UpgradeableHYAXRewards.sol:20",
        "version": {
          "withMetadata": "2b5b4e0253f10737a71b9d0b9aed3f693d954d38287faa54018047a7b6f7aad5",
          "withoutMetadata": "aa5d4c8563472a567f02b19f0c6ce5e63dc2be388e98d05c305b90e357bfbddf",
          "linkedWithoutMetadata": "aa5d4c8563472a567f02b19f0c6ce5e63dc2be388e98d05c305b90e357bfbddf"
        },
        "inherit": [
          "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "addWalletToWhitelist(address,bool,uint256)",
          "updateWhitelistStatus(address,bool)",
          "updateBlacklistStatus(address,bool)",
          "fundSmartContract(uint8,uint256)",
          "withdrawGrowthTokens()",
          "withdrawTeamTokens()",
          "calculateYearForTeamTokens()",
          "updateRewardsBatch(address[],uint256[])",
          "updateRewardsSingle(address,uint256)",
          "withdrawRewardTokens()",
          "withdrawTokensToBurn(uint8,uint256)",
          "recoverTeamTokens(address,address)",
          "updateWhiteListerAddress(address)",
          "updateRewardsUpdaterAddress(address)",
          "updateHyaxTokenAddress(address)",
          "updateMaximumBatchSizeForUpdateRewards(uint8)",
          "pause()",
          "unpause()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UpgradeableHYAXRewards",
            "src": "contracts\\UpgradeableHYAXRewards.sol:217"
          },
          {
            "kind": "state-variable-assignment",
            "name": "maximumBatchSizeForUpdateRewards",
            "src": "contracts\\UpgradeableHYAXRewards.sol:212"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "_paused",
              "offset": 20,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:37"
            },
            {
              "label": "hyaxTokenAddress",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:115"
            },
            {
              "label": "hyaxToken",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(ERC20TokenInterface)403",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:117"
            },
            {
              "label": "growthTokensFunded",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:129"
            },
            {
              "label": "growthTokensWithdrawn",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:131"
            },
            {
              "label": "growthTokensInSmartContract",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:133"
            },
            {
              "label": "growthTokensLastWithdrawalTime",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:135"
            },
            {
              "label": "growthTokensStartFundingTime",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:137"
            },
            {
              "label": "growthTokensFundingStarted",
              "offset": 0,
              "slot": "9",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:139"
            },
            {
              "label": "teamTokensFunded",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:150"
            },
            {
              "label": "teamTokensWithdrawn",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:152"
            },
            {
              "label": "teamTokensInSmartContract",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:154"
            },
            {
              "label": "teamTokensLastWithdrawalTime",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:156"
            },
            {
              "label": "teamTokensStartFundingTime",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:158"
            },
            {
              "label": "teamTokensFundingStarted",
              "offset": 0,
              "slot": "15",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:160"
            },
            {
              "label": "rewardTokensFunded",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:173"
            },
            {
              "label": "rewardTokensDistributed",
              "offset": 0,
              "slot": "17",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:175"
            },
            {
              "label": "rewardTokensWithdrawn",
              "offset": 0,
              "slot": "18",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:177"
            },
            {
              "label": "rewardTokensInSmartContract",
              "offset": 0,
              "slot": "19",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:179"
            },
            {
              "label": "rewardTokensStartFundingTime",
              "offset": 0,
              "slot": "20",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:181"
            },
            {
              "label": "rewardTokensFundingStarted",
              "offset": 0,
              "slot": "21",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:183"
            },
            {
              "label": "whiteListerAddress",
              "offset": 1,
              "slot": "21",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:188"
            },
            {
              "label": "rewardsUpdaterAddress",
              "offset": 0,
              "slot": "22",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:190"
            },
            {
              "label": "maximumBatchSizeForUpdateRewards",
              "offset": 20,
              "slot": "22",
              "type": "t_uint8",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:212"
            },
            {
              "label": "wallets",
              "offset": 0,
              "slot": "23",
              "type": "t_mapping(t_address,t_struct(WalletData)637_storage)",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:214"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ERC20TokenInterface)403": {
              "label": "contract ERC20TokenInterface",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_struct(WalletData)637_storage)": {
              "label": "mapping(address => struct UpgradeableHYAXRewards.WalletData)",
              "numberOfBytes": "32"
            },
            "t_struct(WalletData)637_storage": {
              "label": "struct UpgradeableHYAXRewards.WalletData",
              "members": [
                {
                  "label": "hyaxHoldingAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "hyaxHoldingAmountAtWhitelistTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "totalHyaxRewardsAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "currentRewardsAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "rewardsWithdrawn",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "addedToWhitelistTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "tokenWithdrawalTimes",
                  "type": "t_uint8",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "lastRewardsWithdrawalTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "lastRewardsUpdateTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "isTeamWallet",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "isWhitelisted",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "9"
                },
                {
                  "label": "isBlacklisted",
                  "type": "t_bool",
                  "offset": 2,
                  "slot": "9"
                }
              ],
              "numberOfBytes": "320"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "hardhat/console.sol:console": {
        "src": "hardhat\\console.sol:4",
        "version": {
          "withMetadata": "b1be11c3bf90cff557541588c2ae5cd66dca02f69e0972ceeb9da182ee9131c5",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Pausable.sol:Pausable": {
        "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:17",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Pausable",
            "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:43"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_paused",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UpgradeableHYAXRewards.sol:ERC20TokenInterface": {
        "src": "contracts\\UpgradeableHYAXRewards.sol:13",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "balanceOf(address)",
          "symbol()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UpgradeableHYAXRewards.sol:UpgradeableHYAXRewards": {
        "src": "contracts\\UpgradeableHYAXRewards.sol:20",
        "version": {
          "withMetadata": "8def5af95d4fc2f5491a4e1ffe5cffbce41e51b6b4e5407916a4d43e8fd541f0",
          "withoutMetadata": "7ccac3287a388094266ded11bcf5aebd9afda53533e8d4faca6e82d3f4794f16",
          "linkedWithoutMetadata": "7ccac3287a388094266ded11bcf5aebd9afda53533e8d4faca6e82d3f4794f16"
        },
        "inherit": [
          "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "addWalletToWhitelist(address,bool,uint256)",
          "updateWhitelistStatus(address,bool)",
          "updateBlacklistStatus(address,bool)",
          "fundSmartContract(uint8,uint256)",
          "withdrawGrowthTokens()",
          "withdrawTeamTokens()",
          "calculateYearForTeamTokens()",
          "updateRewardsBatch(address[],uint256[])",
          "updateRewardsSingle(address,uint256)",
          "withdrawRewardTokens()",
          "withdrawTokensToBurn(uint8,uint256)",
          "updateWhiteListerAddress(address)",
          "updateRewardsUpdaterAddress(address)",
          "updateHyaxTokenAddress(address)",
          "updateMaximumBatchSizeForUpdateRewards(uint8)",
          "pause()",
          "unpause()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UpgradeableHYAXRewards",
            "src": "contracts\\UpgradeableHYAXRewards.sol:210"
          },
          {
            "kind": "state-variable-assignment",
            "name": "maximumBatchSizeForUpdateRewards",
            "src": "contracts\\UpgradeableHYAXRewards.sol:205"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "_paused",
              "offset": 20,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:37"
            },
            {
              "label": "hyaxTokenAddress",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:108"
            },
            {
              "label": "hyaxToken",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(ERC20TokenInterface)403",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:110"
            },
            {
              "label": "growthTokensFunded",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:122"
            },
            {
              "label": "growthTokensWithdrawn",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:124"
            },
            {
              "label": "growthTokensInSmartContract",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:126"
            },
            {
              "label": "growthTokensLastWithdrawalTime",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:128"
            },
            {
              "label": "growthTokensStartFundingTime",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:130"
            },
            {
              "label": "growthTokensFundingStarted",
              "offset": 0,
              "slot": "9",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:132"
            },
            {
              "label": "teamTokensFunded",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:143"
            },
            {
              "label": "teamTokensWithdrawn",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:145"
            },
            {
              "label": "teamTokensInSmartContract",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:147"
            },
            {
              "label": "teamTokensLastWithdrawalTime",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:149"
            },
            {
              "label": "teamTokensStartFundingTime",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:151"
            },
            {
              "label": "teamTokensFundingStarted",
              "offset": 0,
              "slot": "15",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:153"
            },
            {
              "label": "rewardTokensFunded",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:166"
            },
            {
              "label": "rewardTokensDistributed",
              "offset": 0,
              "slot": "17",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:168"
            },
            {
              "label": "rewardTokensWithdrawn",
              "offset": 0,
              "slot": "18",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:170"
            },
            {
              "label": "rewardTokensInSmartContract",
              "offset": 0,
              "slot": "19",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:172"
            },
            {
              "label": "rewardTokensStartFundingTime",
              "offset": 0,
              "slot": "20",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:174"
            },
            {
              "label": "rewardTokensFundingStarted",
              "offset": 0,
              "slot": "21",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:176"
            },
            {
              "label": "whiteListerAddress",
              "offset": 1,
              "slot": "21",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:181"
            },
            {
              "label": "rewardsUpdaterAddress",
              "offset": 0,
              "slot": "22",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:183"
            },
            {
              "label": "maximumBatchSizeForUpdateRewards",
              "offset": 20,
              "slot": "22",
              "type": "t_uint8",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:205"
            },
            {
              "label": "wallets",
              "offset": 0,
              "slot": "23",
              "type": "t_mapping(t_address,t_struct(WalletData)630_storage)",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:207"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ERC20TokenInterface)403": {
              "label": "contract ERC20TokenInterface",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_struct(WalletData)630_storage)": {
              "label": "mapping(address => struct UpgradeableHYAXRewards.WalletData)",
              "numberOfBytes": "32"
            },
            "t_struct(WalletData)630_storage": {
              "label": "struct UpgradeableHYAXRewards.WalletData",
              "members": [
                {
                  "label": "hyaxHoldingAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "hyaxHoldingAmountAtWhitelistTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "totalHyaxRewardsAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "currentRewardsAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "rewardsWithdrawn",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "addedToWhitelistTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "tokenWithdrawalTimes",
                  "type": "t_uint8",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "lastRewardsWithdrawalTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "lastRewardsUpdateTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "isTeamWallet",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "isWhitelisted",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "9"
                },
                {
                  "label": "isBlacklisted",
                  "type": "t_bool",
                  "offset": 2,
                  "slot": "9"
                }
              ],
              "numberOfBytes": "320"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "hardhat/console.sol:console": {
        "src": "hardhat\\console.sol:4",
        "version": {
          "withMetadata": "b1be11c3bf90cff557541588c2ae5cd66dca02f69e0972ceeb9da182ee9131c5",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Pausable.sol:Pausable": {
        "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:17",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Pausable",
            "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:43"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_paused",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UpgradeableHYAXRewards.sol:ERC20TokenInterface": {
        "src": "contracts\\UpgradeableHYAXRewards.sol:13",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "balanceOf(address)",
          "symbol()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UpgradeableHYAXRewards.sol:UpgradeableHYAXRewards": {
        "src": "contracts\\UpgradeableHYAXRewards.sol:20",
        "version": {
          "withMetadata": "8e2fed5ad7b9add5744abed09fb8708c4174ed231fb5ce6130aef2a5d5f0a29c",
          "withoutMetadata": "7ccac3287a388094266ded11bcf5aebd9afda53533e8d4faca6e82d3f4794f16",
          "linkedWithoutMetadata": "7ccac3287a388094266ded11bcf5aebd9afda53533e8d4faca6e82d3f4794f16"
        },
        "inherit": [
          "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "addWalletToWhitelist(address,bool,uint256)",
          "updateWhitelistStatus(address,bool)",
          "updateBlacklistStatus(address,bool)",
          "fundSmartContract(uint8,uint256)",
          "withdrawGrowthTokens()",
          "withdrawTeamTokens()",
          "calculateYearForTeamTokens()",
          "updateRewardsBatch(address[],uint256[])",
          "updateRewardsSingle(address,uint256)",
          "withdrawRewardTokens()",
          "withdrawTokensToBurn(uint8,uint256)",
          "updateWhiteListerAddress(address)",
          "updateRewardsUpdaterAddress(address)",
          "updateHyaxTokenAddress(address)",
          "updateMaximumBatchSizeForUpdateRewards(uint8)",
          "pause()",
          "unpause()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UpgradeableHYAXRewards",
            "src": "contracts\\UpgradeableHYAXRewards.sol:210"
          },
          {
            "kind": "state-variable-assignment",
            "name": "maximumBatchSizeForUpdateRewards",
            "src": "contracts\\UpgradeableHYAXRewards.sol:205"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "_paused",
              "offset": 20,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:37"
            },
            {
              "label": "hyaxTokenAddress",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:108"
            },
            {
              "label": "hyaxToken",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(ERC20TokenInterface)403",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:110"
            },
            {
              "label": "growthTokensFunded",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:122"
            },
            {
              "label": "growthTokensWithdrawn",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:124"
            },
            {
              "label": "growthTokensInSmartContract",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:126"
            },
            {
              "label": "growthTokensLastWithdrawalTime",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:128"
            },
            {
              "label": "growthTokensStartFundingTime",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:130"
            },
            {
              "label": "growthTokensFundingStarted",
              "offset": 0,
              "slot": "9",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:132"
            },
            {
              "label": "teamTokensFunded",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:143"
            },
            {
              "label": "teamTokensWithdrawn",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:145"
            },
            {
              "label": "teamTokensInSmartContract",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:147"
            },
            {
              "label": "teamTokensLastWithdrawalTime",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:149"
            },
            {
              "label": "teamTokensStartFundingTime",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:151"
            },
            {
              "label": "teamTokensFundingStarted",
              "offset": 0,
              "slot": "15",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:153"
            },
            {
              "label": "rewardTokensFunded",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:166"
            },
            {
              "label": "rewardTokensDistributed",
              "offset": 0,
              "slot": "17",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:168"
            },
            {
              "label": "rewardTokensWithdrawn",
              "offset": 0,
              "slot": "18",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:170"
            },
            {
              "label": "rewardTokensInSmartContract",
              "offset": 0,
              "slot": "19",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:172"
            },
            {
              "label": "rewardTokensStartFundingTime",
              "offset": 0,
              "slot": "20",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:174"
            },
            {
              "label": "rewardTokensFundingStarted",
              "offset": 0,
              "slot": "21",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:176"
            },
            {
              "label": "whiteListerAddress",
              "offset": 1,
              "slot": "21",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:181"
            },
            {
              "label": "rewardsUpdaterAddress",
              "offset": 0,
              "slot": "22",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:183"
            },
            {
              "label": "maximumBatchSizeForUpdateRewards",
              "offset": 20,
              "slot": "22",
              "type": "t_uint8",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:205"
            },
            {
              "label": "wallets",
              "offset": 0,
              "slot": "23",
              "type": "t_mapping(t_address,t_struct(WalletData)630_storage)",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:207"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ERC20TokenInterface)403": {
              "label": "contract ERC20TokenInterface",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_struct(WalletData)630_storage)": {
              "label": "mapping(address => struct UpgradeableHYAXRewards.WalletData)",
              "numberOfBytes": "32"
            },
            "t_struct(WalletData)630_storage": {
              "label": "struct UpgradeableHYAXRewards.WalletData",
              "members": [
                {
                  "label": "hyaxHoldingAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "hyaxHoldingAmountAtWhitelistTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "totalHyaxRewardsAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "currentRewardsAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "rewardsWithdrawn",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "addedToWhitelistTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "tokenWithdrawalTimes",
                  "type": "t_uint8",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "lastRewardsWithdrawalTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "lastRewardsUpdateTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "isTeamWallet",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "isWhitelisted",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "9"
                },
                {
                  "label": "isBlacklisted",
                  "type": "t_bool",
                  "offset": 2,
                  "slot": "9"
                }
              ],
              "numberOfBytes": "320"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "hardhat/console.sol:console": {
        "src": "hardhat\\console.sol:4",
        "version": {
          "withMetadata": "b1be11c3bf90cff557541588c2ae5cd66dca02f69e0972ceeb9da182ee9131c5",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Pausable.sol:Pausable": {
        "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:17",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Pausable",
            "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:43"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_paused",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UpgradeableHYAXRewards.sol:ERC20TokenInterface": {
        "src": "contracts\\UpgradeableHYAXRewards.sol:13",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "balanceOf(address)",
          "symbol()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UpgradeableHYAXRewards.sol:UpgradeableHYAXRewards": {
        "src": "contracts\\UpgradeableHYAXRewards.sol:20",
        "version": {
          "withMetadata": "e3705f9b1e5fbf5764493d34fc007b8b2c7982531f1bfa3b1f9e07f46dd979ed",
          "withoutMetadata": "7ccac3287a388094266ded11bcf5aebd9afda53533e8d4faca6e82d3f4794f16",
          "linkedWithoutMetadata": "7ccac3287a388094266ded11bcf5aebd9afda53533e8d4faca6e82d3f4794f16"
        },
        "inherit": [
          "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "addWalletToWhitelist(address,bool,uint256)",
          "updateWhitelistStatus(address,bool)",
          "updateBlacklistStatus(address,bool)",
          "fundSmartContract(uint8,uint256)",
          "withdrawGrowthTokens()",
          "withdrawTeamTokens()",
          "calculateYearForTeamTokens()",
          "updateRewardsBatch(address[],uint256[])",
          "updateRewardsSingle(address,uint256)",
          "withdrawRewardTokens()",
          "withdrawTokensToBurn(uint8,uint256)",
          "updateWhiteListerAddress(address)",
          "updateRewardsUpdaterAddress(address)",
          "updateHyaxTokenAddress(address)",
          "updateMaximumBatchSizeForUpdateRewards(uint8)",
          "pause()",
          "unpause()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UpgradeableHYAXRewards",
            "src": "contracts\\UpgradeableHYAXRewards.sol:210"
          },
          {
            "kind": "state-variable-assignment",
            "name": "maximumBatchSizeForUpdateRewards",
            "src": "contracts\\UpgradeableHYAXRewards.sol:205"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "_paused",
              "offset": 20,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:37"
            },
            {
              "label": "hyaxTokenAddress",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:108"
            },
            {
              "label": "hyaxToken",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(ERC20TokenInterface)403",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:110"
            },
            {
              "label": "growthTokensFunded",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:122"
            },
            {
              "label": "growthTokensWithdrawn",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:124"
            },
            {
              "label": "growthTokensInSmartContract",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:126"
            },
            {
              "label": "growthTokensLastWithdrawalTime",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:128"
            },
            {
              "label": "growthTokensStartFundingTime",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:130"
            },
            {
              "label": "growthTokensFundingStarted",
              "offset": 0,
              "slot": "9",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:132"
            },
            {
              "label": "teamTokensFunded",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:143"
            },
            {
              "label": "teamTokensWithdrawn",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:145"
            },
            {
              "label": "teamTokensInSmartContract",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:147"
            },
            {
              "label": "teamTokensLastWithdrawalTime",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:149"
            },
            {
              "label": "teamTokensStartFundingTime",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:151"
            },
            {
              "label": "teamTokensFundingStarted",
              "offset": 0,
              "slot": "15",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:153"
            },
            {
              "label": "rewardTokensFunded",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:166"
            },
            {
              "label": "rewardTokensDistributed",
              "offset": 0,
              "slot": "17",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:168"
            },
            {
              "label": "rewardTokensWithdrawn",
              "offset": 0,
              "slot": "18",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:170"
            },
            {
              "label": "rewardTokensInSmartContract",
              "offset": 0,
              "slot": "19",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:172"
            },
            {
              "label": "rewardTokensStartFundingTime",
              "offset": 0,
              "slot": "20",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:174"
            },
            {
              "label": "rewardTokensFundingStarted",
              "offset": 0,
              "slot": "21",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:176"
            },
            {
              "label": "whiteListerAddress",
              "offset": 1,
              "slot": "21",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:181"
            },
            {
              "label": "rewardsUpdaterAddress",
              "offset": 0,
              "slot": "22",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:183"
            },
            {
              "label": "maximumBatchSizeForUpdateRewards",
              "offset": 20,
              "slot": "22",
              "type": "t_uint8",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:205"
            },
            {
              "label": "wallets",
              "offset": 0,
              "slot": "23",
              "type": "t_mapping(t_address,t_struct(WalletData)630_storage)",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:207"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ERC20TokenInterface)403": {
              "label": "contract ERC20TokenInterface",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_struct(WalletData)630_storage)": {
              "label": "mapping(address => struct UpgradeableHYAXRewards.WalletData)",
              "numberOfBytes": "32"
            },
            "t_struct(WalletData)630_storage": {
              "label": "struct UpgradeableHYAXRewards.WalletData",
              "members": [
                {
                  "label": "hyaxHoldingAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "hyaxHoldingAmountAtWhitelistTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "totalHyaxRewardsAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "currentRewardsAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "rewardsWithdrawn",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "addedToWhitelistTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "tokenWithdrawalTimes",
                  "type": "t_uint8",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "lastRewardsWithdrawalTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "lastRewardsUpdateTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "isTeamWallet",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "isWhitelisted",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "9"
                },
                {
                  "label": "isBlacklisted",
                  "type": "t_bool",
                  "offset": 2,
                  "slot": "9"
                }
              ],
              "numberOfBytes": "320"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "hardhat/console.sol:console": {
        "src": "hardhat\\console.sol:4",
        "version": {
          "withMetadata": "b1be11c3bf90cff557541588c2ae5cd66dca02f69e0972ceeb9da182ee9131c5",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Pausable.sol:Pausable": {
        "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:17",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Pausable",
            "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:43"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_paused",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UpgradeableHYAXRewards.sol:ERC20TokenInterface": {
        "src": "contracts\\UpgradeableHYAXRewards.sol:13",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "balanceOf(address)",
          "symbol()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UpgradeableHYAXRewards.sol:UpgradeableHYAXRewards": {
        "src": "contracts\\UpgradeableHYAXRewards.sol:20",
        "version": {
          "withMetadata": "f4b68b5deadb3919374f62f49b081e085a95efeb5c6fd265360bfcb57e336054",
          "withoutMetadata": "7ccac3287a388094266ded11bcf5aebd9afda53533e8d4faca6e82d3f4794f16",
          "linkedWithoutMetadata": "7ccac3287a388094266ded11bcf5aebd9afda53533e8d4faca6e82d3f4794f16"
        },
        "inherit": [
          "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "addWalletToWhitelist(address,bool,uint256)",
          "updateWhitelistStatus(address,bool)",
          "updateBlacklistStatus(address,bool)",
          "fundSmartContract(uint8,uint256)",
          "withdrawGrowthTokens()",
          "withdrawTeamTokens()",
          "calculateYearForTeamTokens()",
          "updateRewardsBatch(address[],uint256[])",
          "updateRewardsSingle(address,uint256)",
          "withdrawRewardTokens()",
          "withdrawTokensToBurn(uint8,uint256)",
          "updateWhiteListerAddress(address)",
          "updateRewardsUpdaterAddress(address)",
          "updateHyaxTokenAddress(address)",
          "updateMaximumBatchSizeForUpdateRewards(uint8)",
          "pause()",
          "unpause()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UpgradeableHYAXRewards",
            "src": "contracts\\UpgradeableHYAXRewards.sol:210"
          },
          {
            "kind": "state-variable-assignment",
            "name": "maximumBatchSizeForUpdateRewards",
            "src": "contracts\\UpgradeableHYAXRewards.sol:205"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "_paused",
              "offset": 20,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:37"
            },
            {
              "label": "hyaxTokenAddress",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:108"
            },
            {
              "label": "hyaxToken",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(ERC20TokenInterface)403",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:110"
            },
            {
              "label": "growthTokensFunded",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:122"
            },
            {
              "label": "growthTokensWithdrawn",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:124"
            },
            {
              "label": "growthTokensInSmartContract",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:126"
            },
            {
              "label": "growthTokensLastWithdrawalTime",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:128"
            },
            {
              "label": "growthTokensStartFundingTime",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:130"
            },
            {
              "label": "growthTokensFundingStarted",
              "offset": 0,
              "slot": "9",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:132"
            },
            {
              "label": "teamTokensFunded",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:143"
            },
            {
              "label": "teamTokensWithdrawn",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:145"
            },
            {
              "label": "teamTokensInSmartContract",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:147"
            },
            {
              "label": "teamTokensLastWithdrawalTime",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:149"
            },
            {
              "label": "teamTokensStartFundingTime",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:151"
            },
            {
              "label": "teamTokensFundingStarted",
              "offset": 0,
              "slot": "15",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:153"
            },
            {
              "label": "rewardTokensFunded",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:166"
            },
            {
              "label": "rewardTokensDistributed",
              "offset": 0,
              "slot": "17",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:168"
            },
            {
              "label": "rewardTokensWithdrawn",
              "offset": 0,
              "slot": "18",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:170"
            },
            {
              "label": "rewardTokensInSmartContract",
              "offset": 0,
              "slot": "19",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:172"
            },
            {
              "label": "rewardTokensStartFundingTime",
              "offset": 0,
              "slot": "20",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:174"
            },
            {
              "label": "rewardTokensFundingStarted",
              "offset": 0,
              "slot": "21",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:176"
            },
            {
              "label": "whiteListerAddress",
              "offset": 1,
              "slot": "21",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:181"
            },
            {
              "label": "rewardsUpdaterAddress",
              "offset": 0,
              "slot": "22",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:183"
            },
            {
              "label": "maximumBatchSizeForUpdateRewards",
              "offset": 20,
              "slot": "22",
              "type": "t_uint8",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:205"
            },
            {
              "label": "wallets",
              "offset": 0,
              "slot": "23",
              "type": "t_mapping(t_address,t_struct(WalletData)630_storage)",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:207"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ERC20TokenInterface)403": {
              "label": "contract ERC20TokenInterface",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_struct(WalletData)630_storage)": {
              "label": "mapping(address => struct UpgradeableHYAXRewards.WalletData)",
              "numberOfBytes": "32"
            },
            "t_struct(WalletData)630_storage": {
              "label": "struct UpgradeableHYAXRewards.WalletData",
              "members": [
                {
                  "label": "hyaxHoldingAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "hyaxHoldingAmountAtWhitelistTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "totalHyaxRewardsAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "currentRewardsAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "rewardsWithdrawn",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "addedToWhitelistTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "tokenWithdrawalTimes",
                  "type": "t_uint8",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "lastRewardsWithdrawalTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "lastRewardsUpdateTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "isTeamWallet",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "isWhitelisted",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "9"
                },
                {
                  "label": "isBlacklisted",
                  "type": "t_bool",
                  "offset": 2,
                  "slot": "9"
                }
              ],
              "numberOfBytes": "320"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "hardhat/console.sol:console": {
        "src": "hardhat\\console.sol:4",
        "version": {
          "withMetadata": "b1be11c3bf90cff557541588c2ae5cd66dca02f69e0972ceeb9da182ee9131c5",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Pausable.sol:Pausable": {
        "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:17",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Pausable",
            "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:43"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_paused",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UpgradeableHYAXRewards.sol:ERC20TokenInterface": {
        "src": "contracts\\UpgradeableHYAXRewards.sol:13",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "balanceOf(address)",
          "symbol()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UpgradeableHYAXRewards.sol:UpgradeableHYAXRewards": {
        "src": "contracts\\UpgradeableHYAXRewards.sol:20",
        "version": {
          "withMetadata": "37ebca68f6dba72e34ee39c490898135309d34b5c005ad68b5d8b59c67686431",
          "withoutMetadata": "36b3250ac7b21404f93f717119cfe18946fa77e9877e7266a269e12032324c4f",
          "linkedWithoutMetadata": "36b3250ac7b21404f93f717119cfe18946fa77e9877e7266a269e12032324c4f"
        },
        "inherit": [
          "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "addWalletToWhitelist(address,bool,uint256)",
          "updateWhitelistStatus(address,bool)",
          "updateBlacklistStatus(address,bool)",
          "fundSmartContract(uint8,uint256)",
          "withdrawGrowthTokens()",
          "withdrawTeamTokens()",
          "calculateYearForTeamTokens()",
          "updateRewardsBatch(address[],uint256[])",
          "updateRewardsSingle(address,uint256)",
          "withdrawRewardTokens()",
          "withdrawTokensToBurn(uint8,uint256)",
          "updateWhiteListerAddress(address)",
          "updateRewardsUpdaterAddress(address)",
          "updateHyaxTokenAddress(address)",
          "updateMaximumBatchSizeForUpdateRewards(uint8)",
          "pause()",
          "unpause()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UpgradeableHYAXRewards",
            "src": "contracts\\UpgradeableHYAXRewards.sol:210"
          },
          {
            "kind": "state-variable-assignment",
            "name": "maximumBatchSizeForUpdateRewards",
            "src": "contracts\\UpgradeableHYAXRewards.sol:205"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "_paused",
              "offset": 20,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:37"
            },
            {
              "label": "hyaxTokenAddress",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:108"
            },
            {
              "label": "hyaxToken",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(ERC20TokenInterface)403",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:110"
            },
            {
              "label": "growthTokensFunded",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:122"
            },
            {
              "label": "growthTokensWithdrawn",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:124"
            },
            {
              "label": "growthTokensInSmartContract",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:126"
            },
            {
              "label": "growthTokensLastWithdrawalTime",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:128"
            },
            {
              "label": "growthTokensStartFundingTime",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:130"
            },
            {
              "label": "growthTokensFundingStarted",
              "offset": 0,
              "slot": "9",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:132"
            },
            {
              "label": "teamTokensFunded",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:143"
            },
            {
              "label": "teamTokensWithdrawn",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:145"
            },
            {
              "label": "teamTokensInSmartContract",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:147"
            },
            {
              "label": "teamTokensLastWithdrawalTime",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:149"
            },
            {
              "label": "teamTokensStartFundingTime",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:151"
            },
            {
              "label": "teamTokensFundingStarted",
              "offset": 0,
              "slot": "15",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:153"
            },
            {
              "label": "rewardTokensFunded",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:166"
            },
            {
              "label": "rewardTokensDistributed",
              "offset": 0,
              "slot": "17",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:168"
            },
            {
              "label": "rewardTokensWithdrawn",
              "offset": 0,
              "slot": "18",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:170"
            },
            {
              "label": "rewardTokensInSmartContract",
              "offset": 0,
              "slot": "19",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:172"
            },
            {
              "label": "rewardTokensStartFundingTime",
              "offset": 0,
              "slot": "20",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:174"
            },
            {
              "label": "rewardTokensFundingStarted",
              "offset": 0,
              "slot": "21",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:176"
            },
            {
              "label": "whiteListerAddress",
              "offset": 1,
              "slot": "21",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:181"
            },
            {
              "label": "rewardsUpdaterAddress",
              "offset": 0,
              "slot": "22",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:183"
            },
            {
              "label": "maximumBatchSizeForUpdateRewards",
              "offset": 20,
              "slot": "22",
              "type": "t_uint8",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:205"
            },
            {
              "label": "wallets",
              "offset": 0,
              "slot": "23",
              "type": "t_mapping(t_address,t_struct(WalletData)630_storage)",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:207"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ERC20TokenInterface)403": {
              "label": "contract ERC20TokenInterface",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_struct(WalletData)630_storage)": {
              "label": "mapping(address => struct UpgradeableHYAXRewards.WalletData)",
              "numberOfBytes": "32"
            },
            "t_struct(WalletData)630_storage": {
              "label": "struct UpgradeableHYAXRewards.WalletData",
              "members": [
                {
                  "label": "hyaxHoldingAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "hyaxHoldingAmountAtWhitelistTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "totalHyaxRewardsAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "currentRewardsAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "rewardsWithdrawn",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "addedToWhitelistTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "tokenWithdrawalTimes",
                  "type": "t_uint8",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "lastRewardsWithdrawalTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "lastRewardsUpdateTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "isTeamWallet",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "isWhitelisted",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "9"
                },
                {
                  "label": "isBlacklisted",
                  "type": "t_bool",
                  "offset": 2,
                  "slot": "9"
                }
              ],
              "numberOfBytes": "320"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "hardhat/console.sol:console": {
        "src": "hardhat\\console.sol:4",
        "version": {
          "withMetadata": "b1be11c3bf90cff557541588c2ae5cd66dca02f69e0972ceeb9da182ee9131c5",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Pausable.sol:Pausable": {
        "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:17",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Pausable",
            "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:43"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_paused",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UpgradeableHYAXRewards.sol:ERC20TokenInterface": {
        "src": "contracts\\UpgradeableHYAXRewards.sol:13",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "balanceOf(address)",
          "symbol()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UpgradeableHYAXRewards.sol:UpgradeableHYAXRewards": {
        "src": "contracts\\UpgradeableHYAXRewards.sol:20",
        "version": {
          "withMetadata": "065612dd5c9dfe7207ad7de59e6d39e75444034802e2df515eef22a97514be6f",
          "withoutMetadata": "139c5eb4d50c4817caa90899274d3aaf62cc6cb2327ca37733a7965bbfae64ed",
          "linkedWithoutMetadata": "139c5eb4d50c4817caa90899274d3aaf62cc6cb2327ca37733a7965bbfae64ed"
        },
        "inherit": [
          "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "addWalletToWhitelist(address,bool,uint256)",
          "updateWhitelistStatus(address,bool)",
          "updateBlacklistStatus(address,bool)",
          "fundSmartContract(uint8,uint256)",
          "withdrawGrowthTokens()",
          "withdrawTeamTokens()",
          "calculateYearForTeamTokens()",
          "updateRewardsBatch(address[],uint256[])",
          "updateRewardsSingle(address,uint256)",
          "withdrawRewardTokens()",
          "withdrawTokensToBurn(uint8,uint256)",
          "updateWhiteListerAddress(address)",
          "updateRewardsUpdaterAddress(address)",
          "updateHyaxTokenAddress(address)",
          "updateMaximumBatchSizeForUpdateRewards(uint8)",
          "pause()",
          "unpause()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UpgradeableHYAXRewards",
            "src": "contracts\\UpgradeableHYAXRewards.sol:210"
          },
          {
            "kind": "state-variable-assignment",
            "name": "maximumBatchSizeForUpdateRewards",
            "src": "contracts\\UpgradeableHYAXRewards.sol:205"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "_paused",
              "offset": 20,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:37"
            },
            {
              "label": "hyaxTokenAddress",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:108"
            },
            {
              "label": "hyaxToken",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(ERC20TokenInterface)403",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:110"
            },
            {
              "label": "growthTokensFunded",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:122"
            },
            {
              "label": "growthTokensWithdrawn",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:124"
            },
            {
              "label": "growthTokensInSmartContract",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:126"
            },
            {
              "label": "growthTokensLastWithdrawalTime",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:128"
            },
            {
              "label": "growthTokensStartFundingTime",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:130"
            },
            {
              "label": "growthTokensFundingStarted",
              "offset": 0,
              "slot": "9",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:132"
            },
            {
              "label": "teamTokensFunded",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:143"
            },
            {
              "label": "teamTokensWithdrawn",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:145"
            },
            {
              "label": "teamTokensInSmartContract",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:147"
            },
            {
              "label": "teamTokensLastWithdrawalTime",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:149"
            },
            {
              "label": "teamTokensStartFundingTime",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:151"
            },
            {
              "label": "teamTokensFundingStarted",
              "offset": 0,
              "slot": "15",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:153"
            },
            {
              "label": "rewardTokensFunded",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:166"
            },
            {
              "label": "rewardTokensDistributed",
              "offset": 0,
              "slot": "17",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:168"
            },
            {
              "label": "rewardTokensWithdrawn",
              "offset": 0,
              "slot": "18",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:170"
            },
            {
              "label": "rewardTokensInSmartContract",
              "offset": 0,
              "slot": "19",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:172"
            },
            {
              "label": "rewardTokensStartFundingTime",
              "offset": 0,
              "slot": "20",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:174"
            },
            {
              "label": "rewardTokensFundingStarted",
              "offset": 0,
              "slot": "21",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:176"
            },
            {
              "label": "whiteListerAddress",
              "offset": 1,
              "slot": "21",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:181"
            },
            {
              "label": "rewardsUpdaterAddress",
              "offset": 0,
              "slot": "22",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:183"
            },
            {
              "label": "maximumBatchSizeForUpdateRewards",
              "offset": 20,
              "slot": "22",
              "type": "t_uint8",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:205"
            },
            {
              "label": "wallets",
              "offset": 0,
              "slot": "23",
              "type": "t_mapping(t_address,t_struct(WalletData)630_storage)",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:207"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ERC20TokenInterface)403": {
              "label": "contract ERC20TokenInterface",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_struct(WalletData)630_storage)": {
              "label": "mapping(address => struct UpgradeableHYAXRewards.WalletData)",
              "numberOfBytes": "32"
            },
            "t_struct(WalletData)630_storage": {
              "label": "struct UpgradeableHYAXRewards.WalletData",
              "members": [
                {
                  "label": "hyaxHoldingAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "hyaxHoldingAmountAtWhitelistTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "totalHyaxRewardsAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "currentRewardsAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "rewardsWithdrawn",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "addedToWhitelistTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "tokenWithdrawalTimes",
                  "type": "t_uint8",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "lastRewardsWithdrawalTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "lastRewardsUpdateTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "isTeamWallet",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "isWhitelisted",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "9"
                },
                {
                  "label": "isBlacklisted",
                  "type": "t_bool",
                  "offset": 2,
                  "slot": "9"
                }
              ],
              "numberOfBytes": "320"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "hardhat/console.sol:console": {
        "src": "hardhat\\console.sol:4",
        "version": {
          "withMetadata": "b1be11c3bf90cff557541588c2ae5cd66dca02f69e0972ceeb9da182ee9131c5",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Pausable.sol:Pausable": {
        "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:17",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Pausable",
            "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:43"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_paused",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UpgradeableHYAXRewards.sol:ERC20TokenInterface": {
        "src": "contracts\\UpgradeableHYAXRewards.sol:13",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "balanceOf(address)",
          "symbol()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UpgradeableHYAXRewards.sol:UpgradeableHYAXRewards": {
        "src": "contracts\\UpgradeableHYAXRewards.sol:20",
        "version": {
          "withMetadata": "3d8afbc4b1dd9746370e706849480e190b94dc4df1db07586039d2e3a889f492",
          "withoutMetadata": "139c5eb4d50c4817caa90899274d3aaf62cc6cb2327ca37733a7965bbfae64ed",
          "linkedWithoutMetadata": "139c5eb4d50c4817caa90899274d3aaf62cc6cb2327ca37733a7965bbfae64ed"
        },
        "inherit": [
          "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "addWalletToWhitelist(address,bool,uint256)",
          "updateWhitelistStatus(address,bool)",
          "updateBlacklistStatus(address,bool)",
          "fundSmartContract(uint8,uint256)",
          "withdrawGrowthTokens()",
          "withdrawTeamTokens()",
          "calculateYearForTeamTokens()",
          "updateRewardsBatch(address[],uint256[])",
          "updateRewardsSingle(address,uint256)",
          "withdrawRewardTokens()",
          "withdrawTokensToBurn(uint8,uint256)",
          "updateWhiteListerAddress(address)",
          "updateRewardsUpdaterAddress(address)",
          "updateHyaxTokenAddress(address)",
          "updateMaximumBatchSizeForUpdateRewards(uint8)",
          "pause()",
          "unpause()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UpgradeableHYAXRewards",
            "src": "contracts\\UpgradeableHYAXRewards.sol:210"
          },
          {
            "kind": "state-variable-assignment",
            "name": "maximumBatchSizeForUpdateRewards",
            "src": "contracts\\UpgradeableHYAXRewards.sol:205"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "_paused",
              "offset": 20,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:37"
            },
            {
              "label": "hyaxTokenAddress",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:108"
            },
            {
              "label": "hyaxToken",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(ERC20TokenInterface)403",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:110"
            },
            {
              "label": "growthTokensFunded",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:122"
            },
            {
              "label": "growthTokensWithdrawn",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:124"
            },
            {
              "label": "growthTokensInSmartContract",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:126"
            },
            {
              "label": "growthTokensLastWithdrawalTime",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:128"
            },
            {
              "label": "growthTokensStartFundingTime",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:130"
            },
            {
              "label": "growthTokensFundingStarted",
              "offset": 0,
              "slot": "9",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:132"
            },
            {
              "label": "teamTokensFunded",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:143"
            },
            {
              "label": "teamTokensWithdrawn",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:145"
            },
            {
              "label": "teamTokensInSmartContract",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:147"
            },
            {
              "label": "teamTokensLastWithdrawalTime",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:149"
            },
            {
              "label": "teamTokensStartFundingTime",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:151"
            },
            {
              "label": "teamTokensFundingStarted",
              "offset": 0,
              "slot": "15",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:153"
            },
            {
              "label": "rewardTokensFunded",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:166"
            },
            {
              "label": "rewardTokensDistributed",
              "offset": 0,
              "slot": "17",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:168"
            },
            {
              "label": "rewardTokensWithdrawn",
              "offset": 0,
              "slot": "18",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:170"
            },
            {
              "label": "rewardTokensInSmartContract",
              "offset": 0,
              "slot": "19",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:172"
            },
            {
              "label": "rewardTokensStartFundingTime",
              "offset": 0,
              "slot": "20",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:174"
            },
            {
              "label": "rewardTokensFundingStarted",
              "offset": 0,
              "slot": "21",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:176"
            },
            {
              "label": "whiteListerAddress",
              "offset": 1,
              "slot": "21",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:181"
            },
            {
              "label": "rewardsUpdaterAddress",
              "offset": 0,
              "slot": "22",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:183"
            },
            {
              "label": "maximumBatchSizeForUpdateRewards",
              "offset": 20,
              "slot": "22",
              "type": "t_uint8",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:205"
            },
            {
              "label": "wallets",
              "offset": 0,
              "slot": "23",
              "type": "t_mapping(t_address,t_struct(WalletData)630_storage)",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:207"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ERC20TokenInterface)403": {
              "label": "contract ERC20TokenInterface",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_struct(WalletData)630_storage)": {
              "label": "mapping(address => struct UpgradeableHYAXRewards.WalletData)",
              "numberOfBytes": "32"
            },
            "t_struct(WalletData)630_storage": {
              "label": "struct UpgradeableHYAXRewards.WalletData",
              "members": [
                {
                  "label": "hyaxHoldingAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "hyaxHoldingAmountAtWhitelistTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "totalHyaxRewardsAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "currentRewardsAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "rewardsWithdrawn",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "addedToWhitelistTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "tokenWithdrawalTimes",
                  "type": "t_uint8",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "lastRewardsWithdrawalTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "lastRewardsUpdateTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "isTeamWallet",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "isWhitelisted",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "9"
                },
                {
                  "label": "isBlacklisted",
                  "type": "t_bool",
                  "offset": 2,
                  "slot": "9"
                }
              ],
              "numberOfBytes": "320"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "hardhat/console.sol:console": {
        "src": "hardhat\\console.sol:4",
        "version": {
          "withMetadata": "b1be11c3bf90cff557541588c2ae5cd66dca02f69e0972ceeb9da182ee9131c5",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Pausable.sol:Pausable": {
        "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:17",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Pausable",
            "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:43"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_paused",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UpgradeableHYAXRewards.sol:ERC20TokenInterface": {
        "src": "contracts\\UpgradeableHYAXRewards.sol:13",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "balanceOf(address)",
          "symbol()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UpgradeableHYAXRewards.sol:UpgradeableHYAXRewards": {
        "src": "contracts\\UpgradeableHYAXRewards.sol:20",
        "version": {
          "withMetadata": "2064a43ee9fb24a185be01a57b58e0304bbb77c6c9be3d20e0c6cf43fa24a5d8",
          "withoutMetadata": "b36ec8653a9da380c88012927f08d59beab72211477fe8ce0e751a58b9800370",
          "linkedWithoutMetadata": "b36ec8653a9da380c88012927f08d59beab72211477fe8ce0e751a58b9800370"
        },
        "inherit": [
          "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "addWalletToWhitelist(address,bool,uint256)",
          "updateWhitelistStatus(address,bool)",
          "updateBlacklistStatus(address,bool)",
          "fundSmartContract(uint8,uint256)",
          "withdrawGrowthTokens()",
          "withdrawTeamTokens()",
          "calculateYearForTeamTokens()",
          "updateRewardsBatch(address[],uint256[])",
          "updateRewardsSingle(address,uint256)",
          "withdrawRewardTokens()",
          "withdrawTokensToBurn(uint8,uint256)",
          "updateWhiteListerAddress(address)",
          "updateRewardsUpdaterAddress(address)",
          "updateHyaxTokenAddress(address)",
          "updateMaximumBatchSizeForUpdateRewards(uint8)",
          "pause()",
          "unpause()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UpgradeableHYAXRewards",
            "src": "contracts\\UpgradeableHYAXRewards.sol:210"
          },
          {
            "kind": "state-variable-assignment",
            "name": "maximumBatchSizeForUpdateRewards",
            "src": "contracts\\UpgradeableHYAXRewards.sol:205"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "_paused",
              "offset": 20,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:37"
            },
            {
              "label": "hyaxTokenAddress",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:108"
            },
            {
              "label": "hyaxToken",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(ERC20TokenInterface)403",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:110"
            },
            {
              "label": "growthTokensFunded",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:122"
            },
            {
              "label": "growthTokensWithdrawn",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:124"
            },
            {
              "label": "growthTokensInSmartContract",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:126"
            },
            {
              "label": "growthTokensLastWithdrawalTime",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:128"
            },
            {
              "label": "growthTokensStartFundingTime",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:130"
            },
            {
              "label": "growthTokensFundingStarted",
              "offset": 0,
              "slot": "9",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:132"
            },
            {
              "label": "teamTokensFunded",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:143"
            },
            {
              "label": "teamTokensWithdrawn",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:145"
            },
            {
              "label": "teamTokensInSmartContract",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:147"
            },
            {
              "label": "teamTokensLastWithdrawalTime",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:149"
            },
            {
              "label": "teamTokensStartFundingTime",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:151"
            },
            {
              "label": "teamTokensFundingStarted",
              "offset": 0,
              "slot": "15",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:153"
            },
            {
              "label": "rewardTokensFunded",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:166"
            },
            {
              "label": "rewardTokensDistributed",
              "offset": 0,
              "slot": "17",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:168"
            },
            {
              "label": "rewardTokensWithdrawn",
              "offset": 0,
              "slot": "18",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:170"
            },
            {
              "label": "rewardTokensInSmartContract",
              "offset": 0,
              "slot": "19",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:172"
            },
            {
              "label": "rewardTokensStartFundingTime",
              "offset": 0,
              "slot": "20",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:174"
            },
            {
              "label": "rewardTokensFundingStarted",
              "offset": 0,
              "slot": "21",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:176"
            },
            {
              "label": "whiteListerAddress",
              "offset": 1,
              "slot": "21",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:181"
            },
            {
              "label": "rewardsUpdaterAddress",
              "offset": 0,
              "slot": "22",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:183"
            },
            {
              "label": "maximumBatchSizeForUpdateRewards",
              "offset": 20,
              "slot": "22",
              "type": "t_uint8",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:205"
            },
            {
              "label": "wallets",
              "offset": 0,
              "slot": "23",
              "type": "t_mapping(t_address,t_struct(WalletData)630_storage)",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:207"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ERC20TokenInterface)403": {
              "label": "contract ERC20TokenInterface",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_struct(WalletData)630_storage)": {
              "label": "mapping(address => struct UpgradeableHYAXRewards.WalletData)",
              "numberOfBytes": "32"
            },
            "t_struct(WalletData)630_storage": {
              "label": "struct UpgradeableHYAXRewards.WalletData",
              "members": [
                {
                  "label": "hyaxHoldingAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "hyaxHoldingAmountAtWhitelistTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "totalHyaxRewardsAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "currentRewardsAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "rewardsWithdrawn",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "addedToWhitelistTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "tokenWithdrawalTimes",
                  "type": "t_uint8",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "lastRewardsWithdrawalTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "lastRewardsUpdateTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "isTeamWallet",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "isWhitelisted",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "9"
                },
                {
                  "label": "isBlacklisted",
                  "type": "t_bool",
                  "offset": 2,
                  "slot": "9"
                }
              ],
              "numberOfBytes": "320"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "hardhat/console.sol:console": {
        "src": "hardhat\\console.sol:4",
        "version": {
          "withMetadata": "b1be11c3bf90cff557541588c2ae5cd66dca02f69e0972ceeb9da182ee9131c5",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Pausable.sol:Pausable": {
        "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:17",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Pausable",
            "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:43"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_paused",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UpgradeableHYAXRewards.sol:ERC20TokenInterface": {
        "src": "contracts\\UpgradeableHYAXRewards.sol:13",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "balanceOf(address)",
          "symbol()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UpgradeableHYAXRewards.sol:UpgradeableHYAXRewards": {
        "src": "contracts\\UpgradeableHYAXRewards.sol:20",
        "version": {
          "withMetadata": "f38c42af04cb9464a50007180ec2487536f9b309a6e795331b2702ffa21f767e",
          "withoutMetadata": "be571becdd526079d84f65962c0a37552ef6ee2d8791a22d5a0e17e59e8339b5",
          "linkedWithoutMetadata": "be571becdd526079d84f65962c0a37552ef6ee2d8791a22d5a0e17e59e8339b5"
        },
        "inherit": [
          "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "addWalletToWhitelist(address,bool,uint256)",
          "updateWhitelistStatus(address,bool)",
          "updateBlacklistStatus(address,bool)",
          "fundSmartContract(uint8,uint256)",
          "withdrawGrowthTokens()",
          "withdrawTeamTokens()",
          "calculateYearForTeamTokens()",
          "updateRewardsBatch(address[],uint256[])",
          "updateRewardsSingle(address,uint256)",
          "withdrawRewardTokens()",
          "withdrawTokensToBurn(uint8,uint256)",
          "updateWhiteListerAddress(address)",
          "updateRewardsUpdaterAddress(address)",
          "updateHyaxTokenAddress(address)",
          "updateMaximumBatchSizeForUpdateRewards(uint8)",
          "pause()",
          "unpause()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UpgradeableHYAXRewards",
            "src": "contracts\\UpgradeableHYAXRewards.sol:210"
          },
          {
            "kind": "state-variable-assignment",
            "name": "maximumBatchSizeForUpdateRewards",
            "src": "contracts\\UpgradeableHYAXRewards.sol:205"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "_paused",
              "offset": 20,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:37"
            },
            {
              "label": "hyaxTokenAddress",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:108"
            },
            {
              "label": "hyaxToken",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(ERC20TokenInterface)403",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:110"
            },
            {
              "label": "growthTokensFunded",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:122"
            },
            {
              "label": "growthTokensWithdrawn",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:124"
            },
            {
              "label": "growthTokensInSmartContract",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:126"
            },
            {
              "label": "growthTokensLastWithdrawalTime",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:128"
            },
            {
              "label": "growthTokensStartFundingTime",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:130"
            },
            {
              "label": "growthTokensFundingStarted",
              "offset": 0,
              "slot": "9",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:132"
            },
            {
              "label": "teamTokensFunded",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:143"
            },
            {
              "label": "teamTokensWithdrawn",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:145"
            },
            {
              "label": "teamTokensInSmartContract",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:147"
            },
            {
              "label": "teamTokensLastWithdrawalTime",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:149"
            },
            {
              "label": "teamTokensStartFundingTime",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:151"
            },
            {
              "label": "teamTokensFundingStarted",
              "offset": 0,
              "slot": "15",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:153"
            },
            {
              "label": "rewardTokensFunded",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:166"
            },
            {
              "label": "rewardTokensDistributed",
              "offset": 0,
              "slot": "17",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:168"
            },
            {
              "label": "rewardTokensWithdrawn",
              "offset": 0,
              "slot": "18",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:170"
            },
            {
              "label": "rewardTokensInSmartContract",
              "offset": 0,
              "slot": "19",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:172"
            },
            {
              "label": "rewardTokensStartFundingTime",
              "offset": 0,
              "slot": "20",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:174"
            },
            {
              "label": "rewardTokensFundingStarted",
              "offset": 0,
              "slot": "21",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:176"
            },
            {
              "label": "whiteListerAddress",
              "offset": 1,
              "slot": "21",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:181"
            },
            {
              "label": "rewardsUpdaterAddress",
              "offset": 0,
              "slot": "22",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:183"
            },
            {
              "label": "maximumBatchSizeForUpdateRewards",
              "offset": 20,
              "slot": "22",
              "type": "t_uint8",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:205"
            },
            {
              "label": "wallets",
              "offset": 0,
              "slot": "23",
              "type": "t_mapping(t_address,t_struct(WalletData)630_storage)",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:207"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ERC20TokenInterface)403": {
              "label": "contract ERC20TokenInterface",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_struct(WalletData)630_storage)": {
              "label": "mapping(address => struct UpgradeableHYAXRewards.WalletData)",
              "numberOfBytes": "32"
            },
            "t_struct(WalletData)630_storage": {
              "label": "struct UpgradeableHYAXRewards.WalletData",
              "members": [
                {
                  "label": "hyaxHoldingAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "hyaxHoldingAmountAtWhitelistTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "totalHyaxRewardsAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "currentRewardsAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "rewardsWithdrawn",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "addedToWhitelistTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "tokenWithdrawalTimes",
                  "type": "t_uint8",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "lastRewardsWithdrawalTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "lastRewardsUpdateTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "isTeamWallet",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "isWhitelisted",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "9"
                },
                {
                  "label": "isBlacklisted",
                  "type": "t_bool",
                  "offset": 2,
                  "slot": "9"
                }
              ],
              "numberOfBytes": "320"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "hardhat/console.sol:console": {
        "src": "hardhat\\console.sol:4",
        "version": {
          "withMetadata": "b1be11c3bf90cff557541588c2ae5cd66dca02f69e0972ceeb9da182ee9131c5",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Pausable.sol:Pausable": {
        "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:17",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Pausable",
            "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:43"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_paused",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UpgradeableHYAXRewards.sol:ERC20TokenInterface": {
        "src": "contracts\\UpgradeableHYAXRewards.sol:13",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "balanceOf(address)",
          "symbol()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UpgradeableHYAXRewards.sol:UpgradeableHYAXRewards": {
        "src": "contracts\\UpgradeableHYAXRewards.sol:20",
        "version": {
          "withMetadata": "566403b8e84ab0498cb1a4758e4f3bb2cc783140d3cc8327ab0179a585eb3308",
          "withoutMetadata": "be571becdd526079d84f65962c0a37552ef6ee2d8791a22d5a0e17e59e8339b5",
          "linkedWithoutMetadata": "be571becdd526079d84f65962c0a37552ef6ee2d8791a22d5a0e17e59e8339b5"
        },
        "inherit": [
          "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "addWalletToWhitelist(address,bool,uint256)",
          "updateWhitelistStatus(address,bool)",
          "updateBlacklistStatus(address,bool)",
          "fundSmartContract(uint8,uint256)",
          "withdrawGrowthTokens()",
          "withdrawTeamTokens()",
          "calculateYearForTeamTokens()",
          "updateRewardsBatch(address[],uint256[])",
          "updateRewardsSingle(address,uint256)",
          "withdrawRewardTokens()",
          "withdrawTokensToBurn(uint8,uint256)",
          "updateWhiteListerAddress(address)",
          "updateRewardsUpdaterAddress(address)",
          "updateHyaxTokenAddress(address)",
          "updateMaximumBatchSizeForUpdateRewards(uint8)",
          "pause()",
          "unpause()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UpgradeableHYAXRewards",
            "src": "contracts\\UpgradeableHYAXRewards.sol:210"
          },
          {
            "kind": "state-variable-assignment",
            "name": "maximumBatchSizeForUpdateRewards",
            "src": "contracts\\UpgradeableHYAXRewards.sol:205"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "_paused",
              "offset": 20,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:37"
            },
            {
              "label": "hyaxTokenAddress",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:108"
            },
            {
              "label": "hyaxToken",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(ERC20TokenInterface)403",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:110"
            },
            {
              "label": "growthTokensFunded",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:122"
            },
            {
              "label": "growthTokensWithdrawn",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:124"
            },
            {
              "label": "growthTokensInSmartContract",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:126"
            },
            {
              "label": "growthTokensLastWithdrawalTime",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:128"
            },
            {
              "label": "growthTokensStartFundingTime",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:130"
            },
            {
              "label": "growthTokensFundingStarted",
              "offset": 0,
              "slot": "9",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:132"
            },
            {
              "label": "teamTokensFunded",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:143"
            },
            {
              "label": "teamTokensWithdrawn",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:145"
            },
            {
              "label": "teamTokensInSmartContract",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:147"
            },
            {
              "label": "teamTokensLastWithdrawalTime",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:149"
            },
            {
              "label": "teamTokensStartFundingTime",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:151"
            },
            {
              "label": "teamTokensFundingStarted",
              "offset": 0,
              "slot": "15",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:153"
            },
            {
              "label": "rewardTokensFunded",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:166"
            },
            {
              "label": "rewardTokensDistributed",
              "offset": 0,
              "slot": "17",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:168"
            },
            {
              "label": "rewardTokensWithdrawn",
              "offset": 0,
              "slot": "18",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:170"
            },
            {
              "label": "rewardTokensInSmartContract",
              "offset": 0,
              "slot": "19",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:172"
            },
            {
              "label": "rewardTokensStartFundingTime",
              "offset": 0,
              "slot": "20",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:174"
            },
            {
              "label": "rewardTokensFundingStarted",
              "offset": 0,
              "slot": "21",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:176"
            },
            {
              "label": "whiteListerAddress",
              "offset": 1,
              "slot": "21",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:181"
            },
            {
              "label": "rewardsUpdaterAddress",
              "offset": 0,
              "slot": "22",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:183"
            },
            {
              "label": "maximumBatchSizeForUpdateRewards",
              "offset": 20,
              "slot": "22",
              "type": "t_uint8",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:205"
            },
            {
              "label": "wallets",
              "offset": 0,
              "slot": "23",
              "type": "t_mapping(t_address,t_struct(WalletData)630_storage)",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:207"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ERC20TokenInterface)403": {
              "label": "contract ERC20TokenInterface",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_struct(WalletData)630_storage)": {
              "label": "mapping(address => struct UpgradeableHYAXRewards.WalletData)",
              "numberOfBytes": "32"
            },
            "t_struct(WalletData)630_storage": {
              "label": "struct UpgradeableHYAXRewards.WalletData",
              "members": [
                {
                  "label": "hyaxHoldingAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "hyaxHoldingAmountAtWhitelistTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "totalHyaxRewardsAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "currentRewardsAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "rewardsWithdrawn",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "addedToWhitelistTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "tokenWithdrawalTimes",
                  "type": "t_uint8",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "lastRewardsWithdrawalTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "lastRewardsUpdateTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "isTeamWallet",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "isWhitelisted",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "9"
                },
                {
                  "label": "isBlacklisted",
                  "type": "t_bool",
                  "offset": 2,
                  "slot": "9"
                }
              ],
              "numberOfBytes": "320"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "hardhat/console.sol:console": {
        "src": "hardhat\\console.sol:4",
        "version": {
          "withMetadata": "b1be11c3bf90cff557541588c2ae5cd66dca02f69e0972ceeb9da182ee9131c5",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Pausable.sol:Pausable": {
        "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:17",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Pausable",
            "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:43"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_paused",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UpgradeableHYAXRewards.sol:ERC20TokenInterface": {
        "src": "contracts\\UpgradeableHYAXRewards.sol:13",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "balanceOf(address)",
          "symbol()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UpgradeableHYAXRewards.sol:UpgradeableHYAXRewards": {
        "src": "contracts\\UpgradeableHYAXRewards.sol:20",
        "version": {
          "withMetadata": "906f63afc4e8434012e2ea72e07a8731b9aa1c6de5eefce4f5ac3c61c1d8216f",
          "withoutMetadata": "5592e7ce8742f16087fefa948005520d7744ea76015d7c1880648474f6bf42a0",
          "linkedWithoutMetadata": "5592e7ce8742f16087fefa948005520d7744ea76015d7c1880648474f6bf42a0"
        },
        "inherit": [
          "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "addWalletToWhitelist(address,bool,uint256)",
          "updateWhitelistStatus(address,bool)",
          "updateBlacklistStatus(address,bool)",
          "fundSmartContract(uint8,uint256)",
          "withdrawGrowthTokens()",
          "withdrawTeamTokens()",
          "calculateYearForTeamTokens()",
          "updateRewardsBatch(address[],uint256[])",
          "updateRewardsSingle(address,uint256)",
          "withdrawRewardTokens()",
          "withdrawTokensToBurn(uint8,uint256)",
          "updateWhiteListerAddress(address)",
          "updateRewardsUpdaterAddress(address)",
          "updateHyaxTokenAddress(address)",
          "updateMaximumBatchSizeForUpdateRewards(uint8)",
          "pause()",
          "unpause()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UpgradeableHYAXRewards",
            "src": "contracts\\UpgradeableHYAXRewards.sol:210"
          },
          {
            "kind": "state-variable-assignment",
            "name": "maximumBatchSizeForUpdateRewards",
            "src": "contracts\\UpgradeableHYAXRewards.sol:205"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "_paused",
              "offset": 20,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:37"
            },
            {
              "label": "hyaxTokenAddress",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:108"
            },
            {
              "label": "hyaxToken",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(ERC20TokenInterface)403",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:110"
            },
            {
              "label": "growthTokensFunded",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:122"
            },
            {
              "label": "growthTokensWithdrawn",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:124"
            },
            {
              "label": "growthTokensInSmartContract",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:126"
            },
            {
              "label": "growthTokensLastWithdrawalTime",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:128"
            },
            {
              "label": "growthTokensStartFundingTime",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:130"
            },
            {
              "label": "growthTokensFundingStarted",
              "offset": 0,
              "slot": "9",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:132"
            },
            {
              "label": "teamTokensFunded",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:143"
            },
            {
              "label": "teamTokensWithdrawn",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:145"
            },
            {
              "label": "teamTokensInSmartContract",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:147"
            },
            {
              "label": "teamTokensLastWithdrawalTime",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:149"
            },
            {
              "label": "teamTokensStartFundingTime",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:151"
            },
            {
              "label": "teamTokensFundingStarted",
              "offset": 0,
              "slot": "15",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:153"
            },
            {
              "label": "rewardTokensFunded",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:166"
            },
            {
              "label": "rewardTokensDistributed",
              "offset": 0,
              "slot": "17",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:168"
            },
            {
              "label": "rewardTokensWithdrawn",
              "offset": 0,
              "slot": "18",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:170"
            },
            {
              "label": "rewardTokensInSmartContract",
              "offset": 0,
              "slot": "19",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:172"
            },
            {
              "label": "rewardTokensStartFundingTime",
              "offset": 0,
              "slot": "20",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:174"
            },
            {
              "label": "rewardTokensFundingStarted",
              "offset": 0,
              "slot": "21",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:176"
            },
            {
              "label": "whiteListerAddress",
              "offset": 1,
              "slot": "21",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:181"
            },
            {
              "label": "rewardsUpdaterAddress",
              "offset": 0,
              "slot": "22",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:183"
            },
            {
              "label": "maximumBatchSizeForUpdateRewards",
              "offset": 20,
              "slot": "22",
              "type": "t_uint8",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:205"
            },
            {
              "label": "wallets",
              "offset": 0,
              "slot": "23",
              "type": "t_mapping(t_address,t_struct(WalletData)630_storage)",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:207"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ERC20TokenInterface)403": {
              "label": "contract ERC20TokenInterface",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_struct(WalletData)630_storage)": {
              "label": "mapping(address => struct UpgradeableHYAXRewards.WalletData)",
              "numberOfBytes": "32"
            },
            "t_struct(WalletData)630_storage": {
              "label": "struct UpgradeableHYAXRewards.WalletData",
              "members": [
                {
                  "label": "hyaxHoldingAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "hyaxHoldingAmountAtWhitelistTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "totalHyaxRewardsAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "currentRewardsAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "rewardsWithdrawn",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "addedToWhitelistTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "tokenWithdrawalTimes",
                  "type": "t_uint8",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "lastRewardsWithdrawalTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "lastRewardsUpdateTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "isTeamWallet",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "isWhitelisted",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "9"
                },
                {
                  "label": "isBlacklisted",
                  "type": "t_bool",
                  "offset": 2,
                  "slot": "9"
                }
              ],
              "numberOfBytes": "320"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "hardhat/console.sol:console": {
        "src": "hardhat\\console.sol:4",
        "version": {
          "withMetadata": "b1be11c3bf90cff557541588c2ae5cd66dca02f69e0972ceeb9da182ee9131c5",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Pausable.sol:Pausable": {
        "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:17",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Pausable",
            "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:43"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_paused",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UpgradeableHYAXRewards.sol:ERC20TokenInterface": {
        "src": "contracts\\UpgradeableHYAXRewards.sol:13",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "balanceOf(address)",
          "symbol()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UpgradeableHYAXRewards.sol:UpgradeableHYAXRewards": {
        "src": "contracts\\UpgradeableHYAXRewards.sol:20",
        "version": {
          "withMetadata": "d1114ef687758bbb9d95921ccbd10a1b9cef67ec84381cd565a1b7d1a91e0405",
          "withoutMetadata": "5592e7ce8742f16087fefa948005520d7744ea76015d7c1880648474f6bf42a0",
          "linkedWithoutMetadata": "5592e7ce8742f16087fefa948005520d7744ea76015d7c1880648474f6bf42a0"
        },
        "inherit": [
          "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "addWalletToWhitelist(address,bool,uint256)",
          "updateWhitelistStatus(address,bool)",
          "updateBlacklistStatus(address,bool)",
          "fundSmartContract(uint8,uint256)",
          "withdrawGrowthTokens()",
          "withdrawTeamTokens()",
          "calculateYearForTeamTokens()",
          "updateRewardsBatch(address[],uint256[])",
          "updateRewardsSingle(address,uint256)",
          "withdrawRewardTokens()",
          "withdrawTokensToBurn(uint8,uint256)",
          "updateWhiteListerAddress(address)",
          "updateRewardsUpdaterAddress(address)",
          "updateHyaxTokenAddress(address)",
          "updateMaximumBatchSizeForUpdateRewards(uint8)",
          "pause()",
          "unpause()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UpgradeableHYAXRewards",
            "src": "contracts\\UpgradeableHYAXRewards.sol:210"
          },
          {
            "kind": "state-variable-assignment",
            "name": "maximumBatchSizeForUpdateRewards",
            "src": "contracts\\UpgradeableHYAXRewards.sol:205"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "_paused",
              "offset": 20,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:37"
            },
            {
              "label": "hyaxTokenAddress",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:108"
            },
            {
              "label": "hyaxToken",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(ERC20TokenInterface)403",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:110"
            },
            {
              "label": "growthTokensFunded",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:122"
            },
            {
              "label": "growthTokensWithdrawn",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:124"
            },
            {
              "label": "growthTokensInSmartContract",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:126"
            },
            {
              "label": "growthTokensLastWithdrawalTime",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:128"
            },
            {
              "label": "growthTokensStartFundingTime",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:130"
            },
            {
              "label": "growthTokensFundingStarted",
              "offset": 0,
              "slot": "9",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:132"
            },
            {
              "label": "teamTokensFunded",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:143"
            },
            {
              "label": "teamTokensWithdrawn",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:145"
            },
            {
              "label": "teamTokensInSmartContract",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:147"
            },
            {
              "label": "teamTokensLastWithdrawalTime",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:149"
            },
            {
              "label": "teamTokensStartFundingTime",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:151"
            },
            {
              "label": "teamTokensFundingStarted",
              "offset": 0,
              "slot": "15",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:153"
            },
            {
              "label": "rewardTokensFunded",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:166"
            },
            {
              "label": "rewardTokensDistributed",
              "offset": 0,
              "slot": "17",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:168"
            },
            {
              "label": "rewardTokensWithdrawn",
              "offset": 0,
              "slot": "18",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:170"
            },
            {
              "label": "rewardTokensInSmartContract",
              "offset": 0,
              "slot": "19",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:172"
            },
            {
              "label": "rewardTokensStartFundingTime",
              "offset": 0,
              "slot": "20",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:174"
            },
            {
              "label": "rewardTokensFundingStarted",
              "offset": 0,
              "slot": "21",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:176"
            },
            {
              "label": "whiteListerAddress",
              "offset": 1,
              "slot": "21",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:181"
            },
            {
              "label": "rewardsUpdaterAddress",
              "offset": 0,
              "slot": "22",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:183"
            },
            {
              "label": "maximumBatchSizeForUpdateRewards",
              "offset": 20,
              "slot": "22",
              "type": "t_uint8",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:205"
            },
            {
              "label": "wallets",
              "offset": 0,
              "slot": "23",
              "type": "t_mapping(t_address,t_struct(WalletData)630_storage)",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:207"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ERC20TokenInterface)403": {
              "label": "contract ERC20TokenInterface",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_struct(WalletData)630_storage)": {
              "label": "mapping(address => struct UpgradeableHYAXRewards.WalletData)",
              "numberOfBytes": "32"
            },
            "t_struct(WalletData)630_storage": {
              "label": "struct UpgradeableHYAXRewards.WalletData",
              "members": [
                {
                  "label": "hyaxHoldingAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "hyaxHoldingAmountAtWhitelistTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "totalHyaxRewardsAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "currentRewardsAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "rewardsWithdrawn",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "addedToWhitelistTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "tokenWithdrawalTimes",
                  "type": "t_uint8",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "lastRewardsWithdrawalTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "lastRewardsUpdateTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "isTeamWallet",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "isWhitelisted",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "9"
                },
                {
                  "label": "isBlacklisted",
                  "type": "t_bool",
                  "offset": 2,
                  "slot": "9"
                }
              ],
              "numberOfBytes": "320"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "hardhat/console.sol:console": {
        "src": "hardhat\\console.sol:4",
        "version": {
          "withMetadata": "b1be11c3bf90cff557541588c2ae5cd66dca02f69e0972ceeb9da182ee9131c5",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Pausable.sol:Pausable": {
        "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:17",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Pausable",
            "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:43"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_paused",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UpgradeableHYAXRewards.sol:ERC20TokenInterface": {
        "src": "contracts\\UpgradeableHYAXRewards.sol:13",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "balanceOf(address)",
          "symbol()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UpgradeableHYAXRewards.sol:UpgradeableHYAXRewards": {
        "src": "contracts\\UpgradeableHYAXRewards.sol:20",
        "version": {
          "withMetadata": "c128da0520fe31741c18550a458ff14953c4b731dec81d80bc63afe35b344243",
          "withoutMetadata": "c2d7f0145ee89dde621f2523026ca719f6dde07d1a8b0fa7769ab8eb1ea59cbc",
          "linkedWithoutMetadata": "c2d7f0145ee89dde621f2523026ca719f6dde07d1a8b0fa7769ab8eb1ea59cbc"
        },
        "inherit": [
          "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "addWalletToWhitelist(address,bool,uint256)",
          "updateWhitelistStatus(address,bool)",
          "updateBlacklistStatus(address,bool)",
          "fundSmartContract(uint8,uint256)",
          "withdrawGrowthTokens()",
          "withdrawTeamTokens()",
          "calculateYearForTeamTokens()",
          "updateRewardsBatch(address[],uint256[])",
          "updateRewardsSingle(address,uint256)",
          "withdrawRewardTokens()",
          "withdrawTokensToBurn(uint8,uint256)",
          "updateWhiteListerAddress(address)",
          "updateRewardsUpdaterAddress(address)",
          "updateHyaxTokenAddress(address)",
          "updateMaximumBatchSizeForUpdateRewards(uint8)",
          "pause()",
          "unpause()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UpgradeableHYAXRewards",
            "src": "contracts\\UpgradeableHYAXRewards.sol:210"
          },
          {
            "kind": "state-variable-assignment",
            "name": "maximumBatchSizeForUpdateRewards",
            "src": "contracts\\UpgradeableHYAXRewards.sol:205"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "_paused",
              "offset": 20,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:37"
            },
            {
              "label": "hyaxTokenAddress",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:108"
            },
            {
              "label": "hyaxToken",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(ERC20TokenInterface)403",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:110"
            },
            {
              "label": "growthTokensFunded",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:122"
            },
            {
              "label": "growthTokensWithdrawn",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:124"
            },
            {
              "label": "growthTokensInSmartContract",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:126"
            },
            {
              "label": "growthTokensLastWithdrawalTime",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:128"
            },
            {
              "label": "growthTokensStartFundingTime",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:130"
            },
            {
              "label": "growthTokensFundingStarted",
              "offset": 0,
              "slot": "9",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:132"
            },
            {
              "label": "teamTokensFunded",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:143"
            },
            {
              "label": "teamTokensWithdrawn",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:145"
            },
            {
              "label": "teamTokensInSmartContract",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:147"
            },
            {
              "label": "teamTokensLastWithdrawalTime",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:149"
            },
            {
              "label": "teamTokensStartFundingTime",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:151"
            },
            {
              "label": "teamTokensFundingStarted",
              "offset": 0,
              "slot": "15",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:153"
            },
            {
              "label": "rewardTokensFunded",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:166"
            },
            {
              "label": "rewardTokensDistributed",
              "offset": 0,
              "slot": "17",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:168"
            },
            {
              "label": "rewardTokensWithdrawn",
              "offset": 0,
              "slot": "18",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:170"
            },
            {
              "label": "rewardTokensInSmartContract",
              "offset": 0,
              "slot": "19",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:172"
            },
            {
              "label": "rewardTokensStartFundingTime",
              "offset": 0,
              "slot": "20",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:174"
            },
            {
              "label": "rewardTokensFundingStarted",
              "offset": 0,
              "slot": "21",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:176"
            },
            {
              "label": "whiteListerAddress",
              "offset": 1,
              "slot": "21",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:181"
            },
            {
              "label": "rewardsUpdaterAddress",
              "offset": 0,
              "slot": "22",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:183"
            },
            {
              "label": "maximumBatchSizeForUpdateRewards",
              "offset": 20,
              "slot": "22",
              "type": "t_uint8",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:205"
            },
            {
              "label": "wallets",
              "offset": 0,
              "slot": "23",
              "type": "t_mapping(t_address,t_struct(WalletData)630_storage)",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:207"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ERC20TokenInterface)403": {
              "label": "contract ERC20TokenInterface",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_struct(WalletData)630_storage)": {
              "label": "mapping(address => struct UpgradeableHYAXRewards.WalletData)",
              "numberOfBytes": "32"
            },
            "t_struct(WalletData)630_storage": {
              "label": "struct UpgradeableHYAXRewards.WalletData",
              "members": [
                {
                  "label": "hyaxHoldingAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "hyaxHoldingAmountAtWhitelistTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "totalHyaxRewardsAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "currentRewardsAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "rewardsWithdrawn",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "addedToWhitelistTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "tokenWithdrawalTimes",
                  "type": "t_uint8",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "lastRewardsWithdrawalTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "lastRewardsUpdateTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "isTeamWallet",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "isWhitelisted",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "9"
                },
                {
                  "label": "isBlacklisted",
                  "type": "t_bool",
                  "offset": 2,
                  "slot": "9"
                }
              ],
              "numberOfBytes": "320"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "hardhat/console.sol:console": {
        "src": "hardhat\\console.sol:4",
        "version": {
          "withMetadata": "b1be11c3bf90cff557541588c2ae5cd66dca02f69e0972ceeb9da182ee9131c5",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Pausable.sol:Pausable": {
        "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:17",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Pausable",
            "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:43"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_paused",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UpgradeableHYAXRewards.sol:ERC20TokenInterface": {
        "src": "contracts\\UpgradeableHYAXRewards.sol:13",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "balanceOf(address)",
          "symbol()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UpgradeableHYAXRewards.sol:UpgradeableHYAXRewards": {
        "src": "contracts\\UpgradeableHYAXRewards.sol:20",
        "version": {
          "withMetadata": "b973d106fa115d21ce5f28752d85b6ad3a8ac30d18688dea7756360964d6fe09",
          "withoutMetadata": "c2d7f0145ee89dde621f2523026ca719f6dde07d1a8b0fa7769ab8eb1ea59cbc",
          "linkedWithoutMetadata": "c2d7f0145ee89dde621f2523026ca719f6dde07d1a8b0fa7769ab8eb1ea59cbc"
        },
        "inherit": [
          "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "addWalletToWhitelist(address,bool,uint256)",
          "updateWhitelistStatus(address,bool)",
          "updateBlacklistStatus(address,bool)",
          "fundSmartContract(uint8,uint256)",
          "withdrawGrowthTokens()",
          "withdrawTeamTokens()",
          "calculateYearForTeamTokens()",
          "updateRewardsBatch(address[],uint256[])",
          "updateRewardsSingle(address,uint256)",
          "withdrawRewardTokens()",
          "withdrawTokensToBurn(uint8,uint256)",
          "updateWhiteListerAddress(address)",
          "updateRewardsUpdaterAddress(address)",
          "updateHyaxTokenAddress(address)",
          "updateMaximumBatchSizeForUpdateRewards(uint8)",
          "pause()",
          "unpause()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UpgradeableHYAXRewards",
            "src": "contracts\\UpgradeableHYAXRewards.sol:210"
          },
          {
            "kind": "state-variable-assignment",
            "name": "maximumBatchSizeForUpdateRewards",
            "src": "contracts\\UpgradeableHYAXRewards.sol:205"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "_paused",
              "offset": 20,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:37"
            },
            {
              "label": "hyaxTokenAddress",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:108"
            },
            {
              "label": "hyaxToken",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(ERC20TokenInterface)403",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:110"
            },
            {
              "label": "growthTokensFunded",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:122"
            },
            {
              "label": "growthTokensWithdrawn",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:124"
            },
            {
              "label": "growthTokensInSmartContract",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:126"
            },
            {
              "label": "growthTokensLastWithdrawalTime",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:128"
            },
            {
              "label": "growthTokensStartFundingTime",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:130"
            },
            {
              "label": "growthTokensFundingStarted",
              "offset": 0,
              "slot": "9",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:132"
            },
            {
              "label": "teamTokensFunded",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:143"
            },
            {
              "label": "teamTokensWithdrawn",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:145"
            },
            {
              "label": "teamTokensInSmartContract",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:147"
            },
            {
              "label": "teamTokensLastWithdrawalTime",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:149"
            },
            {
              "label": "teamTokensStartFundingTime",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:151"
            },
            {
              "label": "teamTokensFundingStarted",
              "offset": 0,
              "slot": "15",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:153"
            },
            {
              "label": "rewardTokensFunded",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:166"
            },
            {
              "label": "rewardTokensDistributed",
              "offset": 0,
              "slot": "17",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:168"
            },
            {
              "label": "rewardTokensWithdrawn",
              "offset": 0,
              "slot": "18",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:170"
            },
            {
              "label": "rewardTokensInSmartContract",
              "offset": 0,
              "slot": "19",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:172"
            },
            {
              "label": "rewardTokensStartFundingTime",
              "offset": 0,
              "slot": "20",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:174"
            },
            {
              "label": "rewardTokensFundingStarted",
              "offset": 0,
              "slot": "21",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:176"
            },
            {
              "label": "whiteListerAddress",
              "offset": 1,
              "slot": "21",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:181"
            },
            {
              "label": "rewardsUpdaterAddress",
              "offset": 0,
              "slot": "22",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:183"
            },
            {
              "label": "maximumBatchSizeForUpdateRewards",
              "offset": 20,
              "slot": "22",
              "type": "t_uint8",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:205"
            },
            {
              "label": "wallets",
              "offset": 0,
              "slot": "23",
              "type": "t_mapping(t_address,t_struct(WalletData)630_storage)",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:207"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ERC20TokenInterface)403": {
              "label": "contract ERC20TokenInterface",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_struct(WalletData)630_storage)": {
              "label": "mapping(address => struct UpgradeableHYAXRewards.WalletData)",
              "numberOfBytes": "32"
            },
            "t_struct(WalletData)630_storage": {
              "label": "struct UpgradeableHYAXRewards.WalletData",
              "members": [
                {
                  "label": "hyaxHoldingAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "hyaxHoldingAmountAtWhitelistTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "totalHyaxRewardsAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "currentRewardsAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "rewardsWithdrawn",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "addedToWhitelistTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "tokenWithdrawalTimes",
                  "type": "t_uint8",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "lastRewardsWithdrawalTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "lastRewardsUpdateTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "isTeamWallet",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "isWhitelisted",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "9"
                },
                {
                  "label": "isBlacklisted",
                  "type": "t_bool",
                  "offset": 2,
                  "slot": "9"
                }
              ],
              "numberOfBytes": "320"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "hardhat/console.sol:console": {
        "src": "hardhat\\console.sol:4",
        "version": {
          "withMetadata": "b1be11c3bf90cff557541588c2ae5cd66dca02f69e0972ceeb9da182ee9131c5",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Pausable.sol:Pausable": {
        "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:17",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Pausable",
            "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:43"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_paused",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UpgradeableHYAXRewards.sol:ERC20TokenInterface": {
        "src": "contracts\\UpgradeableHYAXRewards.sol:13",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "balanceOf(address)",
          "symbol()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UpgradeableHYAXRewards.sol:UpgradeableHYAXRewards": {
        "src": "contracts\\UpgradeableHYAXRewards.sol:20",
        "version": {
          "withMetadata": "8a5650c149de8b4bbd500248d9a27557ae16e41ca732ec37fd641404d52bf6e9",
          "withoutMetadata": "af0cd25974d24a185dc59bc2064245fbb4c3521f4e60a9edd4db448b97aeb54c",
          "linkedWithoutMetadata": "af0cd25974d24a185dc59bc2064245fbb4c3521f4e60a9edd4db448b97aeb54c"
        },
        "inherit": [
          "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "addWalletToWhitelist(address,bool,uint256)",
          "updateWhitelistStatus(address,bool)",
          "updateBlacklistStatus(address,bool)",
          "fundSmartContract(uint8,uint256)",
          "withdrawGrowthTokens()",
          "withdrawTeamTokens()",
          "calculateYearForTeamTokens()",
          "updateRewardsBatch(address[],uint256[])",
          "updateRewardsSingle(address,uint256)",
          "withdrawRewardTokens()",
          "withdrawTokensToBurn(uint8,uint256)",
          "updateWhiteListerAddress(address)",
          "updateRewardsUpdaterAddress(address)",
          "updateHyaxTokenAddress(address)",
          "updateMaximumBatchSizeForUpdateRewards(uint8)",
          "pause()",
          "unpause()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UpgradeableHYAXRewards",
            "src": "contracts\\UpgradeableHYAXRewards.sol:210"
          },
          {
            "kind": "state-variable-assignment",
            "name": "maximumBatchSizeForUpdateRewards",
            "src": "contracts\\UpgradeableHYAXRewards.sol:205"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "_paused",
              "offset": 20,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:37"
            },
            {
              "label": "hyaxTokenAddress",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:108"
            },
            {
              "label": "hyaxToken",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(ERC20TokenInterface)403",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:110"
            },
            {
              "label": "growthTokensFunded",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:122"
            },
            {
              "label": "growthTokensWithdrawn",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:124"
            },
            {
              "label": "growthTokensInSmartContract",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:126"
            },
            {
              "label": "growthTokensLastWithdrawalTime",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:128"
            },
            {
              "label": "growthTokensStartFundingTime",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:130"
            },
            {
              "label": "growthTokensFundingStarted",
              "offset": 0,
              "slot": "9",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:132"
            },
            {
              "label": "teamTokensFunded",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:143"
            },
            {
              "label": "teamTokensWithdrawn",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:145"
            },
            {
              "label": "teamTokensInSmartContract",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:147"
            },
            {
              "label": "teamTokensLastWithdrawalTime",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:149"
            },
            {
              "label": "teamTokensStartFundingTime",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:151"
            },
            {
              "label": "teamTokensFundingStarted",
              "offset": 0,
              "slot": "15",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:153"
            },
            {
              "label": "rewardTokensFunded",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:166"
            },
            {
              "label": "rewardTokensDistributed",
              "offset": 0,
              "slot": "17",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:168"
            },
            {
              "label": "rewardTokensWithdrawn",
              "offset": 0,
              "slot": "18",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:170"
            },
            {
              "label": "rewardTokensInSmartContract",
              "offset": 0,
              "slot": "19",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:172"
            },
            {
              "label": "rewardTokensStartFundingTime",
              "offset": 0,
              "slot": "20",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:174"
            },
            {
              "label": "rewardTokensFundingStarted",
              "offset": 0,
              "slot": "21",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:176"
            },
            {
              "label": "whiteListerAddress",
              "offset": 1,
              "slot": "21",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:181"
            },
            {
              "label": "rewardsUpdaterAddress",
              "offset": 0,
              "slot": "22",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:183"
            },
            {
              "label": "maximumBatchSizeForUpdateRewards",
              "offset": 20,
              "slot": "22",
              "type": "t_uint8",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:205"
            },
            {
              "label": "wallets",
              "offset": 0,
              "slot": "23",
              "type": "t_mapping(t_address,t_struct(WalletData)630_storage)",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:207"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ERC20TokenInterface)403": {
              "label": "contract ERC20TokenInterface",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_struct(WalletData)630_storage)": {
              "label": "mapping(address => struct UpgradeableHYAXRewards.WalletData)",
              "numberOfBytes": "32"
            },
            "t_struct(WalletData)630_storage": {
              "label": "struct UpgradeableHYAXRewards.WalletData",
              "members": [
                {
                  "label": "hyaxHoldingAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "hyaxHoldingAmountAtWhitelistTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "totalHyaxRewardsAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "currentRewardsAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "rewardsWithdrawn",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "addedToWhitelistTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "tokenWithdrawalTimes",
                  "type": "t_uint8",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "lastRewardsWithdrawalTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "lastRewardsUpdateTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "isTeamWallet",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "isWhitelisted",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "9"
                },
                {
                  "label": "isBlacklisted",
                  "type": "t_bool",
                  "offset": 2,
                  "slot": "9"
                }
              ],
              "numberOfBytes": "320"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "hardhat/console.sol:console": {
        "src": "hardhat\\console.sol:4",
        "version": {
          "withMetadata": "b1be11c3bf90cff557541588c2ae5cd66dca02f69e0972ceeb9da182ee9131c5",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Pausable.sol:Pausable": {
        "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:17",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Pausable",
            "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:43"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_paused",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UpgradeableHYAXRewards.sol:ERC20TokenInterface": {
        "src": "contracts\\UpgradeableHYAXRewards.sol:13",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "balanceOf(address)",
          "symbol()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UpgradeableHYAXRewards.sol:UpgradeableHYAXRewards": {
        "src": "contracts\\UpgradeableHYAXRewards.sol:20",
        "version": {
          "withMetadata": "19c228fa19eceeb1e00b2d518c10f2319e7e802d388d6c82a4002b65ec5fbfb7",
          "withoutMetadata": "af0cd25974d24a185dc59bc2064245fbb4c3521f4e60a9edd4db448b97aeb54c",
          "linkedWithoutMetadata": "af0cd25974d24a185dc59bc2064245fbb4c3521f4e60a9edd4db448b97aeb54c"
        },
        "inherit": [
          "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "addWalletToWhitelist(address,bool,uint256)",
          "updateWhitelistStatus(address,bool)",
          "updateBlacklistStatus(address,bool)",
          "fundSmartContract(uint8,uint256)",
          "withdrawGrowthTokens()",
          "withdrawTeamTokens()",
          "calculateYearForTeamTokens()",
          "updateRewardsBatch(address[],uint256[])",
          "updateRewardsSingle(address,uint256)",
          "withdrawRewardTokens()",
          "withdrawTokensToBurn(uint8,uint256)",
          "updateWhiteListerAddress(address)",
          "updateRewardsUpdaterAddress(address)",
          "updateHyaxTokenAddress(address)",
          "updateMaximumBatchSizeForUpdateRewards(uint8)",
          "pause()",
          "unpause()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UpgradeableHYAXRewards",
            "src": "contracts\\UpgradeableHYAXRewards.sol:210"
          },
          {
            "kind": "state-variable-assignment",
            "name": "maximumBatchSizeForUpdateRewards",
            "src": "contracts\\UpgradeableHYAXRewards.sol:205"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "_paused",
              "offset": 20,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:37"
            },
            {
              "label": "hyaxTokenAddress",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:108"
            },
            {
              "label": "hyaxToken",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(ERC20TokenInterface)403",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:110"
            },
            {
              "label": "growthTokensFunded",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:122"
            },
            {
              "label": "growthTokensWithdrawn",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:124"
            },
            {
              "label": "growthTokensInSmartContract",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:126"
            },
            {
              "label": "growthTokensLastWithdrawalTime",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:128"
            },
            {
              "label": "growthTokensStartFundingTime",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:130"
            },
            {
              "label": "growthTokensFundingStarted",
              "offset": 0,
              "slot": "9",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:132"
            },
            {
              "label": "teamTokensFunded",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:143"
            },
            {
              "label": "teamTokensWithdrawn",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:145"
            },
            {
              "label": "teamTokensInSmartContract",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:147"
            },
            {
              "label": "teamTokensLastWithdrawalTime",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:149"
            },
            {
              "label": "teamTokensStartFundingTime",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:151"
            },
            {
              "label": "teamTokensFundingStarted",
              "offset": 0,
              "slot": "15",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:153"
            },
            {
              "label": "rewardTokensFunded",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:166"
            },
            {
              "label": "rewardTokensDistributed",
              "offset": 0,
              "slot": "17",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:168"
            },
            {
              "label": "rewardTokensWithdrawn",
              "offset": 0,
              "slot": "18",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:170"
            },
            {
              "label": "rewardTokensInSmartContract",
              "offset": 0,
              "slot": "19",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:172"
            },
            {
              "label": "rewardTokensStartFundingTime",
              "offset": 0,
              "slot": "20",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:174"
            },
            {
              "label": "rewardTokensFundingStarted",
              "offset": 0,
              "slot": "21",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:176"
            },
            {
              "label": "whiteListerAddress",
              "offset": 1,
              "slot": "21",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:181"
            },
            {
              "label": "rewardsUpdaterAddress",
              "offset": 0,
              "slot": "22",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:183"
            },
            {
              "label": "maximumBatchSizeForUpdateRewards",
              "offset": 20,
              "slot": "22",
              "type": "t_uint8",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:205"
            },
            {
              "label": "wallets",
              "offset": 0,
              "slot": "23",
              "type": "t_mapping(t_address,t_struct(WalletData)630_storage)",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:207"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ERC20TokenInterface)403": {
              "label": "contract ERC20TokenInterface",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_struct(WalletData)630_storage)": {
              "label": "mapping(address => struct UpgradeableHYAXRewards.WalletData)",
              "numberOfBytes": "32"
            },
            "t_struct(WalletData)630_storage": {
              "label": "struct UpgradeableHYAXRewards.WalletData",
              "members": [
                {
                  "label": "hyaxHoldingAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "hyaxHoldingAmountAtWhitelistTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "totalHyaxRewardsAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "currentRewardsAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "rewardsWithdrawn",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "addedToWhitelistTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "tokenWithdrawalTimes",
                  "type": "t_uint8",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "lastRewardsWithdrawalTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "lastRewardsUpdateTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "isTeamWallet",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "isWhitelisted",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "9"
                },
                {
                  "label": "isBlacklisted",
                  "type": "t_bool",
                  "offset": 2,
                  "slot": "9"
                }
              ],
              "numberOfBytes": "320"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "hardhat/console.sol:console": {
        "src": "hardhat\\console.sol:4",
        "version": {
          "withMetadata": "b1be11c3bf90cff557541588c2ae5cd66dca02f69e0972ceeb9da182ee9131c5",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Pausable.sol:Pausable": {
        "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:17",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Pausable",
            "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:43"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_paused",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UpgradeableHYAXRewards.sol:ERC20TokenInterface": {
        "src": "contracts\\UpgradeableHYAXRewards.sol:13",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "balanceOf(address)",
          "symbol()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UpgradeableHYAXRewards.sol:UpgradeableHYAXRewards": {
        "src": "contracts\\UpgradeableHYAXRewards.sol:20",
        "version": {
          "withMetadata": "c0be99ae33ae78bcb9fb095f9ccbec81e28d46556641581e3b1af5d59c15509f",
          "withoutMetadata": "9c150f8c8823af7cb9da9655c34969a907d91f3f85ed8d0187b473b7490c62f2",
          "linkedWithoutMetadata": "9c150f8c8823af7cb9da9655c34969a907d91f3f85ed8d0187b473b7490c62f2"
        },
        "inherit": [
          "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "addWalletToWhitelist(address,bool,uint256)",
          "updateWhitelistStatus(address,bool)",
          "updateBlacklistStatus(address,bool)",
          "fundSmartContract(uint8,uint256)",
          "withdrawGrowthTokens()",
          "withdrawTeamTokens()",
          "calculateYearForTeamTokens()",
          "updateRewardsBatch(address[],uint256[])",
          "updateRewardsSingle(address,uint256)",
          "withdrawRewardTokens()",
          "withdrawTokensToBurn(uint8,uint256)",
          "updateWhiteListerAddress(address)",
          "updateRewardsUpdaterAddress(address)",
          "updateHyaxTokenAddress(address)",
          "pause()",
          "unpause()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UpgradeableHYAXRewards",
            "src": "contracts\\UpgradeableHYAXRewards.sol:210"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "_paused",
              "offset": 20,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:37"
            },
            {
              "label": "hyaxTokenAddress",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:108"
            },
            {
              "label": "hyaxToken",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(ERC20TokenInterface)403",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:110"
            },
            {
              "label": "growthTokensFunded",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:122"
            },
            {
              "label": "growthTokensWithdrawn",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:124"
            },
            {
              "label": "growthTokensInSmartContract",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:126"
            },
            {
              "label": "growthTokensLastWithdrawalTime",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:128"
            },
            {
              "label": "growthTokensStartFundingTime",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:130"
            },
            {
              "label": "growthTokensFundingStarted",
              "offset": 0,
              "slot": "9",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:132"
            },
            {
              "label": "teamTokensFunded",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:143"
            },
            {
              "label": "teamTokensWithdrawn",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:145"
            },
            {
              "label": "teamTokensInSmartContract",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:147"
            },
            {
              "label": "teamTokensLastWithdrawalTime",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:149"
            },
            {
              "label": "teamTokensStartFundingTime",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:151"
            },
            {
              "label": "teamTokensFundingStarted",
              "offset": 0,
              "slot": "15",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:153"
            },
            {
              "label": "rewardTokensFunded",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:166"
            },
            {
              "label": "rewardTokensDistributed",
              "offset": 0,
              "slot": "17",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:168"
            },
            {
              "label": "rewardTokensWithdrawn",
              "offset": 0,
              "slot": "18",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:170"
            },
            {
              "label": "rewardTokensInSmartContract",
              "offset": 0,
              "slot": "19",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:172"
            },
            {
              "label": "rewardTokensStartFundingTime",
              "offset": 0,
              "slot": "20",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:174"
            },
            {
              "label": "rewardTokensFundingStarted",
              "offset": 0,
              "slot": "21",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:176"
            },
            {
              "label": "whiteListerAddress",
              "offset": 1,
              "slot": "21",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:181"
            },
            {
              "label": "rewardsUpdaterAddress",
              "offset": 0,
              "slot": "22",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:183"
            },
            {
              "label": "wallets",
              "offset": 0,
              "slot": "23",
              "type": "t_mapping(t_address,t_struct(WalletData)630_storage)",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:207"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ERC20TokenInterface)403": {
              "label": "contract ERC20TokenInterface",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_struct(WalletData)630_storage)": {
              "label": "mapping(address => struct UpgradeableHYAXRewards.WalletData)",
              "numberOfBytes": "32"
            },
            "t_struct(WalletData)630_storage": {
              "label": "struct UpgradeableHYAXRewards.WalletData",
              "members": [
                {
                  "label": "hyaxHoldingAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "hyaxHoldingAmountAtWhitelistTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "totalHyaxRewardsAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "currentRewardsAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "rewardsWithdrawn",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "addedToWhitelistTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "tokenWithdrawalTimes",
                  "type": "t_uint8",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "lastRewardsWithdrawalTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "lastRewardsUpdateTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "isTeamWallet",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "isWhitelisted",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "9"
                },
                {
                  "label": "isBlacklisted",
                  "type": "t_bool",
                  "offset": 2,
                  "slot": "9"
                }
              ],
              "numberOfBytes": "320"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "hardhat/console.sol:console": {
        "src": "hardhat\\console.sol:4",
        "version": {
          "withMetadata": "b1be11c3bf90cff557541588c2ae5cd66dca02f69e0972ceeb9da182ee9131c5",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Pausable.sol:Pausable": {
        "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:17",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Pausable",
            "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:43"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_paused",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UpgradeableHYAXRewards.sol:ERC20TokenInterface": {
        "src": "contracts\\UpgradeableHYAXRewards.sol:13",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "balanceOf(address)",
          "symbol()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UpgradeableHYAXRewards.sol:UpgradeableHYAXRewards": {
        "src": "contracts\\UpgradeableHYAXRewards.sol:20",
        "version": {
          "withMetadata": "3ad6ea3ab48e75aa10946ee2a0f2aba12a8d260857274f2ef25733af8cf80bed",
          "withoutMetadata": "fa9a5ad64c857f041c6e2b28e86bd243838acaad71aec9e335fd7611dc1c8842",
          "linkedWithoutMetadata": "fa9a5ad64c857f041c6e2b28e86bd243838acaad71aec9e335fd7611dc1c8842"
        },
        "inherit": [
          "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "addWalletToWhitelist(address,bool,uint256)",
          "updateWhitelistStatus(address,bool)",
          "updateBlacklistStatus(address,bool)",
          "fundSmartContract(uint8,uint256)",
          "withdrawGrowthTokens()",
          "withdrawTeamTokens()",
          "calculateYearForTeamTokens()",
          "updateRewardsBatch(address[],uint256[])",
          "updateRewardsSingle(address,uint256)",
          "withdrawRewardTokens()",
          "withdrawTokensToBurn(uint8,uint256)",
          "updateWhiteListerAddress(address)",
          "updateRewardsUpdaterAddress(address)",
          "updateHyaxTokenAddress(address)",
          "pause()",
          "unpause()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UpgradeableHYAXRewards",
            "src": "contracts\\UpgradeableHYAXRewards.sol:210"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "_paused",
              "offset": 20,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:37"
            },
            {
              "label": "hyaxTokenAddress",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:108"
            },
            {
              "label": "hyaxToken",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(ERC20TokenInterface)403",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:110"
            },
            {
              "label": "growthTokensFunded",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:122"
            },
            {
              "label": "growthTokensWithdrawn",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:124"
            },
            {
              "label": "growthTokensInSmartContract",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:126"
            },
            {
              "label": "growthTokensLastWithdrawalTime",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:128"
            },
            {
              "label": "growthTokensStartFundingTime",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:130"
            },
            {
              "label": "growthTokensFundingStarted",
              "offset": 0,
              "slot": "9",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:132"
            },
            {
              "label": "teamTokensFunded",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:143"
            },
            {
              "label": "teamTokensWithdrawn",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:145"
            },
            {
              "label": "teamTokensInSmartContract",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:147"
            },
            {
              "label": "teamTokensLastWithdrawalTime",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:149"
            },
            {
              "label": "teamTokensStartFundingTime",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:151"
            },
            {
              "label": "teamTokensFundingStarted",
              "offset": 0,
              "slot": "15",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:153"
            },
            {
              "label": "rewardTokensFunded",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:166"
            },
            {
              "label": "rewardTokensDistributed",
              "offset": 0,
              "slot": "17",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:168"
            },
            {
              "label": "rewardTokensWithdrawn",
              "offset": 0,
              "slot": "18",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:170"
            },
            {
              "label": "rewardTokensInSmartContract",
              "offset": 0,
              "slot": "19",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:172"
            },
            {
              "label": "rewardTokensStartFundingTime",
              "offset": 0,
              "slot": "20",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:174"
            },
            {
              "label": "rewardTokensFundingStarted",
              "offset": 0,
              "slot": "21",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:176"
            },
            {
              "label": "whiteListerAddress",
              "offset": 1,
              "slot": "21",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:181"
            },
            {
              "label": "rewardsUpdaterAddress",
              "offset": 0,
              "slot": "22",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:183"
            },
            {
              "label": "wallets",
              "offset": 0,
              "slot": "23",
              "type": "t_mapping(t_address,t_struct(WalletData)632_storage)",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:207"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ERC20TokenInterface)403": {
              "label": "contract ERC20TokenInterface",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_struct(WalletData)632_storage)": {
              "label": "mapping(address => struct UpgradeableHYAXRewards.WalletData)",
              "numberOfBytes": "32"
            },
            "t_struct(WalletData)632_storage": {
              "label": "struct UpgradeableHYAXRewards.WalletData",
              "members": [
                {
                  "label": "hyaxHoldingAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "hyaxHoldingAmountAtWhitelistTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "totalHyaxRewardsAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "currentRewardsAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "rewardsWithdrawn",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "addedToWhitelistTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "tokenWithdrawalTimes",
                  "type": "t_uint8",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "lastRewardsWithdrawalTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "lastRewardsUpdateTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "isTeamWallet",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "isWhitelisted",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "9"
                },
                {
                  "label": "isBlacklisted",
                  "type": "t_bool",
                  "offset": 2,
                  "slot": "9"
                }
              ],
              "numberOfBytes": "320"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "hardhat/console.sol:console": {
        "src": "hardhat\\console.sol:4",
        "version": {
          "withMetadata": "b1be11c3bf90cff557541588c2ae5cd66dca02f69e0972ceeb9da182ee9131c5",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Pausable.sol:Pausable": {
        "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:17",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Pausable",
            "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:43"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_paused",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UpgradeableHYAXRewards.sol:ERC20TokenInterface": {
        "src": "contracts\\UpgradeableHYAXRewards.sol:13",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "balanceOf(address)",
          "symbol()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UpgradeableHYAXRewards.sol:UpgradeableHYAXRewards": {
        "src": "contracts\\UpgradeableHYAXRewards.sol:20",
        "version": {
          "withMetadata": "a8598d4c8a2dddde573184df5e8621bae2a300b830b2cd8c6127dc1f944dca40",
          "withoutMetadata": "2c6ec423579cfc534ae1308d7f20852b23a30ae646e6a59204cf03c3a4c12307",
          "linkedWithoutMetadata": "2c6ec423579cfc534ae1308d7f20852b23a30ae646e6a59204cf03c3a4c12307"
        },
        "inherit": [
          "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "addWalletToWhitelist(address,bool,uint256)",
          "updateWhitelistStatus(address,bool)",
          "updateBlacklistStatus(address,bool)",
          "fundSmartContract(uint8,uint256)",
          "withdrawGrowthTokens()",
          "withdrawTeamTokens()",
          "calculateYearForTeamTokens()",
          "updateRewardsBatch(address[],uint256[])",
          "updateRewardsSingle(address,uint256)",
          "withdrawRewardTokens()",
          "withdrawTokensToBurn(uint8,uint256)",
          "updateWhiteListerAddress(address)",
          "updateRewardsUpdaterAddress(address)",
          "updateHyaxTokenAddress(address)",
          "pause()",
          "unpause()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UpgradeableHYAXRewards",
            "src": "contracts\\UpgradeableHYAXRewards.sol:210"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "_paused",
              "offset": 20,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:37"
            },
            {
              "label": "hyaxTokenAddress",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:108"
            },
            {
              "label": "hyaxToken",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(ERC20TokenInterface)403",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:110"
            },
            {
              "label": "growthTokensFunded",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:122"
            },
            {
              "label": "growthTokensWithdrawn",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:124"
            },
            {
              "label": "growthTokensInSmartContract",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:126"
            },
            {
              "label": "growthTokensLastWithdrawalTime",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:128"
            },
            {
              "label": "growthTokensStartFundingTime",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:130"
            },
            {
              "label": "growthTokensFundingStarted",
              "offset": 0,
              "slot": "9",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:132"
            },
            {
              "label": "teamTokensFunded",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:143"
            },
            {
              "label": "teamTokensWithdrawn",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:145"
            },
            {
              "label": "teamTokensInSmartContract",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:147"
            },
            {
              "label": "teamTokensLastWithdrawalTime",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:149"
            },
            {
              "label": "teamTokensStartFundingTime",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:151"
            },
            {
              "label": "teamTokensFundingStarted",
              "offset": 0,
              "slot": "15",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:153"
            },
            {
              "label": "rewardTokensFunded",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:166"
            },
            {
              "label": "rewardTokensDistributed",
              "offset": 0,
              "slot": "17",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:168"
            },
            {
              "label": "rewardTokensWithdrawn",
              "offset": 0,
              "slot": "18",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:170"
            },
            {
              "label": "rewardTokensInSmartContract",
              "offset": 0,
              "slot": "19",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:172"
            },
            {
              "label": "rewardTokensStartFundingTime",
              "offset": 0,
              "slot": "20",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:174"
            },
            {
              "label": "rewardTokensFundingStarted",
              "offset": 0,
              "slot": "21",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:176"
            },
            {
              "label": "whiteListerAddress",
              "offset": 1,
              "slot": "21",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:181"
            },
            {
              "label": "rewardsUpdaterAddress",
              "offset": 0,
              "slot": "22",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:183"
            },
            {
              "label": "wallets",
              "offset": 0,
              "slot": "23",
              "type": "t_mapping(t_address,t_struct(WalletData)632_storage)",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:207"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ERC20TokenInterface)403": {
              "label": "contract ERC20TokenInterface",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_struct(WalletData)632_storage)": {
              "label": "mapping(address => struct UpgradeableHYAXRewards.WalletData)",
              "numberOfBytes": "32"
            },
            "t_struct(WalletData)632_storage": {
              "label": "struct UpgradeableHYAXRewards.WalletData",
              "members": [
                {
                  "label": "hyaxHoldingAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "hyaxHoldingAmountAtWhitelistTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "totalHyaxRewardsAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "currentRewardsAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "rewardsWithdrawn",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "addedToWhitelistTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "tokenWithdrawalTimes",
                  "type": "t_uint8",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "lastRewardsWithdrawalTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "lastRewardsUpdateTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "isTeamWallet",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "isWhitelisted",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "9"
                },
                {
                  "label": "isBlacklisted",
                  "type": "t_bool",
                  "offset": 2,
                  "slot": "9"
                }
              ],
              "numberOfBytes": "320"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "hardhat/console.sol:console": {
        "src": "hardhat\\console.sol:4",
        "version": {
          "withMetadata": "b1be11c3bf90cff557541588c2ae5cd66dca02f69e0972ceeb9da182ee9131c5",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Pausable.sol:Pausable": {
        "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:17",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Pausable",
            "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:43"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_paused",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UpgradeableHYAXRewards.sol:ERC20TokenInterface": {
        "src": "contracts\\UpgradeableHYAXRewards.sol:13",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "balanceOf(address)",
          "symbol()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UpgradeableHYAXRewards.sol:UpgradeableHYAXRewards": {
        "src": "contracts\\UpgradeableHYAXRewards.sol:20",
        "version": {
          "withMetadata": "662523fe45bceb2de74dbb5f1ee3bf7c6ad80dc50fd627a71744f9f07e33e541",
          "withoutMetadata": "4d26f2dc6b412d6d96fdd34b3ceb0ba1eb2e26e974af375b5402a0a1101451d1",
          "linkedWithoutMetadata": "4d26f2dc6b412d6d96fdd34b3ceb0ba1eb2e26e974af375b5402a0a1101451d1"
        },
        "inherit": [
          "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "hardhat/console.sol:console"
        ],
        "methods": [
          "(address)",
          "addWalletToWhitelist(address,bool,uint256)",
          "updateWhitelistStatus(address,bool)",
          "updateBlacklistStatus(address,bool)",
          "fundSmartContract(uint8,uint256)",
          "withdrawGrowthTokens()",
          "withdrawTeamTokens()",
          "calculateYearForTeamTokens()",
          "updateRewardsBatch(address[],uint256[])",
          "updateRewardsSingle(address,uint256)",
          "withdrawRewardTokens()",
          "withdrawTokensToBurn(uint8,uint256)",
          "updateWhiteListerAddress(address)",
          "updateRewardsUpdaterAddress(address)",
          "updateHyaxTokenAddress(address)",
          "pause()",
          "unpause()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UpgradeableHYAXRewards",
            "src": "contracts\\UpgradeableHYAXRewards.sol:210"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "_paused",
              "offset": 20,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:37"
            },
            {
              "label": "hyaxTokenAddress",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:108"
            },
            {
              "label": "hyaxToken",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(ERC20TokenInterface)403",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:110"
            },
            {
              "label": "growthTokensFunded",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:122"
            },
            {
              "label": "growthTokensWithdrawn",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:124"
            },
            {
              "label": "growthTokensInSmartContract",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:126"
            },
            {
              "label": "growthTokensLastWithdrawalTime",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:128"
            },
            {
              "label": "growthTokensStartFundingTime",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:130"
            },
            {
              "label": "growthTokensFundingStarted",
              "offset": 0,
              "slot": "9",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:132"
            },
            {
              "label": "teamTokensFunded",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:143"
            },
            {
              "label": "teamTokensWithdrawn",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:145"
            },
            {
              "label": "teamTokensInSmartContract",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:147"
            },
            {
              "label": "teamTokensLastWithdrawalTime",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:149"
            },
            {
              "label": "teamTokensStartFundingTime",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:151"
            },
            {
              "label": "teamTokensFundingStarted",
              "offset": 0,
              "slot": "15",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:153"
            },
            {
              "label": "rewardTokensFunded",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:166"
            },
            {
              "label": "rewardTokensDistributed",
              "offset": 0,
              "slot": "17",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:168"
            },
            {
              "label": "rewardTokensWithdrawn",
              "offset": 0,
              "slot": "18",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:170"
            },
            {
              "label": "rewardTokensInSmartContract",
              "offset": 0,
              "slot": "19",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:172"
            },
            {
              "label": "rewardTokensStartFundingTime",
              "offset": 0,
              "slot": "20",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:174"
            },
            {
              "label": "rewardTokensFundingStarted",
              "offset": 0,
              "slot": "21",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:176"
            },
            {
              "label": "whiteListerAddress",
              "offset": 1,
              "slot": "21",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:181"
            },
            {
              "label": "rewardsUpdaterAddress",
              "offset": 0,
              "slot": "22",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:183"
            },
            {
              "label": "wallets",
              "offset": 0,
              "slot": "23",
              "type": "t_mapping(t_address,t_struct(WalletData)632_storage)",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:207"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ERC20TokenInterface)403": {
              "label": "contract ERC20TokenInterface",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_struct(WalletData)632_storage)": {
              "label": "mapping(address => struct UpgradeableHYAXRewards.WalletData)",
              "numberOfBytes": "32"
            },
            "t_struct(WalletData)632_storage": {
              "label": "struct UpgradeableHYAXRewards.WalletData",
              "members": [
                {
                  "label": "hyaxHoldingAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "hyaxHoldingAmountAtWhitelistTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "totalHyaxRewardsAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "currentRewardsAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "rewardsWithdrawn",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "addedToWhitelistTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "tokenWithdrawalTimes",
                  "type": "t_uint8",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "lastRewardsWithdrawalTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "lastRewardsUpdateTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "isTeamWallet",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "isWhitelisted",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "9"
                },
                {
                  "label": "isBlacklisted",
                  "type": "t_bool",
                  "offset": 2,
                  "slot": "9"
                }
              ],
              "numberOfBytes": "320"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "hardhat/console.sol:console": {
        "src": "hardhat\\console.sol:4",
        "version": {
          "withMetadata": "b1be11c3bf90cff557541588c2ae5cd66dca02f69e0972ceeb9da182ee9131c5",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Pausable.sol:Pausable": {
        "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:17",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Pausable",
            "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:43"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_paused",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UpgradeableHYAXRewards.sol:ERC20TokenInterface": {
        "src": "contracts\\UpgradeableHYAXRewards.sol:13",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "balanceOf(address)",
          "symbol()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UpgradeableHYAXRewards.sol:UpgradeableHYAXRewards": {
        "src": "contracts\\UpgradeableHYAXRewards.sol:20",
        "version": {
          "withMetadata": "66a725a2ca4aea0b7a2b7a7c0ef9a520a64c9b2b31d66a939146b234b5e32d47",
          "withoutMetadata": "4d26f2dc6b412d6d96fdd34b3ceb0ba1eb2e26e974af375b5402a0a1101451d1",
          "linkedWithoutMetadata": "4d26f2dc6b412d6d96fdd34b3ceb0ba1eb2e26e974af375b5402a0a1101451d1"
        },
        "inherit": [
          "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "hardhat/console.sol:console"
        ],
        "methods": [
          "(address)",
          "addWalletToWhitelist(address,bool,uint256)",
          "updateWhitelistStatus(address,bool)",
          "updateBlacklistStatus(address,bool)",
          "fundSmartContract(uint8,uint256)",
          "withdrawGrowthTokens()",
          "withdrawTeamTokens()",
          "calculateYearForTeamTokens()",
          "updateRewardsBatch(address[],uint256[])",
          "updateRewardsSingle(address,uint256)",
          "withdrawRewardTokens()",
          "withdrawTokensToBurn(uint8,uint256)",
          "updateWhiteListerAddress(address)",
          "updateRewardsUpdaterAddress(address)",
          "updateHyaxTokenAddress(address)",
          "pause()",
          "unpause()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UpgradeableHYAXRewards",
            "src": "contracts\\UpgradeableHYAXRewards.sol:210"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "_paused",
              "offset": 20,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:37"
            },
            {
              "label": "hyaxTokenAddress",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:108"
            },
            {
              "label": "hyaxToken",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(ERC20TokenInterface)403",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:110"
            },
            {
              "label": "growthTokensFunded",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:122"
            },
            {
              "label": "growthTokensWithdrawn",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:124"
            },
            {
              "label": "growthTokensInSmartContract",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:126"
            },
            {
              "label": "growthTokensLastWithdrawalTime",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:128"
            },
            {
              "label": "growthTokensStartFundingTime",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:130"
            },
            {
              "label": "growthTokensFundingStarted",
              "offset": 0,
              "slot": "9",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:132"
            },
            {
              "label": "teamTokensFunded",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:143"
            },
            {
              "label": "teamTokensWithdrawn",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:145"
            },
            {
              "label": "teamTokensInSmartContract",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:147"
            },
            {
              "label": "teamTokensLastWithdrawalTime",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:149"
            },
            {
              "label": "teamTokensStartFundingTime",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:151"
            },
            {
              "label": "teamTokensFundingStarted",
              "offset": 0,
              "slot": "15",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:153"
            },
            {
              "label": "rewardTokensFunded",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:166"
            },
            {
              "label": "rewardTokensDistributed",
              "offset": 0,
              "slot": "17",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:168"
            },
            {
              "label": "rewardTokensWithdrawn",
              "offset": 0,
              "slot": "18",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:170"
            },
            {
              "label": "rewardTokensInSmartContract",
              "offset": 0,
              "slot": "19",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:172"
            },
            {
              "label": "rewardTokensStartFundingTime",
              "offset": 0,
              "slot": "20",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:174"
            },
            {
              "label": "rewardTokensFundingStarted",
              "offset": 0,
              "slot": "21",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:176"
            },
            {
              "label": "whiteListerAddress",
              "offset": 1,
              "slot": "21",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:181"
            },
            {
              "label": "rewardsUpdaterAddress",
              "offset": 0,
              "slot": "22",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:183"
            },
            {
              "label": "wallets",
              "offset": 0,
              "slot": "23",
              "type": "t_mapping(t_address,t_struct(WalletData)632_storage)",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:207"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ERC20TokenInterface)403": {
              "label": "contract ERC20TokenInterface",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_struct(WalletData)632_storage)": {
              "label": "mapping(address => struct UpgradeableHYAXRewards.WalletData)",
              "numberOfBytes": "32"
            },
            "t_struct(WalletData)632_storage": {
              "label": "struct UpgradeableHYAXRewards.WalletData",
              "members": [
                {
                  "label": "hyaxHoldingAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "hyaxHoldingAmountAtWhitelistTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "totalHyaxRewardsAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "currentRewardsAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "rewardsWithdrawn",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "addedToWhitelistTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "tokenWithdrawalTimes",
                  "type": "t_uint8",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "lastRewardsWithdrawalTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "lastRewardsUpdateTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "isTeamWallet",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "isWhitelisted",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "9"
                },
                {
                  "label": "isBlacklisted",
                  "type": "t_bool",
                  "offset": 2,
                  "slot": "9"
                }
              ],
              "numberOfBytes": "320"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "hardhat/console.sol:console": {
        "src": "hardhat\\console.sol:4",
        "version": {
          "withMetadata": "b1be11c3bf90cff557541588c2ae5cd66dca02f69e0972ceeb9da182ee9131c5",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Pausable.sol:Pausable": {
        "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:17",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Pausable",
            "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:43"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_paused",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UpgradeableHYAXRewards.sol:ERC20TokenInterface": {
        "src": "contracts\\UpgradeableHYAXRewards.sol:13",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "balanceOf(address)",
          "symbol()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UpgradeableHYAXRewards.sol:UpgradeableHYAXRewards": {
        "src": "contracts\\UpgradeableHYAXRewards.sol:20",
        "version": {
          "withMetadata": "f56352dbade640534aa5358a4678fd313a4d01c8018c5d52e5cdd04109757b84",
          "withoutMetadata": "4d26f2dc6b412d6d96fdd34b3ceb0ba1eb2e26e974af375b5402a0a1101451d1",
          "linkedWithoutMetadata": "4d26f2dc6b412d6d96fdd34b3ceb0ba1eb2e26e974af375b5402a0a1101451d1"
        },
        "inherit": [
          "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "hardhat/console.sol:console"
        ],
        "methods": [
          "(address)",
          "addWalletToWhitelist(address,bool,uint256)",
          "updateWhitelistStatus(address,bool)",
          "updateBlacklistStatus(address,bool)",
          "fundSmartContract(uint8,uint256)",
          "withdrawGrowthTokens()",
          "withdrawTeamTokens()",
          "calculateYearForTeamTokens()",
          "updateRewardsBatch(address[],uint256[])",
          "updateRewardsSingle(address,uint256)",
          "withdrawRewardTokens()",
          "withdrawTokensToBurn(uint8,uint256)",
          "updateWhiteListerAddress(address)",
          "updateRewardsUpdaterAddress(address)",
          "updateHyaxTokenAddress(address)",
          "pause()",
          "unpause()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UpgradeableHYAXRewards",
            "src": "contracts\\UpgradeableHYAXRewards.sol:210"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "_paused",
              "offset": 20,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:37"
            },
            {
              "label": "hyaxTokenAddress",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:108"
            },
            {
              "label": "hyaxToken",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(ERC20TokenInterface)403",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:110"
            },
            {
              "label": "growthTokensFunded",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:122"
            },
            {
              "label": "growthTokensWithdrawn",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:124"
            },
            {
              "label": "growthTokensInSmartContract",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:126"
            },
            {
              "label": "growthTokensLastWithdrawalTime",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:128"
            },
            {
              "label": "growthTokensStartFundingTime",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:130"
            },
            {
              "label": "growthTokensFundingStarted",
              "offset": 0,
              "slot": "9",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:132"
            },
            {
              "label": "teamTokensFunded",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:143"
            },
            {
              "label": "teamTokensWithdrawn",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:145"
            },
            {
              "label": "teamTokensInSmartContract",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:147"
            },
            {
              "label": "teamTokensLastWithdrawalTime",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:149"
            },
            {
              "label": "teamTokensStartFundingTime",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:151"
            },
            {
              "label": "teamTokensFundingStarted",
              "offset": 0,
              "slot": "15",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:153"
            },
            {
              "label": "rewardTokensFunded",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:166"
            },
            {
              "label": "rewardTokensDistributed",
              "offset": 0,
              "slot": "17",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:168"
            },
            {
              "label": "rewardTokensWithdrawn",
              "offset": 0,
              "slot": "18",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:170"
            },
            {
              "label": "rewardTokensInSmartContract",
              "offset": 0,
              "slot": "19",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:172"
            },
            {
              "label": "rewardTokensStartFundingTime",
              "offset": 0,
              "slot": "20",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:174"
            },
            {
              "label": "rewardTokensFundingStarted",
              "offset": 0,
              "slot": "21",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:176"
            },
            {
              "label": "whiteListerAddress",
              "offset": 1,
              "slot": "21",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:181"
            },
            {
              "label": "rewardsUpdaterAddress",
              "offset": 0,
              "slot": "22",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:183"
            },
            {
              "label": "wallets",
              "offset": 0,
              "slot": "23",
              "type": "t_mapping(t_address,t_struct(WalletData)632_storage)",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:207"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ERC20TokenInterface)403": {
              "label": "contract ERC20TokenInterface",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_struct(WalletData)632_storage)": {
              "label": "mapping(address => struct UpgradeableHYAXRewards.WalletData)",
              "numberOfBytes": "32"
            },
            "t_struct(WalletData)632_storage": {
              "label": "struct UpgradeableHYAXRewards.WalletData",
              "members": [
                {
                  "label": "hyaxHoldingAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "hyaxHoldingAmountAtWhitelistTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "totalHyaxRewardsAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "currentRewardsAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "rewardsWithdrawn",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "addedToWhitelistTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "tokenWithdrawalTimes",
                  "type": "t_uint8",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "lastRewardsWithdrawalTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "lastRewardsUpdateTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "isTeamWallet",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "isWhitelisted",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "9"
                },
                {
                  "label": "isBlacklisted",
                  "type": "t_bool",
                  "offset": 2,
                  "slot": "9"
                }
              ],
              "numberOfBytes": "320"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "hardhat/console.sol:console": {
        "src": "hardhat\\console.sol:4",
        "version": {
          "withMetadata": "b1be11c3bf90cff557541588c2ae5cd66dca02f69e0972ceeb9da182ee9131c5",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Pausable.sol:Pausable": {
        "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:17",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Pausable",
            "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:43"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_paused",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UpgradeableHYAXRewards.sol:ERC20TokenInterface": {
        "src": "contracts\\UpgradeableHYAXRewards.sol:13",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "balanceOf(address)",
          "symbol()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UpgradeableHYAXRewards.sol:UpgradeableHYAXRewards": {
        "src": "contracts\\UpgradeableHYAXRewards.sol:20",
        "version": {
          "withMetadata": "6ffca69c6c7b354d9a0c6c61e03e72159a11f7c0aea253f1344c8454055923e4",
          "withoutMetadata": "4d26f2dc6b412d6d96fdd34b3ceb0ba1eb2e26e974af375b5402a0a1101451d1",
          "linkedWithoutMetadata": "4d26f2dc6b412d6d96fdd34b3ceb0ba1eb2e26e974af375b5402a0a1101451d1"
        },
        "inherit": [
          "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "hardhat/console.sol:console"
        ],
        "methods": [
          "(address)",
          "addWalletToWhitelist(address,bool,uint256)",
          "updateWhitelistStatus(address,bool)",
          "updateBlacklistStatus(address,bool)",
          "fundSmartContract(uint8,uint256)",
          "withdrawGrowthTokens()",
          "withdrawTeamTokens()",
          "calculateYearForTeamTokens()",
          "updateRewardsBatch(address[],uint256[])",
          "updateRewardsSingle(address,uint256)",
          "withdrawRewardTokens()",
          "withdrawTokensToBurn(uint8,uint256)",
          "updateWhiteListerAddress(address)",
          "updateRewardsUpdaterAddress(address)",
          "updateHyaxTokenAddress(address)",
          "pause()",
          "unpause()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UpgradeableHYAXRewards",
            "src": "contracts\\UpgradeableHYAXRewards.sol:210"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "_paused",
              "offset": 20,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:37"
            },
            {
              "label": "hyaxTokenAddress",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:108"
            },
            {
              "label": "hyaxToken",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(ERC20TokenInterface)403",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:110"
            },
            {
              "label": "growthTokensFunded",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:122"
            },
            {
              "label": "growthTokensWithdrawn",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:124"
            },
            {
              "label": "growthTokensInSmartContract",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:126"
            },
            {
              "label": "growthTokensLastWithdrawalTime",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:128"
            },
            {
              "label": "growthTokensStartFundingTime",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:130"
            },
            {
              "label": "growthTokensFundingStarted",
              "offset": 0,
              "slot": "9",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:132"
            },
            {
              "label": "teamTokensFunded",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:143"
            },
            {
              "label": "teamTokensWithdrawn",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:145"
            },
            {
              "label": "teamTokensInSmartContract",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:147"
            },
            {
              "label": "teamTokensLastWithdrawalTime",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:149"
            },
            {
              "label": "teamTokensStartFundingTime",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:151"
            },
            {
              "label": "teamTokensFundingStarted",
              "offset": 0,
              "slot": "15",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:153"
            },
            {
              "label": "rewardTokensFunded",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:166"
            },
            {
              "label": "rewardTokensDistributed",
              "offset": 0,
              "slot": "17",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:168"
            },
            {
              "label": "rewardTokensWithdrawn",
              "offset": 0,
              "slot": "18",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:170"
            },
            {
              "label": "rewardTokensInSmartContract",
              "offset": 0,
              "slot": "19",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:172"
            },
            {
              "label": "rewardTokensStartFundingTime",
              "offset": 0,
              "slot": "20",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:174"
            },
            {
              "label": "rewardTokensFundingStarted",
              "offset": 0,
              "slot": "21",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:176"
            },
            {
              "label": "whiteListerAddress",
              "offset": 1,
              "slot": "21",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:181"
            },
            {
              "label": "rewardsUpdaterAddress",
              "offset": 0,
              "slot": "22",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:183"
            },
            {
              "label": "wallets",
              "offset": 0,
              "slot": "23",
              "type": "t_mapping(t_address,t_struct(WalletData)632_storage)",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:207"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ERC20TokenInterface)403": {
              "label": "contract ERC20TokenInterface",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_struct(WalletData)632_storage)": {
              "label": "mapping(address => struct UpgradeableHYAXRewards.WalletData)",
              "numberOfBytes": "32"
            },
            "t_struct(WalletData)632_storage": {
              "label": "struct UpgradeableHYAXRewards.WalletData",
              "members": [
                {
                  "label": "hyaxHoldingAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "hyaxHoldingAmountAtWhitelistTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "totalHyaxRewardsAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "currentRewardsAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "rewardsWithdrawn",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "addedToWhitelistTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "tokenWithdrawalTimes",
                  "type": "t_uint8",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "lastRewardsWithdrawalTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "lastRewardsUpdateTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "isTeamWallet",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "isWhitelisted",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "9"
                },
                {
                  "label": "isBlacklisted",
                  "type": "t_bool",
                  "offset": 2,
                  "slot": "9"
                }
              ],
              "numberOfBytes": "320"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "hardhat/console.sol:console": {
        "src": "hardhat\\console.sol:4",
        "version": {
          "withMetadata": "b1be11c3bf90cff557541588c2ae5cd66dca02f69e0972ceeb9da182ee9131c5",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Pausable.sol:Pausable": {
        "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:17",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Pausable",
            "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:43"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_paused",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UpgradeableHYAXRewards.sol:ERC20TokenInterface": {
        "src": "contracts\\UpgradeableHYAXRewards.sol:13",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "balanceOf(address)",
          "symbol()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UpgradeableHYAXRewards.sol:UpgradeableHYAXRewards": {
        "src": "contracts\\UpgradeableHYAXRewards.sol:20",
        "version": {
          "withMetadata": "98f88e568fc51c81f4d536c55d9bf3b267918073d3ce163950e94f38c8ff25cc",
          "withoutMetadata": "9528b5b7111b7f1be032f4de20488538c771abc54519d5ab4c87cbb9c2c6826b",
          "linkedWithoutMetadata": "9528b5b7111b7f1be032f4de20488538c771abc54519d5ab4c87cbb9c2c6826b"
        },
        "inherit": [
          "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "hardhat/console.sol:console"
        ],
        "methods": [
          "(address)",
          "addWalletToWhitelist(address,bool,uint256)",
          "updateWhitelistStatus(address,bool)",
          "updateBlacklistStatus(address,bool)",
          "fundSmartContract(uint8,uint256)",
          "withdrawGrowthTokens()",
          "withdrawTeamTokens()",
          "calculateYearForTeamTokens()",
          "updateRewardsBatch(address[],uint256[])",
          "updateRewardsSingle(address,uint256)",
          "withdrawRewardTokens()",
          "withdrawTokensToBurn(uint8,uint256)",
          "updateWhiteListerAddress(address)",
          "updateRewardsUpdaterAddress(address)",
          "updateHyaxTokenAddress(address)",
          "pause()",
          "unpause()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UpgradeableHYAXRewards",
            "src": "contracts\\UpgradeableHYAXRewards.sol:210"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "_paused",
              "offset": 20,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:37"
            },
            {
              "label": "hyaxTokenAddress",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:108"
            },
            {
              "label": "hyaxToken",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(ERC20TokenInterface)403",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:110"
            },
            {
              "label": "growthTokensFunded",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:122"
            },
            {
              "label": "growthTokensWithdrawn",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:124"
            },
            {
              "label": "growthTokensInSmartContract",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:126"
            },
            {
              "label": "growthTokensLastWithdrawalTime",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:128"
            },
            {
              "label": "growthTokensStartFundingTime",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:130"
            },
            {
              "label": "growthTokensFundingStarted",
              "offset": 0,
              "slot": "9",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:132"
            },
            {
              "label": "teamTokensFunded",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:143"
            },
            {
              "label": "teamTokensWithdrawn",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:145"
            },
            {
              "label": "teamTokensInSmartContract",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:147"
            },
            {
              "label": "teamTokensLastWithdrawalTime",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:149"
            },
            {
              "label": "teamTokensStartFundingTime",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:151"
            },
            {
              "label": "teamTokensFundingStarted",
              "offset": 0,
              "slot": "15",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:153"
            },
            {
              "label": "rewardTokensFunded",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:166"
            },
            {
              "label": "rewardTokensDistributed",
              "offset": 0,
              "slot": "17",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:168"
            },
            {
              "label": "rewardTokensWithdrawn",
              "offset": 0,
              "slot": "18",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:170"
            },
            {
              "label": "rewardTokensInSmartContract",
              "offset": 0,
              "slot": "19",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:172"
            },
            {
              "label": "rewardTokensStartFundingTime",
              "offset": 0,
              "slot": "20",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:174"
            },
            {
              "label": "rewardTokensFundingStarted",
              "offset": 0,
              "slot": "21",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:176"
            },
            {
              "label": "whiteListerAddress",
              "offset": 1,
              "slot": "21",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:181"
            },
            {
              "label": "rewardsUpdaterAddress",
              "offset": 0,
              "slot": "22",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:183"
            },
            {
              "label": "wallets",
              "offset": 0,
              "slot": "23",
              "type": "t_mapping(t_address,t_struct(WalletData)632_storage)",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:207"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ERC20TokenInterface)403": {
              "label": "contract ERC20TokenInterface",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_struct(WalletData)632_storage)": {
              "label": "mapping(address => struct UpgradeableHYAXRewards.WalletData)",
              "numberOfBytes": "32"
            },
            "t_struct(WalletData)632_storage": {
              "label": "struct UpgradeableHYAXRewards.WalletData",
              "members": [
                {
                  "label": "hyaxHoldingAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "hyaxHoldingAmountAtWhitelistTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "totalHyaxRewardsAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "currentRewardsAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "rewardsWithdrawn",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "addedToWhitelistTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "tokenWithdrawalTimes",
                  "type": "t_uint8",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "lastRewardsWithdrawalTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "lastRewardsUpdateTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "isTeamWallet",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "isWhitelisted",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "9"
                },
                {
                  "label": "isBlacklisted",
                  "type": "t_bool",
                  "offset": 2,
                  "slot": "9"
                }
              ],
              "numberOfBytes": "320"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "hardhat/console.sol:console": {
        "src": "hardhat\\console.sol:4",
        "version": {
          "withMetadata": "b1be11c3bf90cff557541588c2ae5cd66dca02f69e0972ceeb9da182ee9131c5",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Pausable.sol:Pausable": {
        "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:17",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Pausable",
            "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:43"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_paused",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UpgradeableHYAXRewards.sol:ERC20TokenInterface": {
        "src": "contracts\\UpgradeableHYAXRewards.sol:13",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "balanceOf(address)",
          "symbol()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UpgradeableHYAXRewards.sol:UpgradeableHYAXRewards": {
        "src": "contracts\\UpgradeableHYAXRewards.sol:20",
        "version": {
          "withMetadata": "7f963d3417570794bf255892aa282e7be55e8a8eb76648efd69a497eb5668194",
          "withoutMetadata": "4d26f2dc6b412d6d96fdd34b3ceb0ba1eb2e26e974af375b5402a0a1101451d1",
          "linkedWithoutMetadata": "4d26f2dc6b412d6d96fdd34b3ceb0ba1eb2e26e974af375b5402a0a1101451d1"
        },
        "inherit": [
          "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "hardhat/console.sol:console"
        ],
        "methods": [
          "(address)",
          "addWalletToWhitelist(address,bool,uint256)",
          "updateWhitelistStatus(address,bool)",
          "updateBlacklistStatus(address,bool)",
          "fundSmartContract(uint8,uint256)",
          "withdrawGrowthTokens()",
          "withdrawTeamTokens()",
          "calculateYearForTeamTokens()",
          "updateRewardsBatch(address[],uint256[])",
          "updateRewardsSingle(address,uint256)",
          "withdrawRewardTokens()",
          "withdrawTokensToBurn(uint8,uint256)",
          "updateWhiteListerAddress(address)",
          "updateRewardsUpdaterAddress(address)",
          "updateHyaxTokenAddress(address)",
          "pause()",
          "unpause()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UpgradeableHYAXRewards",
            "src": "contracts\\UpgradeableHYAXRewards.sol:210"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "_paused",
              "offset": 20,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:37"
            },
            {
              "label": "hyaxTokenAddress",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:108"
            },
            {
              "label": "hyaxToken",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(ERC20TokenInterface)403",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:110"
            },
            {
              "label": "growthTokensFunded",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:122"
            },
            {
              "label": "growthTokensWithdrawn",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:124"
            },
            {
              "label": "growthTokensInSmartContract",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:126"
            },
            {
              "label": "growthTokensLastWithdrawalTime",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:128"
            },
            {
              "label": "growthTokensStartFundingTime",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:130"
            },
            {
              "label": "growthTokensFundingStarted",
              "offset": 0,
              "slot": "9",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:132"
            },
            {
              "label": "teamTokensFunded",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:143"
            },
            {
              "label": "teamTokensWithdrawn",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:145"
            },
            {
              "label": "teamTokensInSmartContract",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:147"
            },
            {
              "label": "teamTokensLastWithdrawalTime",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:149"
            },
            {
              "label": "teamTokensStartFundingTime",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:151"
            },
            {
              "label": "teamTokensFundingStarted",
              "offset": 0,
              "slot": "15",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:153"
            },
            {
              "label": "rewardTokensFunded",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:166"
            },
            {
              "label": "rewardTokensDistributed",
              "offset": 0,
              "slot": "17",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:168"
            },
            {
              "label": "rewardTokensWithdrawn",
              "offset": 0,
              "slot": "18",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:170"
            },
            {
              "label": "rewardTokensInSmartContract",
              "offset": 0,
              "slot": "19",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:172"
            },
            {
              "label": "rewardTokensStartFundingTime",
              "offset": 0,
              "slot": "20",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:174"
            },
            {
              "label": "rewardTokensFundingStarted",
              "offset": 0,
              "slot": "21",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:176"
            },
            {
              "label": "whiteListerAddress",
              "offset": 1,
              "slot": "21",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:181"
            },
            {
              "label": "rewardsUpdaterAddress",
              "offset": 0,
              "slot": "22",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:183"
            },
            {
              "label": "wallets",
              "offset": 0,
              "slot": "23",
              "type": "t_mapping(t_address,t_struct(WalletData)632_storage)",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:207"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ERC20TokenInterface)403": {
              "label": "contract ERC20TokenInterface",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_struct(WalletData)632_storage)": {
              "label": "mapping(address => struct UpgradeableHYAXRewards.WalletData)",
              "numberOfBytes": "32"
            },
            "t_struct(WalletData)632_storage": {
              "label": "struct UpgradeableHYAXRewards.WalletData",
              "members": [
                {
                  "label": "hyaxHoldingAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "hyaxHoldingAmountAtWhitelistTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "totalHyaxRewardsAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "currentRewardsAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "rewardsWithdrawn",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "addedToWhitelistTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "tokenWithdrawalTimes",
                  "type": "t_uint8",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "lastRewardsWithdrawalTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "lastRewardsUpdateTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "isTeamWallet",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "isWhitelisted",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "9"
                },
                {
                  "label": "isBlacklisted",
                  "type": "t_bool",
                  "offset": 2,
                  "slot": "9"
                }
              ],
              "numberOfBytes": "320"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "hardhat/console.sol:console": {
        "src": "hardhat\\console.sol:4",
        "version": {
          "withMetadata": "b1be11c3bf90cff557541588c2ae5cd66dca02f69e0972ceeb9da182ee9131c5",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Pausable.sol:Pausable": {
        "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:17",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Pausable",
            "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:43"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_paused",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UpgradeableHYAXRewards.sol:ERC20TokenInterface": {
        "src": "contracts\\UpgradeableHYAXRewards.sol:13",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "balanceOf(address)",
          "symbol()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UpgradeableHYAXRewards.sol:UpgradeableHYAXRewards": {
        "src": "contracts\\UpgradeableHYAXRewards.sol:20",
        "version": {
          "withMetadata": "5a13665881ffe4664980081c2d156f34e0af5d418b0d6d5c4e4fc931a532e56a",
          "withoutMetadata": "55e87c64e5159405609481609e6ccbc5377ae4b1235809c4ebd89bdb5f5aa4e3",
          "linkedWithoutMetadata": "55e87c64e5159405609481609e6ccbc5377ae4b1235809c4ebd89bdb5f5aa4e3"
        },
        "inherit": [
          "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "hardhat/console.sol:console"
        ],
        "methods": [
          "(address)",
          "addWalletToWhitelist(address,bool,uint256)",
          "updateWhitelistStatus(address,bool)",
          "updateBlacklistStatus(address,bool)",
          "fundSmartContract(uint8,uint256)",
          "withdrawGrowthTokens()",
          "withdrawTeamTokens()",
          "calculateYearForTeamTokens()",
          "updateRewardsBatch(address[],uint256[])",
          "updateRewardsSingle(address,uint256)",
          "withdrawRewardTokens()",
          "withdrawTokensToBurn(uint8,uint256)",
          "updateWhiteListerAddress(address)",
          "updateRewardsUpdaterAddress(address)",
          "updateHyaxTokenAddress(address)",
          "pause()",
          "unpause()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UpgradeableHYAXRewards",
            "src": "contracts\\UpgradeableHYAXRewards.sol:210"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "_paused",
              "offset": 20,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:37"
            },
            {
              "label": "hyaxTokenAddress",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:108"
            },
            {
              "label": "hyaxToken",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(ERC20TokenInterface)403",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:110"
            },
            {
              "label": "growthTokensFunded",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:122"
            },
            {
              "label": "growthTokensWithdrawn",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:124"
            },
            {
              "label": "growthTokensInSmartContract",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:126"
            },
            {
              "label": "growthTokensLastWithdrawalTime",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:128"
            },
            {
              "label": "growthTokensStartFundingTime",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:130"
            },
            {
              "label": "growthTokensFundingStarted",
              "offset": 0,
              "slot": "9",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:132"
            },
            {
              "label": "teamTokensFunded",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:143"
            },
            {
              "label": "teamTokensWithdrawn",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:145"
            },
            {
              "label": "teamTokensInSmartContract",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:147"
            },
            {
              "label": "teamTokensLastWithdrawalTime",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:149"
            },
            {
              "label": "teamTokensStartFundingTime",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:151"
            },
            {
              "label": "teamTokensFundingStarted",
              "offset": 0,
              "slot": "15",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:153"
            },
            {
              "label": "rewardTokensFunded",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:166"
            },
            {
              "label": "rewardTokensDistributed",
              "offset": 0,
              "slot": "17",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:168"
            },
            {
              "label": "rewardTokensWithdrawn",
              "offset": 0,
              "slot": "18",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:170"
            },
            {
              "label": "rewardTokensInSmartContract",
              "offset": 0,
              "slot": "19",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:172"
            },
            {
              "label": "rewardTokensStartFundingTime",
              "offset": 0,
              "slot": "20",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:174"
            },
            {
              "label": "rewardTokensFundingStarted",
              "offset": 0,
              "slot": "21",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:176"
            },
            {
              "label": "whiteListerAddress",
              "offset": 1,
              "slot": "21",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:181"
            },
            {
              "label": "rewardsUpdaterAddress",
              "offset": 0,
              "slot": "22",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:183"
            },
            {
              "label": "wallets",
              "offset": 0,
              "slot": "23",
              "type": "t_mapping(t_address,t_struct(WalletData)632_storage)",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:207"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ERC20TokenInterface)403": {
              "label": "contract ERC20TokenInterface",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_struct(WalletData)632_storage)": {
              "label": "mapping(address => struct UpgradeableHYAXRewards.WalletData)",
              "numberOfBytes": "32"
            },
            "t_struct(WalletData)632_storage": {
              "label": "struct UpgradeableHYAXRewards.WalletData",
              "members": [
                {
                  "label": "hyaxHoldingAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "hyaxHoldingAmountAtWhitelistTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "totalHyaxRewardsAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "currentRewardsAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "rewardsWithdrawn",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "addedToWhitelistTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "tokenWithdrawalTimes",
                  "type": "t_uint8",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "lastRewardsWithdrawalTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "lastRewardsUpdateTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "isTeamWallet",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "isWhitelisted",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "9"
                },
                {
                  "label": "isBlacklisted",
                  "type": "t_bool",
                  "offset": 2,
                  "slot": "9"
                }
              ],
              "numberOfBytes": "320"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "hardhat/console.sol:console": {
        "src": "hardhat\\console.sol:4",
        "version": {
          "withMetadata": "b1be11c3bf90cff557541588c2ae5cd66dca02f69e0972ceeb9da182ee9131c5",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Pausable.sol:Pausable": {
        "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:17",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Pausable",
            "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:43"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_paused",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UpgradeableHYAXRewards.sol:ERC20TokenInterface": {
        "src": "contracts\\UpgradeableHYAXRewards.sol:13",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "balanceOf(address)",
          "symbol()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UpgradeableHYAXRewards.sol:UpgradeableHYAXRewards": {
        "src": "contracts\\UpgradeableHYAXRewards.sol:20",
        "version": {
          "withMetadata": "9143d94941a3931fd30f57699922fd5da0aa729eff593fe53dc42ea5e1e03c6c",
          "withoutMetadata": "0c07de13906663ea5c949760ae7598d3645735f604fd024f086f4052dbd6f0d8",
          "linkedWithoutMetadata": "0c07de13906663ea5c949760ae7598d3645735f604fd024f086f4052dbd6f0d8"
        },
        "inherit": [
          "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "hardhat/console.sol:console"
        ],
        "methods": [
          "(address)",
          "addWalletToWhitelist(address,bool,uint256)",
          "updateWhitelistStatus(address,bool)",
          "updateBlacklistStatus(address,bool)",
          "fundSmartContract(uint8,uint256)",
          "withdrawGrowthTokens()",
          "withdrawTeamTokens()",
          "calculateYearForTeamTokens()",
          "updateRewardsBatch(address[],uint256[])",
          "updateRewardsSingle(address,uint256)",
          "withdrawRewardTokens()",
          "withdrawTokensToBurn(uint8,uint256)",
          "updateWhiteListerAddress(address)",
          "updateRewardsUpdaterAddress(address)",
          "updateHyaxTokenAddress(address)",
          "pause()",
          "unpause()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UpgradeableHYAXRewards",
            "src": "contracts\\UpgradeableHYAXRewards.sol:210"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "_paused",
              "offset": 20,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:37"
            },
            {
              "label": "hyaxTokenAddress",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:108"
            },
            {
              "label": "hyaxToken",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(ERC20TokenInterface)403",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:110"
            },
            {
              "label": "growthTokensFunded",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:122"
            },
            {
              "label": "growthTokensWithdrawn",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:124"
            },
            {
              "label": "growthTokensInSmartContract",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:126"
            },
            {
              "label": "growthTokensLastWithdrawalTime",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:128"
            },
            {
              "label": "growthTokensStartFundingTime",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:130"
            },
            {
              "label": "growthTokensFundingStarted",
              "offset": 0,
              "slot": "9",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:132"
            },
            {
              "label": "teamTokensFunded",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:143"
            },
            {
              "label": "teamTokensWithdrawn",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:145"
            },
            {
              "label": "teamTokensInSmartContract",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:147"
            },
            {
              "label": "teamTokensLastWithdrawalTime",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:149"
            },
            {
              "label": "teamTokensStartFundingTime",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:151"
            },
            {
              "label": "teamTokensFundingStarted",
              "offset": 0,
              "slot": "15",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:153"
            },
            {
              "label": "rewardTokensFunded",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:166"
            },
            {
              "label": "rewardTokensDistributed",
              "offset": 0,
              "slot": "17",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:168"
            },
            {
              "label": "rewardTokensWithdrawn",
              "offset": 0,
              "slot": "18",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:170"
            },
            {
              "label": "rewardTokensInSmartContract",
              "offset": 0,
              "slot": "19",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:172"
            },
            {
              "label": "rewardTokensStartFundingTime",
              "offset": 0,
              "slot": "20",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:174"
            },
            {
              "label": "rewardTokensFundingStarted",
              "offset": 0,
              "slot": "21",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:176"
            },
            {
              "label": "whiteListerAddress",
              "offset": 1,
              "slot": "21",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:181"
            },
            {
              "label": "rewardsUpdaterAddress",
              "offset": 0,
              "slot": "22",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:183"
            },
            {
              "label": "wallets",
              "offset": 0,
              "slot": "23",
              "type": "t_mapping(t_address,t_struct(WalletData)632_storage)",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:207"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ERC20TokenInterface)403": {
              "label": "contract ERC20TokenInterface",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_struct(WalletData)632_storage)": {
              "label": "mapping(address => struct UpgradeableHYAXRewards.WalletData)",
              "numberOfBytes": "32"
            },
            "t_struct(WalletData)632_storage": {
              "label": "struct UpgradeableHYAXRewards.WalletData",
              "members": [
                {
                  "label": "hyaxHoldingAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "hyaxHoldingAmountAtWhitelistTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "totalHyaxRewardsAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "currentRewardsAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "rewardsWithdrawn",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "addedToWhitelistTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "tokenWithdrawalTimes",
                  "type": "t_uint8",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "lastRewardsWithdrawalTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "lastRewardsUpdateTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "isTeamWallet",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "isWhitelisted",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "9"
                },
                {
                  "label": "isBlacklisted",
                  "type": "t_bool",
                  "offset": 2,
                  "slot": "9"
                }
              ],
              "numberOfBytes": "320"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "hardhat/console.sol:console": {
        "src": "hardhat\\console.sol:4",
        "version": {
          "withMetadata": "b1be11c3bf90cff557541588c2ae5cd66dca02f69e0972ceeb9da182ee9131c5",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Pausable.sol:Pausable": {
        "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:17",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Pausable",
            "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:43"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_paused",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UpgradeableHYAXRewards.sol:ERC20TokenInterface": {
        "src": "contracts\\UpgradeableHYAXRewards.sol:13",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "balanceOf(address)",
          "symbol()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UpgradeableHYAXRewards.sol:UpgradeableHYAXRewards": {
        "src": "contracts\\UpgradeableHYAXRewards.sol:20",
        "version": {
          "withMetadata": "2700c45f31c75939786ad8eac1da5ab874d3c27ab478da6d3c45b92f365ccc9e",
          "withoutMetadata": "b47272e44b464ae48d228531d300518f8f8810f0d7033964b0cd47b7b21f644e",
          "linkedWithoutMetadata": "b47272e44b464ae48d228531d300518f8f8810f0d7033964b0cd47b7b21f644e"
        },
        "inherit": [
          "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "hardhat/console.sol:console"
        ],
        "methods": [
          "(address)",
          "addWalletToWhitelist(address,bool,uint256)",
          "updateWhitelistStatus(address,bool)",
          "updateBlacklistStatus(address,bool)",
          "fundSmartContract(uint8,uint256)",
          "withdrawGrowthTokens()",
          "withdrawTeamTokens()",
          "calculateYearForTeamTokens()",
          "updateRewardsBatch(address[],uint256[])",
          "updateRewardsSingle(address,uint256)",
          "withdrawRewardTokens()",
          "withdrawTokensToBurn(uint8,uint256)",
          "updateWhiteListerAddress(address)",
          "updateRewardsUpdaterAddress(address)",
          "updateHyaxTokenAddress(address)",
          "pause()",
          "unpause()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UpgradeableHYAXRewards",
            "src": "contracts\\UpgradeableHYAXRewards.sol:210"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "_paused",
              "offset": 20,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:37"
            },
            {
              "label": "hyaxTokenAddress",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:108"
            },
            {
              "label": "hyaxToken",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(ERC20TokenInterface)403",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:110"
            },
            {
              "label": "growthTokensFunded",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:122"
            },
            {
              "label": "growthTokensWithdrawn",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:124"
            },
            {
              "label": "growthTokensInSmartContract",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:126"
            },
            {
              "label": "growthTokensLastWithdrawalTime",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:128"
            },
            {
              "label": "growthTokensStartFundingTime",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:130"
            },
            {
              "label": "growthTokensFundingStarted",
              "offset": 0,
              "slot": "9",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:132"
            },
            {
              "label": "teamTokensFunded",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:143"
            },
            {
              "label": "teamTokensWithdrawn",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:145"
            },
            {
              "label": "teamTokensInSmartContract",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:147"
            },
            {
              "label": "teamTokensLastWithdrawalTime",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:149"
            },
            {
              "label": "teamTokensStartFundingTime",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:151"
            },
            {
              "label": "teamTokensFundingStarted",
              "offset": 0,
              "slot": "15",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:153"
            },
            {
              "label": "rewardTokensFunded",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:166"
            },
            {
              "label": "rewardTokensDistributed",
              "offset": 0,
              "slot": "17",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:168"
            },
            {
              "label": "rewardTokensWithdrawn",
              "offset": 0,
              "slot": "18",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:170"
            },
            {
              "label": "rewardTokensInSmartContract",
              "offset": 0,
              "slot": "19",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:172"
            },
            {
              "label": "rewardTokensStartFundingTime",
              "offset": 0,
              "slot": "20",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:174"
            },
            {
              "label": "rewardTokensFundingStarted",
              "offset": 0,
              "slot": "21",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:176"
            },
            {
              "label": "whiteListerAddress",
              "offset": 1,
              "slot": "21",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:181"
            },
            {
              "label": "rewardsUpdaterAddress",
              "offset": 0,
              "slot": "22",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:183"
            },
            {
              "label": "wallets",
              "offset": 0,
              "slot": "23",
              "type": "t_mapping(t_address,t_struct(WalletData)632_storage)",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:207"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ERC20TokenInterface)403": {
              "label": "contract ERC20TokenInterface",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_struct(WalletData)632_storage)": {
              "label": "mapping(address => struct UpgradeableHYAXRewards.WalletData)",
              "numberOfBytes": "32"
            },
            "t_struct(WalletData)632_storage": {
              "label": "struct UpgradeableHYAXRewards.WalletData",
              "members": [
                {
                  "label": "hyaxHoldingAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "hyaxHoldingAmountAtWhitelistTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "totalHyaxRewardsAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "currentRewardsAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "rewardsWithdrawn",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "addedToWhitelistTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "tokenWithdrawalTimes",
                  "type": "t_uint8",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "lastRewardsWithdrawalTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "lastRewardsUpdateTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "isTeamWallet",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "isWhitelisted",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "9"
                },
                {
                  "label": "isBlacklisted",
                  "type": "t_bool",
                  "offset": 2,
                  "slot": "9"
                }
              ],
              "numberOfBytes": "320"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "hardhat/console.sol:console": {
        "src": "hardhat\\console.sol:4",
        "version": {
          "withMetadata": "b1be11c3bf90cff557541588c2ae5cd66dca02f69e0972ceeb9da182ee9131c5",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Pausable.sol:Pausable": {
        "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:17",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Pausable",
            "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:43"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_paused",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UpgradeableHYAXRewards.sol:ERC20TokenInterface": {
        "src": "contracts\\UpgradeableHYAXRewards.sol:13",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "balanceOf(address)",
          "symbol()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UpgradeableHYAXRewards.sol:UpgradeableHYAXRewards": {
        "src": "contracts\\UpgradeableHYAXRewards.sol:20",
        "version": {
          "withMetadata": "c2901619d9765f187bc27d7056a0021c4167e67c57a856879c00b018a25060d6",
          "withoutMetadata": "d8735fbe3a09967e64dd11cfdf531e989ace4a362a4f6b6ec8e3475f4262e06f",
          "linkedWithoutMetadata": "d8735fbe3a09967e64dd11cfdf531e989ace4a362a4f6b6ec8e3475f4262e06f"
        },
        "inherit": [
          "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "hardhat/console.sol:console"
        ],
        "methods": [
          "(address)",
          "addWalletToWhitelist(address,bool,uint256)",
          "updateWhitelistStatus(address,bool)",
          "updateBlacklistStatus(address,bool)",
          "fundSmartContract(uint8,uint256)",
          "withdrawGrowthTokens()",
          "withdrawTeamTokens()",
          "calculateYearForTeamTokens()",
          "updateRewardsBatch(address[],uint256[])",
          "updateRewardsSingle(address,uint256)",
          "withdrawRewardTokens()",
          "withdrawTokensToBurn(uint8,uint256)",
          "updateWhiteListerAddress(address)",
          "updateRewardsUpdaterAddress(address)",
          "updateHyaxTokenAddress(address)",
          "pause()",
          "unpause()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UpgradeableHYAXRewards",
            "src": "contracts\\UpgradeableHYAXRewards.sol:210"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "_paused",
              "offset": 20,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:37"
            },
            {
              "label": "hyaxTokenAddress",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:108"
            },
            {
              "label": "hyaxToken",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(ERC20TokenInterface)403",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:110"
            },
            {
              "label": "growthTokensFunded",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:122"
            },
            {
              "label": "growthTokensWithdrawn",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:124"
            },
            {
              "label": "growthTokensInSmartContract",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:126"
            },
            {
              "label": "growthTokensLastWithdrawalTime",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:128"
            },
            {
              "label": "growthTokensStartFundingTime",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:130"
            },
            {
              "label": "growthTokensFundingStarted",
              "offset": 0,
              "slot": "9",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:132"
            },
            {
              "label": "teamTokensFunded",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:143"
            },
            {
              "label": "teamTokensWithdrawn",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:145"
            },
            {
              "label": "teamTokensInSmartContract",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:147"
            },
            {
              "label": "teamTokensLastWithdrawalTime",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:149"
            },
            {
              "label": "teamTokensStartFundingTime",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:151"
            },
            {
              "label": "teamTokensFundingStarted",
              "offset": 0,
              "slot": "15",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:153"
            },
            {
              "label": "rewardTokensFunded",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:166"
            },
            {
              "label": "rewardTokensDistributed",
              "offset": 0,
              "slot": "17",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:168"
            },
            {
              "label": "rewardTokensWithdrawn",
              "offset": 0,
              "slot": "18",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:170"
            },
            {
              "label": "rewardTokensInSmartContract",
              "offset": 0,
              "slot": "19",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:172"
            },
            {
              "label": "rewardTokensStartFundingTime",
              "offset": 0,
              "slot": "20",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:174"
            },
            {
              "label": "rewardTokensFundingStarted",
              "offset": 0,
              "slot": "21",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:176"
            },
            {
              "label": "whiteListerAddress",
              "offset": 1,
              "slot": "21",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:181"
            },
            {
              "label": "rewardsUpdaterAddress",
              "offset": 0,
              "slot": "22",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:183"
            },
            {
              "label": "wallets",
              "offset": 0,
              "slot": "23",
              "type": "t_mapping(t_address,t_struct(WalletData)632_storage)",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:207"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ERC20TokenInterface)403": {
              "label": "contract ERC20TokenInterface",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_struct(WalletData)632_storage)": {
              "label": "mapping(address => struct UpgradeableHYAXRewards.WalletData)",
              "numberOfBytes": "32"
            },
            "t_struct(WalletData)632_storage": {
              "label": "struct UpgradeableHYAXRewards.WalletData",
              "members": [
                {
                  "label": "hyaxHoldingAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "hyaxHoldingAmountAtWhitelistTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "totalHyaxRewardsAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "currentRewardsAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "rewardsWithdrawn",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "addedToWhitelistTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "tokenWithdrawalTimes",
                  "type": "t_uint8",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "lastRewardsWithdrawalTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "lastRewardsUpdateTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "isTeamWallet",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "isWhitelisted",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "9"
                },
                {
                  "label": "isBlacklisted",
                  "type": "t_bool",
                  "offset": 2,
                  "slot": "9"
                }
              ],
              "numberOfBytes": "320"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "hardhat/console.sol:console": {
        "src": "hardhat\\console.sol:4",
        "version": {
          "withMetadata": "b1be11c3bf90cff557541588c2ae5cd66dca02f69e0972ceeb9da182ee9131c5",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Pausable.sol:Pausable": {
        "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:17",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Pausable",
            "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:43"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_paused",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UpgradeableHYAXRewards.sol:ERC20TokenInterface": {
        "src": "contracts\\UpgradeableHYAXRewards.sol:13",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "balanceOf(address)",
          "symbol()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UpgradeableHYAXRewards.sol:UpgradeableHYAXRewards": {
        "src": "contracts\\UpgradeableHYAXRewards.sol:20",
        "version": {
          "withMetadata": "f93b08073829d352115e76d4eff243a30f082947cd971e4ca8b0fc5b0977a1ee",
          "withoutMetadata": "d8735fbe3a09967e64dd11cfdf531e989ace4a362a4f6b6ec8e3475f4262e06f",
          "linkedWithoutMetadata": "d8735fbe3a09967e64dd11cfdf531e989ace4a362a4f6b6ec8e3475f4262e06f"
        },
        "inherit": [
          "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "hardhat/console.sol:console"
        ],
        "methods": [
          "(address)",
          "addWalletToWhitelist(address,bool,uint256)",
          "updateWhitelistStatus(address,bool)",
          "updateBlacklistStatus(address,bool)",
          "fundSmartContract(uint8,uint256)",
          "withdrawGrowthTokens()",
          "withdrawTeamTokens()",
          "calculateYearForTeamTokens()",
          "updateRewardsBatch(address[],uint256[])",
          "updateRewardsSingle(address,uint256)",
          "withdrawRewardTokens()",
          "withdrawTokensToBurn(uint8,uint256)",
          "updateWhiteListerAddress(address)",
          "updateRewardsUpdaterAddress(address)",
          "updateHyaxTokenAddress(address)",
          "pause()",
          "unpause()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UpgradeableHYAXRewards",
            "src": "contracts\\UpgradeableHYAXRewards.sol:210"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "_paused",
              "offset": 20,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:37"
            },
            {
              "label": "hyaxTokenAddress",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:108"
            },
            {
              "label": "hyaxToken",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(ERC20TokenInterface)403",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:110"
            },
            {
              "label": "growthTokensFunded",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:122"
            },
            {
              "label": "growthTokensWithdrawn",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:124"
            },
            {
              "label": "growthTokensInSmartContract",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:126"
            },
            {
              "label": "growthTokensLastWithdrawalTime",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:128"
            },
            {
              "label": "growthTokensStartFundingTime",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:130"
            },
            {
              "label": "growthTokensFundingStarted",
              "offset": 0,
              "slot": "9",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:132"
            },
            {
              "label": "teamTokensFunded",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:143"
            },
            {
              "label": "teamTokensWithdrawn",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:145"
            },
            {
              "label": "teamTokensInSmartContract",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:147"
            },
            {
              "label": "teamTokensLastWithdrawalTime",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:149"
            },
            {
              "label": "teamTokensStartFundingTime",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:151"
            },
            {
              "label": "teamTokensFundingStarted",
              "offset": 0,
              "slot": "15",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:153"
            },
            {
              "label": "rewardTokensFunded",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:166"
            },
            {
              "label": "rewardTokensDistributed",
              "offset": 0,
              "slot": "17",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:168"
            },
            {
              "label": "rewardTokensWithdrawn",
              "offset": 0,
              "slot": "18",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:170"
            },
            {
              "label": "rewardTokensInSmartContract",
              "offset": 0,
              "slot": "19",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:172"
            },
            {
              "label": "rewardTokensStartFundingTime",
              "offset": 0,
              "slot": "20",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:174"
            },
            {
              "label": "rewardTokensFundingStarted",
              "offset": 0,
              "slot": "21",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:176"
            },
            {
              "label": "whiteListerAddress",
              "offset": 1,
              "slot": "21",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:181"
            },
            {
              "label": "rewardsUpdaterAddress",
              "offset": 0,
              "slot": "22",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:183"
            },
            {
              "label": "wallets",
              "offset": 0,
              "slot": "23",
              "type": "t_mapping(t_address,t_struct(WalletData)632_storage)",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:207"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ERC20TokenInterface)403": {
              "label": "contract ERC20TokenInterface",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_struct(WalletData)632_storage)": {
              "label": "mapping(address => struct UpgradeableHYAXRewards.WalletData)",
              "numberOfBytes": "32"
            },
            "t_struct(WalletData)632_storage": {
              "label": "struct UpgradeableHYAXRewards.WalletData",
              "members": [
                {
                  "label": "hyaxHoldingAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "hyaxHoldingAmountAtWhitelistTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "totalHyaxRewardsAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "currentRewardsAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "rewardsWithdrawn",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "addedToWhitelistTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "tokenWithdrawalTimes",
                  "type": "t_uint8",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "lastRewardsWithdrawalTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "lastRewardsUpdateTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "isTeamWallet",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "isWhitelisted",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "9"
                },
                {
                  "label": "isBlacklisted",
                  "type": "t_bool",
                  "offset": 2,
                  "slot": "9"
                }
              ],
              "numberOfBytes": "320"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "hardhat/console.sol:console": {
        "src": "hardhat\\console.sol:4",
        "version": {
          "withMetadata": "b1be11c3bf90cff557541588c2ae5cd66dca02f69e0972ceeb9da182ee9131c5",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Pausable.sol:Pausable": {
        "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:17",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Pausable",
            "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:43"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_paused",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UpgradeableHYAXRewards.sol:ERC20TokenInterface": {
        "src": "contracts\\UpgradeableHYAXRewards.sol:13",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "balanceOf(address)",
          "symbol()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UpgradeableHYAXRewards.sol:UpgradeableHYAXRewards": {
        "src": "contracts\\UpgradeableHYAXRewards.sol:20",
        "version": {
          "withMetadata": "4bdb304cda643096e239e7903207dfb5b0a3e59ab69e3de6f106144615b00fb2",
          "withoutMetadata": "d8735fbe3a09967e64dd11cfdf531e989ace4a362a4f6b6ec8e3475f4262e06f",
          "linkedWithoutMetadata": "d8735fbe3a09967e64dd11cfdf531e989ace4a362a4f6b6ec8e3475f4262e06f"
        },
        "inherit": [
          "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "hardhat/console.sol:console"
        ],
        "methods": [
          "(address)",
          "addWalletToWhitelist(address,bool,uint256)",
          "updateWhitelistStatus(address,bool)",
          "updateBlacklistStatus(address,bool)",
          "fundSmartContract(uint8,uint256)",
          "withdrawGrowthTokens()",
          "withdrawTeamTokens()",
          "calculateYearForTeamTokens()",
          "updateRewardsBatch(address[],uint256[])",
          "updateRewardsSingle(address,uint256)",
          "withdrawRewardTokens()",
          "withdrawTokensToBurn(uint8,uint256)",
          "updateWhiteListerAddress(address)",
          "updateRewardsUpdaterAddress(address)",
          "updateHyaxTokenAddress(address)",
          "pause()",
          "unpause()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UpgradeableHYAXRewards",
            "src": "contracts\\UpgradeableHYAXRewards.sol:210"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "_paused",
              "offset": 20,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:37"
            },
            {
              "label": "hyaxTokenAddress",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:108"
            },
            {
              "label": "hyaxToken",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(ERC20TokenInterface)403",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:110"
            },
            {
              "label": "growthTokensFunded",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:122"
            },
            {
              "label": "growthTokensWithdrawn",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:124"
            },
            {
              "label": "growthTokensInSmartContract",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:126"
            },
            {
              "label": "growthTokensLastWithdrawalTime",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:128"
            },
            {
              "label": "growthTokensStartFundingTime",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:130"
            },
            {
              "label": "growthTokensFundingStarted",
              "offset": 0,
              "slot": "9",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:132"
            },
            {
              "label": "teamTokensFunded",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:143"
            },
            {
              "label": "teamTokensWithdrawn",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:145"
            },
            {
              "label": "teamTokensInSmartContract",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:147"
            },
            {
              "label": "teamTokensLastWithdrawalTime",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:149"
            },
            {
              "label": "teamTokensStartFundingTime",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:151"
            },
            {
              "label": "teamTokensFundingStarted",
              "offset": 0,
              "slot": "15",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:153"
            },
            {
              "label": "rewardTokensFunded",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:166"
            },
            {
              "label": "rewardTokensDistributed",
              "offset": 0,
              "slot": "17",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:168"
            },
            {
              "label": "rewardTokensWithdrawn",
              "offset": 0,
              "slot": "18",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:170"
            },
            {
              "label": "rewardTokensInSmartContract",
              "offset": 0,
              "slot": "19",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:172"
            },
            {
              "label": "rewardTokensStartFundingTime",
              "offset": 0,
              "slot": "20",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:174"
            },
            {
              "label": "rewardTokensFundingStarted",
              "offset": 0,
              "slot": "21",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:176"
            },
            {
              "label": "whiteListerAddress",
              "offset": 1,
              "slot": "21",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:181"
            },
            {
              "label": "rewardsUpdaterAddress",
              "offset": 0,
              "slot": "22",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:183"
            },
            {
              "label": "wallets",
              "offset": 0,
              "slot": "23",
              "type": "t_mapping(t_address,t_struct(WalletData)632_storage)",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:207"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ERC20TokenInterface)403": {
              "label": "contract ERC20TokenInterface",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_struct(WalletData)632_storage)": {
              "label": "mapping(address => struct UpgradeableHYAXRewards.WalletData)",
              "numberOfBytes": "32"
            },
            "t_struct(WalletData)632_storage": {
              "label": "struct UpgradeableHYAXRewards.WalletData",
              "members": [
                {
                  "label": "hyaxHoldingAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "hyaxHoldingAmountAtWhitelistTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "totalHyaxRewardsAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "currentRewardsAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "rewardsWithdrawn",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "addedToWhitelistTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "tokenWithdrawalTimes",
                  "type": "t_uint8",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "lastRewardsWithdrawalTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "lastRewardsUpdateTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "isTeamWallet",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "isWhitelisted",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "9"
                },
                {
                  "label": "isBlacklisted",
                  "type": "t_bool",
                  "offset": 2,
                  "slot": "9"
                }
              ],
              "numberOfBytes": "320"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "hardhat/console.sol:console": {
        "src": "hardhat\\console.sol:4",
        "version": {
          "withMetadata": "b1be11c3bf90cff557541588c2ae5cd66dca02f69e0972ceeb9da182ee9131c5",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Pausable.sol:Pausable": {
        "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:17",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Pausable",
            "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:43"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_paused",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UpgradeableHYAXRewards.sol:ERC20TokenInterface": {
        "src": "contracts\\UpgradeableHYAXRewards.sol:13",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "balanceOf(address)",
          "symbol()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UpgradeableHYAXRewards.sol:UpgradeableHYAXRewards": {
        "src": "contracts\\UpgradeableHYAXRewards.sol:20",
        "version": {
          "withMetadata": "63824dcacb48684ef00d4900e32301d7f503db0410e48a84c55faa6c33da617f",
          "withoutMetadata": "d8735fbe3a09967e64dd11cfdf531e989ace4a362a4f6b6ec8e3475f4262e06f",
          "linkedWithoutMetadata": "d8735fbe3a09967e64dd11cfdf531e989ace4a362a4f6b6ec8e3475f4262e06f"
        },
        "inherit": [
          "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "hardhat/console.sol:console"
        ],
        "methods": [
          "(address)",
          "addWalletToWhitelist(address,bool,uint256)",
          "updateWhitelistStatus(address,bool)",
          "updateBlacklistStatus(address,bool)",
          "fundSmartContract(uint8,uint256)",
          "withdrawGrowthTokens()",
          "withdrawTeamTokens()",
          "calculateYearForTeamTokens()",
          "updateRewardsBatch(address[],uint256[])",
          "updateRewardsSingle(address,uint256)",
          "withdrawRewardTokens()",
          "withdrawTokensToBurn(uint8,uint256)",
          "updateWhiteListerAddress(address)",
          "updateRewardsUpdaterAddress(address)",
          "updateHyaxTokenAddress(address)",
          "pause()",
          "unpause()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UpgradeableHYAXRewards",
            "src": "contracts\\UpgradeableHYAXRewards.sol:210"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "_paused",
              "offset": 20,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:37"
            },
            {
              "label": "hyaxTokenAddress",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:108"
            },
            {
              "label": "hyaxToken",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(ERC20TokenInterface)403",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:110"
            },
            {
              "label": "growthTokensFunded",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:122"
            },
            {
              "label": "growthTokensWithdrawn",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:124"
            },
            {
              "label": "growthTokensInSmartContract",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:126"
            },
            {
              "label": "growthTokensLastWithdrawalTime",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:128"
            },
            {
              "label": "growthTokensStartFundingTime",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:130"
            },
            {
              "label": "growthTokensFundingStarted",
              "offset": 0,
              "slot": "9",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:132"
            },
            {
              "label": "teamTokensFunded",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:143"
            },
            {
              "label": "teamTokensWithdrawn",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:145"
            },
            {
              "label": "teamTokensInSmartContract",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:147"
            },
            {
              "label": "teamTokensLastWithdrawalTime",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:149"
            },
            {
              "label": "teamTokensStartFundingTime",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:151"
            },
            {
              "label": "teamTokensFundingStarted",
              "offset": 0,
              "slot": "15",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:153"
            },
            {
              "label": "rewardTokensFunded",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:166"
            },
            {
              "label": "rewardTokensDistributed",
              "offset": 0,
              "slot": "17",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:168"
            },
            {
              "label": "rewardTokensWithdrawn",
              "offset": 0,
              "slot": "18",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:170"
            },
            {
              "label": "rewardTokensInSmartContract",
              "offset": 0,
              "slot": "19",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:172"
            },
            {
              "label": "rewardTokensStartFundingTime",
              "offset": 0,
              "slot": "20",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:174"
            },
            {
              "label": "rewardTokensFundingStarted",
              "offset": 0,
              "slot": "21",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:176"
            },
            {
              "label": "whiteListerAddress",
              "offset": 1,
              "slot": "21",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:181"
            },
            {
              "label": "rewardsUpdaterAddress",
              "offset": 0,
              "slot": "22",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:183"
            },
            {
              "label": "wallets",
              "offset": 0,
              "slot": "23",
              "type": "t_mapping(t_address,t_struct(WalletData)632_storage)",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:207"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ERC20TokenInterface)403": {
              "label": "contract ERC20TokenInterface",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_struct(WalletData)632_storage)": {
              "label": "mapping(address => struct UpgradeableHYAXRewards.WalletData)",
              "numberOfBytes": "32"
            },
            "t_struct(WalletData)632_storage": {
              "label": "struct UpgradeableHYAXRewards.WalletData",
              "members": [
                {
                  "label": "hyaxHoldingAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "hyaxHoldingAmountAtWhitelistTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "totalHyaxRewardsAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "currentRewardsAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "rewardsWithdrawn",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "addedToWhitelistTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "tokenWithdrawalTimes",
                  "type": "t_uint8",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "lastRewardsWithdrawalTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "lastRewardsUpdateTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "isTeamWallet",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "isWhitelisted",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "9"
                },
                {
                  "label": "isBlacklisted",
                  "type": "t_bool",
                  "offset": 2,
                  "slot": "9"
                }
              ],
              "numberOfBytes": "320"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "hardhat/console.sol:console": {
        "src": "hardhat\\console.sol:4",
        "version": {
          "withMetadata": "b1be11c3bf90cff557541588c2ae5cd66dca02f69e0972ceeb9da182ee9131c5",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Pausable.sol:Pausable": {
        "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:17",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Pausable",
            "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:43"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_paused",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UpgradeableHYAXRewards.sol:ERC20TokenInterface": {
        "src": "contracts\\UpgradeableHYAXRewards.sol:13",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "balanceOf(address)",
          "symbol()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UpgradeableHYAXRewards.sol:UpgradeableHYAXRewards": {
        "src": "contracts\\UpgradeableHYAXRewards.sol:20",
        "version": {
          "withMetadata": "7607cf95b8a0ba789f9a7af55f39b08269a9269f2c575caff07f5ef14b2066f5",
          "withoutMetadata": "667fcf93ca8f443932e7d72394b19b0e180347034b6daf6f27158d2644e0543c",
          "linkedWithoutMetadata": "667fcf93ca8f443932e7d72394b19b0e180347034b6daf6f27158d2644e0543c"
        },
        "inherit": [
          "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "hardhat/console.sol:console"
        ],
        "methods": [
          "(address)",
          "addWalletToWhitelist(address,bool,uint256)",
          "updateWhitelistStatus(address,bool)",
          "updateBlacklistStatus(address,bool)",
          "fundSmartContract(uint8,uint256)",
          "withdrawGrowthTokens()",
          "withdrawTeamTokens()",
          "calculateYearForTeamTokens()",
          "updateRewardsBatch(address[],uint256[])",
          "updateRewardsSingle(address,uint256)",
          "withdrawRewardTokens()",
          "withdrawTokensToBurn(uint8,uint256)",
          "updateWhiteListerAddress(address)",
          "updateRewardsUpdaterAddress(address)",
          "updateHyaxTokenAddress(address)",
          "pause()",
          "unpause()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UpgradeableHYAXRewards",
            "src": "contracts\\UpgradeableHYAXRewards.sol:210"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "_paused",
              "offset": 20,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:37"
            },
            {
              "label": "hyaxTokenAddress",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:108"
            },
            {
              "label": "hyaxToken",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(ERC20TokenInterface)403",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:110"
            },
            {
              "label": "growthTokensFunded",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:122"
            },
            {
              "label": "growthTokensWithdrawn",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:124"
            },
            {
              "label": "growthTokensInSmartContract",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:126"
            },
            {
              "label": "growthTokensLastWithdrawalTime",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:128"
            },
            {
              "label": "growthTokensStartFundingTime",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:130"
            },
            {
              "label": "growthTokensFundingStarted",
              "offset": 0,
              "slot": "9",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:132"
            },
            {
              "label": "teamTokensFunded",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:143"
            },
            {
              "label": "teamTokensWithdrawn",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:145"
            },
            {
              "label": "teamTokensInSmartContract",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:147"
            },
            {
              "label": "teamTokensLastWithdrawalTime",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:149"
            },
            {
              "label": "teamTokensStartFundingTime",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:151"
            },
            {
              "label": "teamTokensFundingStarted",
              "offset": 0,
              "slot": "15",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:153"
            },
            {
              "label": "rewardTokensFunded",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:166"
            },
            {
              "label": "rewardTokensDistributed",
              "offset": 0,
              "slot": "17",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:168"
            },
            {
              "label": "rewardTokensWithdrawn",
              "offset": 0,
              "slot": "18",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:170"
            },
            {
              "label": "rewardTokensInSmartContract",
              "offset": 0,
              "slot": "19",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:172"
            },
            {
              "label": "rewardTokensStartFundingTime",
              "offset": 0,
              "slot": "20",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:174"
            },
            {
              "label": "rewardTokensFundingStarted",
              "offset": 0,
              "slot": "21",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:176"
            },
            {
              "label": "whiteListerAddress",
              "offset": 1,
              "slot": "21",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:181"
            },
            {
              "label": "rewardsUpdaterAddress",
              "offset": 0,
              "slot": "22",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:183"
            },
            {
              "label": "wallets",
              "offset": 0,
              "slot": "23",
              "type": "t_mapping(t_address,t_struct(WalletData)632_storage)",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:207"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ERC20TokenInterface)403": {
              "label": "contract ERC20TokenInterface",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_struct(WalletData)632_storage)": {
              "label": "mapping(address => struct UpgradeableHYAXRewards.WalletData)",
              "numberOfBytes": "32"
            },
            "t_struct(WalletData)632_storage": {
              "label": "struct UpgradeableHYAXRewards.WalletData",
              "members": [
                {
                  "label": "hyaxHoldingAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "hyaxHoldingAmountAtWhitelistTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "totalHyaxRewardsAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "currentRewardsAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "rewardsWithdrawn",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "addedToWhitelistTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "tokenWithdrawalTimes",
                  "type": "t_uint8",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "lastRewardsWithdrawalTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "lastRewardsUpdateTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "isTeamWallet",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "isWhitelisted",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "9"
                },
                {
                  "label": "isBlacklisted",
                  "type": "t_bool",
                  "offset": 2,
                  "slot": "9"
                }
              ],
              "numberOfBytes": "320"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "hardhat/console.sol:console": {
        "src": "hardhat\\console.sol:4",
        "version": {
          "withMetadata": "b1be11c3bf90cff557541588c2ae5cd66dca02f69e0972ceeb9da182ee9131c5",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Pausable.sol:Pausable": {
        "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:17",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Pausable",
            "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:43"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_paused",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UpgradeableHYAXRewards.sol:ERC20TokenInterface": {
        "src": "contracts\\UpgradeableHYAXRewards.sol:13",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "balanceOf(address)",
          "symbol()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UpgradeableHYAXRewards.sol:UpgradeableHYAXRewards": {
        "src": "contracts\\UpgradeableHYAXRewards.sol:20",
        "version": {
          "withMetadata": "3417d33556a30457bacaa8e6b02086c5839ca56ac3f1f266e1a63527e2f9d577",
          "withoutMetadata": "bbd38f8a468f13bdcc424caa52e81f99b76650e943597bd89e44522dc454705d",
          "linkedWithoutMetadata": "bbd38f8a468f13bdcc424caa52e81f99b76650e943597bd89e44522dc454705d"
        },
        "inherit": [
          "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "hardhat/console.sol:console"
        ],
        "methods": [
          "(address)",
          "addWalletToWhitelist(address,bool,uint256)",
          "updateWhitelistStatus(address,bool)",
          "updateBlacklistStatus(address,bool)",
          "fundSmartContract(uint8,uint256)",
          "withdrawGrowthTokens()",
          "withdrawTeamTokens()",
          "calculateYearForTeamTokens()",
          "updateRewardsBatch(address[],uint256[])",
          "updateRewardsSingle(address,uint256)",
          "withdrawRewardTokens()",
          "withdrawTokensToBurn(uint8,uint256)",
          "updateWhiteListerAddress(address)",
          "updateRewardsUpdaterAddress(address)",
          "updateHyaxTokenAddress(address)",
          "pause()",
          "unpause()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UpgradeableHYAXRewards",
            "src": "contracts\\UpgradeableHYAXRewards.sol:210"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "_paused",
              "offset": 20,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:37"
            },
            {
              "label": "hyaxTokenAddress",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:108"
            },
            {
              "label": "hyaxToken",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(ERC20TokenInterface)403",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:110"
            },
            {
              "label": "growthTokensFunded",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:122"
            },
            {
              "label": "growthTokensWithdrawn",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:124"
            },
            {
              "label": "growthTokensInSmartContract",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:126"
            },
            {
              "label": "growthTokensLastWithdrawalTime",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:128"
            },
            {
              "label": "growthTokensStartFundingTime",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:130"
            },
            {
              "label": "growthTokensFundingStarted",
              "offset": 0,
              "slot": "9",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:132"
            },
            {
              "label": "teamTokensFunded",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:143"
            },
            {
              "label": "teamTokensWithdrawn",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:145"
            },
            {
              "label": "teamTokensInSmartContract",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:147"
            },
            {
              "label": "teamTokensLastWithdrawalTime",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:149"
            },
            {
              "label": "teamTokensStartFundingTime",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:151"
            },
            {
              "label": "teamTokensFundingStarted",
              "offset": 0,
              "slot": "15",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:153"
            },
            {
              "label": "rewardTokensFunded",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:166"
            },
            {
              "label": "rewardTokensDistributed",
              "offset": 0,
              "slot": "17",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:168"
            },
            {
              "label": "rewardTokensWithdrawn",
              "offset": 0,
              "slot": "18",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:170"
            },
            {
              "label": "rewardTokensInSmartContract",
              "offset": 0,
              "slot": "19",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:172"
            },
            {
              "label": "rewardTokensStartFundingTime",
              "offset": 0,
              "slot": "20",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:174"
            },
            {
              "label": "rewardTokensFundingStarted",
              "offset": 0,
              "slot": "21",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:176"
            },
            {
              "label": "whiteListerAddress",
              "offset": 1,
              "slot": "21",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:181"
            },
            {
              "label": "rewardsUpdaterAddress",
              "offset": 0,
              "slot": "22",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:183"
            },
            {
              "label": "wallets",
              "offset": 0,
              "slot": "23",
              "type": "t_mapping(t_address,t_struct(WalletData)632_storage)",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:207"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ERC20TokenInterface)403": {
              "label": "contract ERC20TokenInterface",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_struct(WalletData)632_storage)": {
              "label": "mapping(address => struct UpgradeableHYAXRewards.WalletData)",
              "numberOfBytes": "32"
            },
            "t_struct(WalletData)632_storage": {
              "label": "struct UpgradeableHYAXRewards.WalletData",
              "members": [
                {
                  "label": "hyaxHoldingAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "hyaxHoldingAmountAtWhitelistTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "totalHyaxRewardsAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "currentRewardsAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "rewardsWithdrawn",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "addedToWhitelistTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "tokenWithdrawalTimes",
                  "type": "t_uint8",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "lastRewardsWithdrawalTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "lastRewardsUpdateTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "isTeamWallet",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "isWhitelisted",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "9"
                },
                {
                  "label": "isBlacklisted",
                  "type": "t_bool",
                  "offset": 2,
                  "slot": "9"
                }
              ],
              "numberOfBytes": "320"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "hardhat/console.sol:console": {
        "src": "hardhat\\console.sol:4",
        "version": {
          "withMetadata": "b1be11c3bf90cff557541588c2ae5cd66dca02f69e0972ceeb9da182ee9131c5",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Pausable.sol:Pausable": {
        "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:17",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Pausable",
            "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:43"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_paused",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UpgradeableHYAXRewards.sol:ERC20TokenInterface": {
        "src": "contracts\\UpgradeableHYAXRewards.sol:12",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "balanceOf(address)",
          "symbol()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UpgradeableHYAXRewards.sol:UpgradeableHYAXRewards": {
        "src": "contracts\\UpgradeableHYAXRewards.sol:19",
        "version": {
          "withMetadata": "dcdd65bdc401456b8a20a4093709427fe10c8e5dffca2bc367964805d55afaaa",
          "withoutMetadata": "d555812af74a28257c8c0d1eace6806b5ebde1324b45022e605cc4700f7f97cf",
          "linkedWithoutMetadata": "d555812af74a28257c8c0d1eace6806b5ebde1324b45022e605cc4700f7f97cf"
        },
        "inherit": [
          "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "addWalletToWhitelist(address,bool,uint256)",
          "updateWhitelistStatus(address,bool)",
          "updateBlacklistStatus(address,bool)",
          "fundSmartContract(uint8,uint256)",
          "withdrawGrowthTokens()",
          "withdrawTeamTokens()",
          "calculateYearForTeamTokens()",
          "updateRewardsBatch(address[],uint256[])",
          "updateRewardsSingle(address,uint256)",
          "withdrawRewardTokens()",
          "withdrawTokensToBurn(uint8,uint256)",
          "updateWhiteListerAddress(address)",
          "updateRewardsUpdaterAddress(address)",
          "updateHyaxTokenAddress(address)",
          "pause()",
          "unpause()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UpgradeableHYAXRewards",
            "src": "contracts\\UpgradeableHYAXRewards.sol:209"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "_paused",
              "offset": 20,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:37"
            },
            {
              "label": "hyaxTokenAddress",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:107"
            },
            {
              "label": "hyaxToken",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(ERC20TokenInterface)402",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:109"
            },
            {
              "label": "growthTokensFunded",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:121"
            },
            {
              "label": "growthTokensWithdrawn",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:123"
            },
            {
              "label": "growthTokensInSmartContract",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:125"
            },
            {
              "label": "growthTokensLastWithdrawalTime",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:127"
            },
            {
              "label": "growthTokensStartFundingTime",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:129"
            },
            {
              "label": "growthTokensFundingStarted",
              "offset": 0,
              "slot": "9",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:131"
            },
            {
              "label": "teamTokensFunded",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:142"
            },
            {
              "label": "teamTokensWithdrawn",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:144"
            },
            {
              "label": "teamTokensInSmartContract",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:146"
            },
            {
              "label": "teamTokensLastWithdrawalTime",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:148"
            },
            {
              "label": "teamTokensStartFundingTime",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:150"
            },
            {
              "label": "teamTokensFundingStarted",
              "offset": 0,
              "slot": "15",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:152"
            },
            {
              "label": "rewardTokensFunded",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:165"
            },
            {
              "label": "rewardTokensDistributed",
              "offset": 0,
              "slot": "17",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:167"
            },
            {
              "label": "rewardTokensWithdrawn",
              "offset": 0,
              "slot": "18",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:169"
            },
            {
              "label": "rewardTokensInSmartContract",
              "offset": 0,
              "slot": "19",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:171"
            },
            {
              "label": "rewardTokensStartFundingTime",
              "offset": 0,
              "slot": "20",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:173"
            },
            {
              "label": "rewardTokensFundingStarted",
              "offset": 0,
              "slot": "21",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:175"
            },
            {
              "label": "whiteListerAddress",
              "offset": 1,
              "slot": "21",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:180"
            },
            {
              "label": "rewardsUpdaterAddress",
              "offset": 0,
              "slot": "22",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:182"
            },
            {
              "label": "wallets",
              "offset": 0,
              "slot": "23",
              "type": "t_mapping(t_address,t_struct(WalletData)631_storage)",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:206"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ERC20TokenInterface)402": {
              "label": "contract ERC20TokenInterface",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_struct(WalletData)631_storage)": {
              "label": "mapping(address => struct UpgradeableHYAXRewards.WalletData)",
              "numberOfBytes": "32"
            },
            "t_struct(WalletData)631_storage": {
              "label": "struct UpgradeableHYAXRewards.WalletData",
              "members": [
                {
                  "label": "hyaxHoldingAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "hyaxHoldingAmountAtWhitelistTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "totalHyaxRewardsAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "currentRewardsAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "rewardsWithdrawn",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "addedToWhitelistTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "tokenWithdrawalTimes",
                  "type": "t_uint8",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "lastRewardsWithdrawalTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "lastRewardsUpdateTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "isTeamWallet",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "isWhitelisted",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "9"
                },
                {
                  "label": "isBlacklisted",
                  "type": "t_bool",
                  "offset": 2,
                  "slot": "9"
                }
              ],
              "numberOfBytes": "320"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Pausable.sol:Pausable": {
        "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:17",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Pausable",
            "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:43"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_paused",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UpgradeableHYAXRewards.sol:ERC20TokenInterface": {
        "src": "contracts\\UpgradeableHYAXRewards.sol:12",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "balanceOf(address)",
          "symbol()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UpgradeableHYAXRewards.sol:UpgradeableHYAXRewards": {
        "src": "contracts\\UpgradeableHYAXRewards.sol:19",
        "version": {
          "withMetadata": "46e6522473d8a00244747c8a5f282b57d57b7e49ed5f1d778c2ecb6ecbfdd66c",
          "withoutMetadata": "e80dc51a833b5af0daa29a56375fccd75bd2d24117e56d77434b017147af6184",
          "linkedWithoutMetadata": "e80dc51a833b5af0daa29a56375fccd75bd2d24117e56d77434b017147af6184"
        },
        "inherit": [
          "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "addWalletToWhitelist(address,bool,uint256)",
          "updateWhitelistStatus(address,bool)",
          "updateBlacklistStatus(address,bool)",
          "fundSmartContract(uint8,uint256)",
          "withdrawGrowthTokens()",
          "withdrawTeamTokens()",
          "calculateYearForTeamTokens()",
          "updateRewardsBatch(address[],uint256[])",
          "updateRewardsSingle(address,uint256)",
          "withdrawRewardTokens()",
          "withdrawTokensToBurn(uint8,uint256)",
          "updateWhiteListerAddress(address)",
          "updateRewardsUpdaterAddress(address)",
          "updateHyaxTokenAddress(address)",
          "pause()",
          "unpause()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UpgradeableHYAXRewards",
            "src": "contracts\\UpgradeableHYAXRewards.sol:209"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "_paused",
              "offset": 20,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:37"
            },
            {
              "label": "hyaxTokenAddress",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:107"
            },
            {
              "label": "hyaxToken",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(ERC20TokenInterface)402",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:109"
            },
            {
              "label": "growthTokensFunded",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:121"
            },
            {
              "label": "growthTokensWithdrawn",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:123"
            },
            {
              "label": "growthTokensInSmartContract",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:125"
            },
            {
              "label": "growthTokensLastWithdrawalTime",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:127"
            },
            {
              "label": "growthTokensStartFundingTime",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:129"
            },
            {
              "label": "growthTokensFundingStarted",
              "offset": 0,
              "slot": "9",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:131"
            },
            {
              "label": "teamTokensFunded",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:142"
            },
            {
              "label": "teamTokensWithdrawn",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:144"
            },
            {
              "label": "teamTokensInSmartContract",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:146"
            },
            {
              "label": "teamTokensLastWithdrawalTime",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:148"
            },
            {
              "label": "teamTokensStartFundingTime",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:150"
            },
            {
              "label": "teamTokensFundingStarted",
              "offset": 0,
              "slot": "15",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:152"
            },
            {
              "label": "rewardTokensFunded",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:165"
            },
            {
              "label": "rewardTokensDistributed",
              "offset": 0,
              "slot": "17",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:167"
            },
            {
              "label": "rewardTokensWithdrawn",
              "offset": 0,
              "slot": "18",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:169"
            },
            {
              "label": "rewardTokensInSmartContract",
              "offset": 0,
              "slot": "19",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:171"
            },
            {
              "label": "rewardTokensStartFundingTime",
              "offset": 0,
              "slot": "20",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:173"
            },
            {
              "label": "rewardTokensFundingStarted",
              "offset": 0,
              "slot": "21",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:175"
            },
            {
              "label": "whiteListerAddress",
              "offset": 1,
              "slot": "21",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:180"
            },
            {
              "label": "rewardsUpdaterAddress",
              "offset": 0,
              "slot": "22",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:182"
            },
            {
              "label": "wallets",
              "offset": 0,
              "slot": "23",
              "type": "t_mapping(t_address,t_struct(WalletData)631_storage)",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:206"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ERC20TokenInterface)402": {
              "label": "contract ERC20TokenInterface",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_struct(WalletData)631_storage)": {
              "label": "mapping(address => struct UpgradeableHYAXRewards.WalletData)",
              "numberOfBytes": "32"
            },
            "t_struct(WalletData)631_storage": {
              "label": "struct UpgradeableHYAXRewards.WalletData",
              "members": [
                {
                  "label": "hyaxHoldingAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "hyaxHoldingAmountAtWhitelistTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "totalHyaxRewardsAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "currentRewardsAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "rewardsWithdrawn",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "addedToWhitelistTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "tokenWithdrawalTimes",
                  "type": "t_uint8",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "lastRewardsWithdrawalTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "lastRewardsUpdateTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "isTeamWallet",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "isWhitelisted",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "9"
                },
                {
                  "label": "isBlacklisted",
                  "type": "t_bool",
                  "offset": 2,
                  "slot": "9"
                }
              ],
              "numberOfBytes": "320"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Pausable.sol:Pausable": {
        "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:17",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Pausable",
            "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:43"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_paused",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UpgradeableHYAXRewards.sol:ERC20TokenInterface": {
        "src": "contracts\\UpgradeableHYAXRewards.sol:12",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "balanceOf(address)",
          "symbol()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UpgradeableHYAXRewards.sol:UpgradeableHYAXRewards": {
        "src": "contracts\\UpgradeableHYAXRewards.sol:19",
        "version": {
          "withMetadata": "8ef371e43f1583c448f3206063d13aefdf67341bec445e6d464116f8db03f644",
          "withoutMetadata": "e80dc51a833b5af0daa29a56375fccd75bd2d24117e56d77434b017147af6184",
          "linkedWithoutMetadata": "e80dc51a833b5af0daa29a56375fccd75bd2d24117e56d77434b017147af6184"
        },
        "inherit": [
          "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "addWalletToWhitelist(address,bool,uint256)",
          "updateWhitelistStatus(address,bool)",
          "updateBlacklistStatus(address,bool)",
          "fundSmartContract(uint8,uint256)",
          "withdrawGrowthTokens()",
          "withdrawTeamTokens()",
          "calculateYearForTeamTokens()",
          "updateRewardsBatch(address[],uint256[])",
          "updateRewardsSingle(address,uint256)",
          "withdrawRewardTokens()",
          "withdrawTokensToBurn(uint8,uint256)",
          "updateWhiteListerAddress(address)",
          "updateRewardsUpdaterAddress(address)",
          "updateHyaxTokenAddress(address)",
          "pause()",
          "unpause()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UpgradeableHYAXRewards",
            "src": "contracts\\UpgradeableHYAXRewards.sol:209"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "_paused",
              "offset": 20,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:37"
            },
            {
              "label": "hyaxTokenAddress",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:107"
            },
            {
              "label": "hyaxToken",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(ERC20TokenInterface)402",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:109"
            },
            {
              "label": "growthTokensFunded",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:121"
            },
            {
              "label": "growthTokensWithdrawn",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:123"
            },
            {
              "label": "growthTokensInSmartContract",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:125"
            },
            {
              "label": "growthTokensLastWithdrawalTime",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:127"
            },
            {
              "label": "growthTokensStartFundingTime",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:129"
            },
            {
              "label": "growthTokensFundingStarted",
              "offset": 0,
              "slot": "9",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:131"
            },
            {
              "label": "teamTokensFunded",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:142"
            },
            {
              "label": "teamTokensWithdrawn",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:144"
            },
            {
              "label": "teamTokensInSmartContract",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:146"
            },
            {
              "label": "teamTokensLastWithdrawalTime",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:148"
            },
            {
              "label": "teamTokensStartFundingTime",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:150"
            },
            {
              "label": "teamTokensFundingStarted",
              "offset": 0,
              "slot": "15",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:152"
            },
            {
              "label": "rewardTokensFunded",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:165"
            },
            {
              "label": "rewardTokensDistributed",
              "offset": 0,
              "slot": "17",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:167"
            },
            {
              "label": "rewardTokensWithdrawn",
              "offset": 0,
              "slot": "18",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:169"
            },
            {
              "label": "rewardTokensInSmartContract",
              "offset": 0,
              "slot": "19",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:171"
            },
            {
              "label": "rewardTokensStartFundingTime",
              "offset": 0,
              "slot": "20",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:173"
            },
            {
              "label": "rewardTokensFundingStarted",
              "offset": 0,
              "slot": "21",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:175"
            },
            {
              "label": "whiteListerAddress",
              "offset": 1,
              "slot": "21",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:180"
            },
            {
              "label": "rewardsUpdaterAddress",
              "offset": 0,
              "slot": "22",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:182"
            },
            {
              "label": "wallets",
              "offset": 0,
              "slot": "23",
              "type": "t_mapping(t_address,t_struct(WalletData)631_storage)",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:206"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ERC20TokenInterface)402": {
              "label": "contract ERC20TokenInterface",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_struct(WalletData)631_storage)": {
              "label": "mapping(address => struct UpgradeableHYAXRewards.WalletData)",
              "numberOfBytes": "32"
            },
            "t_struct(WalletData)631_storage": {
              "label": "struct UpgradeableHYAXRewards.WalletData",
              "members": [
                {
                  "label": "hyaxHoldingAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "hyaxHoldingAmountAtWhitelistTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "totalHyaxRewardsAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "currentRewardsAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "rewardsWithdrawn",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "addedToWhitelistTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "tokenWithdrawalTimes",
                  "type": "t_uint8",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "lastRewardsWithdrawalTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "lastRewardsUpdateTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "isTeamWallet",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "isWhitelisted",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "9"
                },
                {
                  "label": "isBlacklisted",
                  "type": "t_bool",
                  "offset": 2,
                  "slot": "9"
                }
              ],
              "numberOfBytes": "320"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Pausable.sol:Pausable": {
        "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:17",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Pausable",
            "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:43"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_paused",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UpgradeableHYAXRewards.sol:ERC20TokenInterface": {
        "src": "contracts\\UpgradeableHYAXRewards.sol:12",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "balanceOf(address)",
          "symbol()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UpgradeableHYAXRewards.sol:UpgradeableHYAXRewards": {
        "src": "contracts\\UpgradeableHYAXRewards.sol:19",
        "version": {
          "withMetadata": "9468166595f0f46a0e1023e522c09123641a804c39d1301d07027670b256d458",
          "withoutMetadata": "45aa970fa35d5ce777b560d66a5410231b164f80ffc5252793ea04cade9c2c2c",
          "linkedWithoutMetadata": "45aa970fa35d5ce777b560d66a5410231b164f80ffc5252793ea04cade9c2c2c"
        },
        "inherit": [
          "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "addWalletToWhitelist(address,bool,uint256)",
          "updateWhitelistStatus(address,bool)",
          "updateBlacklistStatus(address,bool)",
          "fundSmartContract(uint8,uint256)",
          "withdrawGrowthTokens()",
          "withdrawTeamTokens()",
          "calculateYearForTeamTokens()",
          "updateRewardsBatch(address[],uint256[])",
          "updateRewardsSingle(address,uint256)",
          "withdrawRewardTokens()",
          "withdrawTokensToBurn(uint8,uint256)",
          "updateWhiteListerAddress(address)",
          "updateRewardsUpdaterAddress(address)",
          "updateHyaxTokenAddress(address)",
          "pause()",
          "unpause()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UpgradeableHYAXRewards",
            "src": "contracts\\UpgradeableHYAXRewards.sol:209"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "_paused",
              "offset": 20,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:37"
            },
            {
              "label": "hyaxTokenAddress",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:107"
            },
            {
              "label": "hyaxToken",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(ERC20TokenInterface)402",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:109"
            },
            {
              "label": "growthTokensFunded",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:121"
            },
            {
              "label": "growthTokensWithdrawn",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:123"
            },
            {
              "label": "growthTokensInSmartContract",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:125"
            },
            {
              "label": "growthTokensLastWithdrawalTime",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:127"
            },
            {
              "label": "growthTokensStartFundingTime",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:129"
            },
            {
              "label": "growthTokensFundingStarted",
              "offset": 0,
              "slot": "9",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:131"
            },
            {
              "label": "teamTokensFunded",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:142"
            },
            {
              "label": "teamTokensWithdrawn",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:144"
            },
            {
              "label": "teamTokensInSmartContract",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:146"
            },
            {
              "label": "teamTokensLastWithdrawalTime",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:148"
            },
            {
              "label": "teamTokensStartFundingTime",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:150"
            },
            {
              "label": "teamTokensFundingStarted",
              "offset": 0,
              "slot": "15",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:152"
            },
            {
              "label": "rewardTokensFunded",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:165"
            },
            {
              "label": "rewardTokensDistributed",
              "offset": 0,
              "slot": "17",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:167"
            },
            {
              "label": "rewardTokensWithdrawn",
              "offset": 0,
              "slot": "18",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:169"
            },
            {
              "label": "rewardTokensInSmartContract",
              "offset": 0,
              "slot": "19",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:171"
            },
            {
              "label": "rewardTokensStartFundingTime",
              "offset": 0,
              "slot": "20",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:173"
            },
            {
              "label": "rewardTokensFundingStarted",
              "offset": 0,
              "slot": "21",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:175"
            },
            {
              "label": "whiteListerAddress",
              "offset": 1,
              "slot": "21",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:180"
            },
            {
              "label": "rewardsUpdaterAddress",
              "offset": 0,
              "slot": "22",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:182"
            },
            {
              "label": "wallets",
              "offset": 0,
              "slot": "23",
              "type": "t_mapping(t_address,t_struct(WalletData)631_storage)",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:206"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ERC20TokenInterface)402": {
              "label": "contract ERC20TokenInterface",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_struct(WalletData)631_storage)": {
              "label": "mapping(address => struct UpgradeableHYAXRewards.WalletData)",
              "numberOfBytes": "32"
            },
            "t_struct(WalletData)631_storage": {
              "label": "struct UpgradeableHYAXRewards.WalletData",
              "members": [
                {
                  "label": "hyaxHoldingAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "hyaxHoldingAmountAtWhitelistTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "totalHyaxRewardsAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "currentRewardsAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "rewardsWithdrawn",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "addedToWhitelistTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "tokenWithdrawalTimes",
                  "type": "t_uint8",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "lastRewardsWithdrawalTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "lastRewardsUpdateTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "isTeamWallet",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "isWhitelisted",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "9"
                },
                {
                  "label": "isBlacklisted",
                  "type": "t_bool",
                  "offset": 2,
                  "slot": "9"
                }
              ],
              "numberOfBytes": "320"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Pausable.sol:Pausable": {
        "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:17",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Pausable",
            "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:43"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_paused",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UpgradeableHYAXRewards.sol:ERC20TokenInterface": {
        "src": "contracts\\UpgradeableHYAXRewards.sol:12",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "balanceOf(address)",
          "symbol()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UpgradeableHYAXRewards.sol:UpgradeableHYAXRewards": {
        "src": "contracts\\UpgradeableHYAXRewards.sol:19",
        "version": {
          "withMetadata": "4133d35f1622828472b22ad7f1b09d4091a846bdbe575bdcb4d2e41bb7bb37fe",
          "withoutMetadata": "88f1c628f47e6ee87f5eb03898652147a3ed54ae4cb5c4921f362b84093bfe46",
          "linkedWithoutMetadata": "88f1c628f47e6ee87f5eb03898652147a3ed54ae4cb5c4921f362b84093bfe46"
        },
        "inherit": [
          "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "addWalletToWhitelist(address,bool,uint256)",
          "updateWhitelistStatus(address,bool)",
          "updateBlacklistStatus(address,bool)",
          "fundSmartContract(uint8,uint256)",
          "withdrawGrowthTokens()",
          "withdrawTeamTokens()",
          "calculateYearForTeamTokens()",
          "updateRewardsBatch(address[],uint256[])",
          "updateRewardsSingle(address,uint256)",
          "withdrawRewardTokens()",
          "withdrawTokensToBurn(uint8,uint256)",
          "updateWhiteListerAddress(address)",
          "updateRewardsUpdaterAddress(address)",
          "updateHyaxTokenAddress(address)",
          "pause()",
          "unpause()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UpgradeableHYAXRewards",
            "src": "contracts\\UpgradeableHYAXRewards.sol:209"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "_paused",
              "offset": 20,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:37"
            },
            {
              "label": "hyaxTokenAddress",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:107"
            },
            {
              "label": "hyaxToken",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(ERC20TokenInterface)402",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:109"
            },
            {
              "label": "growthTokensFunded",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:121"
            },
            {
              "label": "growthTokensWithdrawn",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:123"
            },
            {
              "label": "growthTokensInSmartContract",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:125"
            },
            {
              "label": "growthTokensLastWithdrawalTime",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:127"
            },
            {
              "label": "growthTokensStartFundingTime",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:129"
            },
            {
              "label": "growthTokensFundingStarted",
              "offset": 0,
              "slot": "9",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:131"
            },
            {
              "label": "teamTokensFunded",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:142"
            },
            {
              "label": "teamTokensWithdrawn",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:144"
            },
            {
              "label": "teamTokensInSmartContract",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:146"
            },
            {
              "label": "teamTokensLastWithdrawalTime",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:148"
            },
            {
              "label": "teamTokensStartFundingTime",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:150"
            },
            {
              "label": "teamTokensFundingStarted",
              "offset": 0,
              "slot": "15",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:152"
            },
            {
              "label": "rewardTokensFunded",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:165"
            },
            {
              "label": "rewardTokensDistributed",
              "offset": 0,
              "slot": "17",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:167"
            },
            {
              "label": "rewardTokensWithdrawn",
              "offset": 0,
              "slot": "18",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:169"
            },
            {
              "label": "rewardTokensInSmartContract",
              "offset": 0,
              "slot": "19",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:171"
            },
            {
              "label": "rewardTokensStartFundingTime",
              "offset": 0,
              "slot": "20",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:173"
            },
            {
              "label": "rewardTokensFundingStarted",
              "offset": 0,
              "slot": "21",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:175"
            },
            {
              "label": "whiteListerAddress",
              "offset": 1,
              "slot": "21",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:180"
            },
            {
              "label": "rewardsUpdaterAddress",
              "offset": 0,
              "slot": "22",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:182"
            },
            {
              "label": "wallets",
              "offset": 0,
              "slot": "23",
              "type": "t_mapping(t_address,t_struct(WalletData)631_storage)",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:206"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ERC20TokenInterface)402": {
              "label": "contract ERC20TokenInterface",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_struct(WalletData)631_storage)": {
              "label": "mapping(address => struct UpgradeableHYAXRewards.WalletData)",
              "numberOfBytes": "32"
            },
            "t_struct(WalletData)631_storage": {
              "label": "struct UpgradeableHYAXRewards.WalletData",
              "members": [
                {
                  "label": "hyaxHoldingAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "hyaxHoldingAmountAtWhitelistTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "totalHyaxRewardsAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "currentRewardsAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "rewardsWithdrawn",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "addedToWhitelistTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "tokenWithdrawalTimes",
                  "type": "t_uint8",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "lastRewardsWithdrawalTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "lastRewardsUpdateTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "isTeamWallet",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "isWhitelisted",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "9"
                },
                {
                  "label": "isBlacklisted",
                  "type": "t_bool",
                  "offset": 2,
                  "slot": "9"
                }
              ],
              "numberOfBytes": "320"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Pausable.sol:Pausable": {
        "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:17",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Pausable",
            "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:43"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_paused",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UpgradeableHYAXRewards.sol:ERC20TokenInterface": {
        "src": "contracts\\UpgradeableHYAXRewards.sol:12",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "balanceOf(address)",
          "symbol()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UpgradeableHYAXRewards.sol:UpgradeableHYAXRewards": {
        "src": "contracts\\UpgradeableHYAXRewards.sol:19",
        "version": {
          "withMetadata": "597ebf774d844765a3dda78c36e0e69a65b91241d8300c795ffeb1e7257305da",
          "withoutMetadata": "e33cc6cb5c6da5a46c9beb6e799ff6c66daf21bcd3ab2da08e2d5e3efae3d4bb",
          "linkedWithoutMetadata": "e33cc6cb5c6da5a46c9beb6e799ff6c66daf21bcd3ab2da08e2d5e3efae3d4bb"
        },
        "inherit": [
          "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "addWalletToWhitelist(address,bool,uint256)",
          "updateWhitelistStatus(address,bool)",
          "updateBlacklistStatus(address,bool)",
          "fundSmartContract(uint8,uint256)",
          "withdrawGrowthTokens()",
          "withdrawTeamTokens()",
          "calculateYearForTeamTokens()",
          "updateRewardsBatch(address[],uint256[])",
          "updateRewardsSingle(address,uint256)",
          "withdrawRewardTokens()",
          "withdrawTokensToBurn(uint8,uint256)",
          "updateWhiteListerAddress(address)",
          "updateRewardsUpdaterAddress(address)",
          "updateHyaxTokenAddress(address)",
          "pause()",
          "unpause()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UpgradeableHYAXRewards",
            "src": "contracts\\UpgradeableHYAXRewards.sol:202"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "_paused",
              "offset": 20,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:37"
            },
            {
              "label": "hyaxTokenAddress",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:100"
            },
            {
              "label": "hyaxToken",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(ERC20TokenInterface)402",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:102"
            },
            {
              "label": "growthTokensFunded",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:114"
            },
            {
              "label": "growthTokensWithdrawn",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:116"
            },
            {
              "label": "growthTokensInSmartContract",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:118"
            },
            {
              "label": "growthTokensLastWithdrawalTime",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:120"
            },
            {
              "label": "growthTokensStartFundingTime",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:122"
            },
            {
              "label": "growthTokensFundingStarted",
              "offset": 0,
              "slot": "9",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:124"
            },
            {
              "label": "teamTokensFunded",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:135"
            },
            {
              "label": "teamTokensWithdrawn",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:137"
            },
            {
              "label": "teamTokensInSmartContract",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:139"
            },
            {
              "label": "teamTokensLastWithdrawalTime",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:141"
            },
            {
              "label": "teamTokensStartFundingTime",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:143"
            },
            {
              "label": "teamTokensFundingStarted",
              "offset": 0,
              "slot": "15",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:145"
            },
            {
              "label": "rewardTokensFunded",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:158"
            },
            {
              "label": "rewardTokensDistributed",
              "offset": 0,
              "slot": "17",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:160"
            },
            {
              "label": "rewardTokensWithdrawn",
              "offset": 0,
              "slot": "18",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:162"
            },
            {
              "label": "rewardTokensInSmartContract",
              "offset": 0,
              "slot": "19",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:164"
            },
            {
              "label": "rewardTokensStartFundingTime",
              "offset": 0,
              "slot": "20",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:166"
            },
            {
              "label": "rewardTokensFundingStarted",
              "offset": 0,
              "slot": "21",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:168"
            },
            {
              "label": "whiteListerAddress",
              "offset": 1,
              "slot": "21",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:173"
            },
            {
              "label": "rewardsUpdaterAddress",
              "offset": 0,
              "slot": "22",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:175"
            },
            {
              "label": "wallets",
              "offset": 0,
              "slot": "23",
              "type": "t_mapping(t_address,t_struct(WalletData)624_storage)",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:199"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ERC20TokenInterface)402": {
              "label": "contract ERC20TokenInterface",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_struct(WalletData)624_storage)": {
              "label": "mapping(address => struct UpgradeableHYAXRewards.WalletData)",
              "numberOfBytes": "32"
            },
            "t_struct(WalletData)624_storage": {
              "label": "struct UpgradeableHYAXRewards.WalletData",
              "members": [
                {
                  "label": "hyaxHoldingAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "hyaxHoldingAmountAtWhitelistTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "totalHyaxRewardsAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "currentRewardsAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "rewardsWithdrawn",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "addedToWhitelistTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "tokenWithdrawalTimes",
                  "type": "t_uint8",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "lastRewardsWithdrawalTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "lastRewardsUpdateTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "isTeamWallet",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "isWhitelisted",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "9"
                },
                {
                  "label": "isBlacklisted",
                  "type": "t_bool",
                  "offset": 2,
                  "slot": "9"
                }
              ],
              "numberOfBytes": "320"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Pausable.sol:Pausable": {
        "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:17",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Pausable",
            "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:43"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_paused",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UpgradeableHYAXRewards.sol:ERC20TokenInterface": {
        "src": "contracts\\UpgradeableHYAXRewards.sol:12",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "balanceOf(address)",
          "symbol()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UpgradeableHYAXRewards.sol:UpgradeableHYAXRewards": {
        "src": "contracts\\UpgradeableHYAXRewards.sol:19",
        "version": {
          "withMetadata": "7b477ae6b52f605c02bbb35dd22aa3f228f009a758fad0ff089eebb3b698c478",
          "withoutMetadata": "44b6c7d49dbf6a52a034760cd6b24a072132184eec22f84ef7e32fe717b55cf2",
          "linkedWithoutMetadata": "44b6c7d49dbf6a52a034760cd6b24a072132184eec22f84ef7e32fe717b55cf2"
        },
        "inherit": [
          "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "addWalletToWhitelist(address,bool,uint256)",
          "updateWhitelistStatus(address,bool)",
          "updateBlacklistStatus(address,bool)",
          "fundSmartContract(uint8,uint256)",
          "withdrawGrowthTokens()",
          "withdrawTeamTokens()",
          "calculateYearForTeamTokens()",
          "updateRewardsBatch(address[],uint256[])",
          "updateRewardsSingle(address,uint256)",
          "withdrawRewardTokens()",
          "withdrawTokensToBurn(uint8,uint256)",
          "updateWhiteListerAddress(address)",
          "updateRewardsUpdaterAddress(address)",
          "updateHyaxTokenAddress(address)",
          "pause()",
          "unpause()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UpgradeableHYAXRewards",
            "src": "contracts\\UpgradeableHYAXRewards.sol:202"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "_paused",
              "offset": 20,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:37"
            },
            {
              "label": "hyaxTokenAddress",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:100"
            },
            {
              "label": "hyaxToken",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(ERC20TokenInterface)402",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:102"
            },
            {
              "label": "growthTokensFunded",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:114"
            },
            {
              "label": "growthTokensWithdrawn",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:116"
            },
            {
              "label": "growthTokensInSmartContract",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:118"
            },
            {
              "label": "growthTokensLastWithdrawalTime",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:120"
            },
            {
              "label": "growthTokensStartFundingTime",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:122"
            },
            {
              "label": "growthTokensFundingStarted",
              "offset": 0,
              "slot": "9",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:124"
            },
            {
              "label": "teamTokensFunded",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:135"
            },
            {
              "label": "teamTokensWithdrawn",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:137"
            },
            {
              "label": "teamTokensInSmartContract",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:139"
            },
            {
              "label": "teamTokensLastWithdrawalTime",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:141"
            },
            {
              "label": "teamTokensStartFundingTime",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:143"
            },
            {
              "label": "teamTokensFundingStarted",
              "offset": 0,
              "slot": "15",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:145"
            },
            {
              "label": "rewardTokensFunded",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:158"
            },
            {
              "label": "rewardTokensDistributed",
              "offset": 0,
              "slot": "17",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:160"
            },
            {
              "label": "rewardTokensWithdrawn",
              "offset": 0,
              "slot": "18",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:162"
            },
            {
              "label": "rewardTokensInSmartContract",
              "offset": 0,
              "slot": "19",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:164"
            },
            {
              "label": "rewardTokensStartFundingTime",
              "offset": 0,
              "slot": "20",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:166"
            },
            {
              "label": "rewardTokensFundingStarted",
              "offset": 0,
              "slot": "21",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:168"
            },
            {
              "label": "whiteListerAddress",
              "offset": 1,
              "slot": "21",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:173"
            },
            {
              "label": "rewardsUpdaterAddress",
              "offset": 0,
              "slot": "22",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:175"
            },
            {
              "label": "wallets",
              "offset": 0,
              "slot": "23",
              "type": "t_mapping(t_address,t_struct(WalletData)624_storage)",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:199"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ERC20TokenInterface)402": {
              "label": "contract ERC20TokenInterface",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_struct(WalletData)624_storage)": {
              "label": "mapping(address => struct UpgradeableHYAXRewards.WalletData)",
              "numberOfBytes": "32"
            },
            "t_struct(WalletData)624_storage": {
              "label": "struct UpgradeableHYAXRewards.WalletData",
              "members": [
                {
                  "label": "hyaxHoldingAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "hyaxHoldingAmountAtWhitelistTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "totalHyaxRewardsAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "currentRewardsAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "rewardsWithdrawn",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "addedToWhitelistTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "tokenWithdrawalTimes",
                  "type": "t_uint8",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "lastRewardsWithdrawalTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "lastRewardsUpdateTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "isTeamWallet",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "isWhitelisted",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "9"
                },
                {
                  "label": "isBlacklisted",
                  "type": "t_bool",
                  "offset": 2,
                  "slot": "9"
                }
              ],
              "numberOfBytes": "320"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Pausable.sol:Pausable": {
        "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:17",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Pausable",
            "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:43"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_paused",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UpgradeableHYAXRewards.sol:ERC20TokenInterface": {
        "src": "contracts\\UpgradeableHYAXRewards.sol:12",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "balanceOf(address)",
          "symbol()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UpgradeableHYAXRewards.sol:UpgradeableHYAXRewards": {
        "src": "contracts\\UpgradeableHYAXRewards.sol:19",
        "version": {
          "withMetadata": "d7d845847d36d256a84df053f33c19ea27b1cc71cb8a061c27d92183ab5e837a",
          "withoutMetadata": "fd0bc6f6d546d6a527091765db81f4d59243ad2908b18ceb86c8bb1264318faa",
          "linkedWithoutMetadata": "fd0bc6f6d546d6a527091765db81f4d59243ad2908b18ceb86c8bb1264318faa"
        },
        "inherit": [
          "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "addWalletToWhitelist(address,bool,uint256)",
          "updateWhitelistStatus(address,bool)",
          "updateBlacklistStatus(address,bool)",
          "fundSmartContract(uint8,uint256)",
          "withdrawGrowthTokens()",
          "withdrawTeamTokens()",
          "calculateYearForTeamTokens()",
          "updateRewardsBatch(address[],uint256[])",
          "updateRewardsSingle(address,uint256)",
          "withdrawRewardTokens()",
          "withdrawTokensToBurn(uint8,uint256)",
          "updateWhiteListerAddress(address)",
          "updateRewardsUpdaterAddress(address)",
          "updateHyaxTokenAddress(address)",
          "pause()",
          "unpause()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UpgradeableHYAXRewards",
            "src": "contracts\\UpgradeableHYAXRewards.sol:202"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "_paused",
              "offset": 20,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:37"
            },
            {
              "label": "hyaxTokenAddress",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:100"
            },
            {
              "label": "hyaxToken",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(ERC20TokenInterface)402",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:102"
            },
            {
              "label": "growthTokensFunded",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:114"
            },
            {
              "label": "growthTokensWithdrawn",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:116"
            },
            {
              "label": "growthTokensInSmartContract",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:118"
            },
            {
              "label": "growthTokensLastWithdrawalTime",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:120"
            },
            {
              "label": "growthTokensStartFundingTime",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:122"
            },
            {
              "label": "growthTokensFundingStarted",
              "offset": 0,
              "slot": "9",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:124"
            },
            {
              "label": "teamTokensFunded",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:135"
            },
            {
              "label": "teamTokensWithdrawn",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:137"
            },
            {
              "label": "teamTokensInSmartContract",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:139"
            },
            {
              "label": "teamTokensLastWithdrawalTime",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:141"
            },
            {
              "label": "teamTokensStartFundingTime",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:143"
            },
            {
              "label": "teamTokensFundingStarted",
              "offset": 0,
              "slot": "15",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:145"
            },
            {
              "label": "rewardTokensFunded",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:158"
            },
            {
              "label": "rewardTokensDistributed",
              "offset": 0,
              "slot": "17",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:160"
            },
            {
              "label": "rewardTokensWithdrawn",
              "offset": 0,
              "slot": "18",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:162"
            },
            {
              "label": "rewardTokensInSmartContract",
              "offset": 0,
              "slot": "19",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:164"
            },
            {
              "label": "rewardTokensStartFundingTime",
              "offset": 0,
              "slot": "20",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:166"
            },
            {
              "label": "rewardTokensFundingStarted",
              "offset": 0,
              "slot": "21",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:168"
            },
            {
              "label": "whiteListerAddress",
              "offset": 1,
              "slot": "21",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:173"
            },
            {
              "label": "rewardsUpdaterAddress",
              "offset": 0,
              "slot": "22",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:175"
            },
            {
              "label": "wallets",
              "offset": 0,
              "slot": "23",
              "type": "t_mapping(t_address,t_struct(WalletData)624_storage)",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:199"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ERC20TokenInterface)402": {
              "label": "contract ERC20TokenInterface",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_struct(WalletData)624_storage)": {
              "label": "mapping(address => struct UpgradeableHYAXRewards.WalletData)",
              "numberOfBytes": "32"
            },
            "t_struct(WalletData)624_storage": {
              "label": "struct UpgradeableHYAXRewards.WalletData",
              "members": [
                {
                  "label": "hyaxHoldingAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "hyaxHoldingAmountAtWhitelistTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "totalHyaxRewardsAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "currentRewardsAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "rewardsWithdrawn",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "addedToWhitelistTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "tokenWithdrawalTimes",
                  "type": "t_uint8",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "lastRewardsWithdrawalTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "lastRewardsUpdateTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "isTeamWallet",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "isWhitelisted",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "9"
                },
                {
                  "label": "isBlacklisted",
                  "type": "t_bool",
                  "offset": 2,
                  "slot": "9"
                }
              ],
              "numberOfBytes": "320"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Pausable.sol:Pausable": {
        "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:17",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Pausable",
            "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:43"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_paused",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UpgradeableHYAXRewards.sol:ERC20TokenInterface": {
        "src": "contracts\\UpgradeableHYAXRewards.sol:12",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "balanceOf(address)",
          "symbol()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UpgradeableHYAXRewards.sol:UpgradeableHYAXRewards": {
        "src": "contracts\\UpgradeableHYAXRewards.sol:19",
        "version": {
          "withMetadata": "597956906448f243d0c758ee69efdda4172ad14fe6160eb2ce5bfb5fbeec4aa5",
          "withoutMetadata": "fd0bc6f6d546d6a527091765db81f4d59243ad2908b18ceb86c8bb1264318faa",
          "linkedWithoutMetadata": "fd0bc6f6d546d6a527091765db81f4d59243ad2908b18ceb86c8bb1264318faa"
        },
        "inherit": [
          "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "addWalletToWhitelist(address,bool,uint256)",
          "updateWhitelistStatus(address,bool)",
          "updateBlacklistStatus(address,bool)",
          "fundSmartContract(uint8,uint256)",
          "withdrawGrowthTokens()",
          "withdrawTeamTokens()",
          "calculateYearForTeamTokens()",
          "updateRewardsBatch(address[],uint256[])",
          "updateRewardsSingle(address,uint256)",
          "withdrawRewardTokens()",
          "withdrawTokensToBurn(uint8,uint256)",
          "updateWhiteListerAddress(address)",
          "updateRewardsUpdaterAddress(address)",
          "updateHyaxTokenAddress(address)",
          "pause()",
          "unpause()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UpgradeableHYAXRewards",
            "src": "contracts\\UpgradeableHYAXRewards.sol:202"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "_paused",
              "offset": 20,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:37"
            },
            {
              "label": "hyaxTokenAddress",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:100"
            },
            {
              "label": "hyaxToken",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(ERC20TokenInterface)402",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:102"
            },
            {
              "label": "growthTokensFunded",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:114"
            },
            {
              "label": "growthTokensWithdrawn",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:116"
            },
            {
              "label": "growthTokensInSmartContract",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:118"
            },
            {
              "label": "growthTokensLastWithdrawalTime",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:120"
            },
            {
              "label": "growthTokensStartFundingTime",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:122"
            },
            {
              "label": "growthTokensFundingStarted",
              "offset": 0,
              "slot": "9",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:124"
            },
            {
              "label": "teamTokensFunded",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:135"
            },
            {
              "label": "teamTokensWithdrawn",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:137"
            },
            {
              "label": "teamTokensInSmartContract",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:139"
            },
            {
              "label": "teamTokensLastWithdrawalTime",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:141"
            },
            {
              "label": "teamTokensStartFundingTime",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:143"
            },
            {
              "label": "teamTokensFundingStarted",
              "offset": 0,
              "slot": "15",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:145"
            },
            {
              "label": "rewardTokensFunded",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:158"
            },
            {
              "label": "rewardTokensDistributed",
              "offset": 0,
              "slot": "17",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:160"
            },
            {
              "label": "rewardTokensWithdrawn",
              "offset": 0,
              "slot": "18",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:162"
            },
            {
              "label": "rewardTokensInSmartContract",
              "offset": 0,
              "slot": "19",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:164"
            },
            {
              "label": "rewardTokensStartFundingTime",
              "offset": 0,
              "slot": "20",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:166"
            },
            {
              "label": "rewardTokensFundingStarted",
              "offset": 0,
              "slot": "21",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:168"
            },
            {
              "label": "whiteListerAddress",
              "offset": 1,
              "slot": "21",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:173"
            },
            {
              "label": "rewardsUpdaterAddress",
              "offset": 0,
              "slot": "22",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:175"
            },
            {
              "label": "wallets",
              "offset": 0,
              "slot": "23",
              "type": "t_mapping(t_address,t_struct(WalletData)624_storage)",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:199"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ERC20TokenInterface)402": {
              "label": "contract ERC20TokenInterface",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_struct(WalletData)624_storage)": {
              "label": "mapping(address => struct UpgradeableHYAXRewards.WalletData)",
              "numberOfBytes": "32"
            },
            "t_struct(WalletData)624_storage": {
              "label": "struct UpgradeableHYAXRewards.WalletData",
              "members": [
                {
                  "label": "hyaxHoldingAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "hyaxHoldingAmountAtWhitelistTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "totalHyaxRewardsAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "currentRewardsAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "rewardsWithdrawn",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "addedToWhitelistTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "tokenWithdrawalTimes",
                  "type": "t_uint8",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "lastRewardsWithdrawalTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "lastRewardsUpdateTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "isTeamWallet",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "isWhitelisted",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "9"
                },
                {
                  "label": "isBlacklisted",
                  "type": "t_bool",
                  "offset": 2,
                  "slot": "9"
                }
              ],
              "numberOfBytes": "320"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Pausable.sol:Pausable": {
        "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:17",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Pausable",
            "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:43"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_paused",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UpgradeableHYAXRewards.sol:ERC20TokenInterface": {
        "src": "contracts\\UpgradeableHYAXRewards.sol:12",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "balanceOf(address)",
          "symbol()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UpgradeableHYAXRewards.sol:UpgradeableHYAXRewards": {
        "src": "contracts\\UpgradeableHYAXRewards.sol:19",
        "version": {
          "withMetadata": "31b05f73a6e85a65d150685569e2501b0f01ce967b67f7f1ef0fb78290162880",
          "withoutMetadata": "fd0bc6f6d546d6a527091765db81f4d59243ad2908b18ceb86c8bb1264318faa",
          "linkedWithoutMetadata": "fd0bc6f6d546d6a527091765db81f4d59243ad2908b18ceb86c8bb1264318faa"
        },
        "inherit": [
          "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "addWalletToWhitelist(address,bool,uint256)",
          "updateWhitelistStatus(address,bool)",
          "updateBlacklistStatus(address,bool)",
          "fundSmartContract(uint8,uint256)",
          "withdrawGrowthTokens()",
          "withdrawTeamTokens()",
          "calculateYearForTeamTokens()",
          "updateRewardsBatch(address[],uint256[])",
          "updateRewardsSingle(address,uint256)",
          "withdrawRewardTokens()",
          "withdrawTokensToBurn(uint8,uint256)",
          "updateWhiteListerAddress(address)",
          "updateRewardsUpdaterAddress(address)",
          "updateHyaxTokenAddress(address)",
          "pause()",
          "unpause()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UpgradeableHYAXRewards",
            "src": "contracts\\UpgradeableHYAXRewards.sol:204"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "_paused",
              "offset": 20,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:37"
            },
            {
              "label": "hyaxTokenAddress",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:101"
            },
            {
              "label": "hyaxToken",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(ERC20TokenInterface)402",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:103"
            },
            {
              "label": "growthTokensFunded",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:116"
            },
            {
              "label": "growthTokensWithdrawn",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:118"
            },
            {
              "label": "growthTokensInSmartContract",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:120"
            },
            {
              "label": "growthTokensLastWithdrawalTime",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:122"
            },
            {
              "label": "growthTokensStartFundingTime",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:124"
            },
            {
              "label": "growthTokensFundingStarted",
              "offset": 0,
              "slot": "9",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:126"
            },
            {
              "label": "teamTokensFunded",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:137"
            },
            {
              "label": "teamTokensWithdrawn",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:139"
            },
            {
              "label": "teamTokensInSmartContract",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:141"
            },
            {
              "label": "teamTokensLastWithdrawalTime",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:143"
            },
            {
              "label": "teamTokensStartFundingTime",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:145"
            },
            {
              "label": "teamTokensFundingStarted",
              "offset": 0,
              "slot": "15",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:147"
            },
            {
              "label": "rewardTokensFunded",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:160"
            },
            {
              "label": "rewardTokensDistributed",
              "offset": 0,
              "slot": "17",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:162"
            },
            {
              "label": "rewardTokensWithdrawn",
              "offset": 0,
              "slot": "18",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:164"
            },
            {
              "label": "rewardTokensInSmartContract",
              "offset": 0,
              "slot": "19",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:166"
            },
            {
              "label": "rewardTokensStartFundingTime",
              "offset": 0,
              "slot": "20",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:168"
            },
            {
              "label": "rewardTokensFundingStarted",
              "offset": 0,
              "slot": "21",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:170"
            },
            {
              "label": "whiteListerAddress",
              "offset": 1,
              "slot": "21",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:175"
            },
            {
              "label": "rewardsUpdaterAddress",
              "offset": 0,
              "slot": "22",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:177"
            },
            {
              "label": "wallets",
              "offset": 0,
              "slot": "23",
              "type": "t_mapping(t_address,t_struct(WalletData)624_storage)",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:201"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ERC20TokenInterface)402": {
              "label": "contract ERC20TokenInterface",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_struct(WalletData)624_storage)": {
              "label": "mapping(address => struct UpgradeableHYAXRewards.WalletData)",
              "numberOfBytes": "32"
            },
            "t_struct(WalletData)624_storage": {
              "label": "struct UpgradeableHYAXRewards.WalletData",
              "members": [
                {
                  "label": "hyaxHoldingAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "hyaxHoldingAmountAtWhitelistTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "totalHyaxRewardsAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "currentRewardsAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "rewardsWithdrawn",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "addedToWhitelistTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "tokenWithdrawalTimes",
                  "type": "t_uint8",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "lastRewardsWithdrawalTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "lastRewardsUpdateTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "isTeamWallet",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "isWhitelisted",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "9"
                },
                {
                  "label": "isBlacklisted",
                  "type": "t_bool",
                  "offset": 2,
                  "slot": "9"
                }
              ],
              "numberOfBytes": "320"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Pausable.sol:Pausable": {
        "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:17",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Pausable",
            "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:43"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_paused",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UpgradeableHYAXRewards.sol:ERC20TokenInterface": {
        "src": "contracts\\UpgradeableHYAXRewards.sol:12",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "balanceOf(address)",
          "symbol()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UpgradeableHYAXRewards.sol:UpgradeableHYAXRewards": {
        "src": "contracts\\UpgradeableHYAXRewards.sol:19",
        "version": {
          "withMetadata": "176a738cc402a4ecc466eef4485924d367ec1a471422d7e6b6c0fa203195dea0",
          "withoutMetadata": "2c0068743533145a36165ebf4d0a20b70f73dcd5f32e8f657efe34a97e8ed169",
          "linkedWithoutMetadata": "2c0068743533145a36165ebf4d0a20b70f73dcd5f32e8f657efe34a97e8ed169"
        },
        "inherit": [
          "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "addWalletToWhitelist(address,bool,uint256)",
          "updateWhitelistStatus(address,bool)",
          "updateBlacklistStatus(address,bool)",
          "fundSmartContract(uint8,uint256)",
          "withdrawGrowthTokens()",
          "withdrawTeamTokens()",
          "calculateYearForTeamTokens()",
          "updateRewardsBatch(address[],uint256[])",
          "updateRewardsSingle(address,uint256)",
          "withdrawRewardTokens()",
          "withdrawTokensToBurn(uint8,uint256)",
          "updateWhiteListerAddress(address)",
          "updateRewardsUpdaterAddress(address)",
          "updateHyaxTokenAddress(address)",
          "pause()",
          "unpause()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UpgradeableHYAXRewards",
            "src": "contracts\\UpgradeableHYAXRewards.sol:204"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "_paused",
              "offset": 20,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:37"
            },
            {
              "label": "hyaxTokenAddress",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:101"
            },
            {
              "label": "hyaxToken",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(ERC20TokenInterface)402",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:103"
            },
            {
              "label": "growthTokensFunded",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:116"
            },
            {
              "label": "growthTokensWithdrawn",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:118"
            },
            {
              "label": "growthTokensInSmartContract",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:120"
            },
            {
              "label": "growthTokensLastWithdrawalTime",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:122"
            },
            {
              "label": "growthTokensStartFundingTime",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:124"
            },
            {
              "label": "growthTokensFundingStarted",
              "offset": 0,
              "slot": "9",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:126"
            },
            {
              "label": "teamTokensFunded",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:137"
            },
            {
              "label": "teamTokensWithdrawn",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:139"
            },
            {
              "label": "teamTokensInSmartContract",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:141"
            },
            {
              "label": "teamTokensLastWithdrawalTime",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:143"
            },
            {
              "label": "teamTokensStartFundingTime",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:145"
            },
            {
              "label": "teamTokensFundingStarted",
              "offset": 0,
              "slot": "15",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:147"
            },
            {
              "label": "rewardTokensFunded",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:160"
            },
            {
              "label": "rewardTokensDistributed",
              "offset": 0,
              "slot": "17",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:162"
            },
            {
              "label": "rewardTokensWithdrawn",
              "offset": 0,
              "slot": "18",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:164"
            },
            {
              "label": "rewardTokensInSmartContract",
              "offset": 0,
              "slot": "19",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:166"
            },
            {
              "label": "rewardTokensStartFundingTime",
              "offset": 0,
              "slot": "20",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:168"
            },
            {
              "label": "rewardTokensFundingStarted",
              "offset": 0,
              "slot": "21",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:170"
            },
            {
              "label": "whiteListerAddress",
              "offset": 1,
              "slot": "21",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:175"
            },
            {
              "label": "rewardsUpdaterAddress",
              "offset": 0,
              "slot": "22",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:177"
            },
            {
              "label": "wallets",
              "offset": 0,
              "slot": "23",
              "type": "t_mapping(t_address,t_struct(WalletData)624_storage)",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:201"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ERC20TokenInterface)402": {
              "label": "contract ERC20TokenInterface",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_struct(WalletData)624_storage)": {
              "label": "mapping(address => struct UpgradeableHYAXRewards.WalletData)",
              "numberOfBytes": "32"
            },
            "t_struct(WalletData)624_storage": {
              "label": "struct UpgradeableHYAXRewards.WalletData",
              "members": [
                {
                  "label": "hyaxHoldingAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "hyaxHoldingAmountAtWhitelistTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "totalHyaxRewardsAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "currentRewardsAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "rewardsWithdrawn",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "addedToWhitelistTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "tokenWithdrawalTimes",
                  "type": "t_uint8",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "lastRewardsWithdrawalTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "lastRewardsUpdateTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "isTeamWallet",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "isWhitelisted",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "9"
                },
                {
                  "label": "isBlacklisted",
                  "type": "t_bool",
                  "offset": 2,
                  "slot": "9"
                }
              ],
              "numberOfBytes": "320"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Pausable.sol:Pausable": {
        "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:17",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Pausable",
            "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:43"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_paused",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UpgradeableHYAXRewards.sol:ERC20TokenInterface": {
        "src": "contracts\\UpgradeableHYAXRewards.sol:12",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "balanceOf(address)",
          "symbol()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UpgradeableHYAXRewards.sol:UpgradeableHYAXRewards": {
        "src": "contracts\\UpgradeableHYAXRewards.sol:19",
        "version": {
          "withMetadata": "6599fe67bf4b89ffe104b9de8c17b2713c0beae61556a569088365b41dc7a66b",
          "withoutMetadata": "163356378adc3e7fee7b4b3525f1e382f6e91c26868fe106c600043ad39df213",
          "linkedWithoutMetadata": "163356378adc3e7fee7b4b3525f1e382f6e91c26868fe106c600043ad39df213"
        },
        "inherit": [
          "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "addWalletToWhitelist(address,bool,uint256)",
          "updateWhitelistStatus(address,bool)",
          "updateBlacklistStatus(address,bool)",
          "fundSmartContract(uint8,uint256)",
          "withdrawGrowthTokens()",
          "withdrawTeamTokens()",
          "calculateYearForTeamTokens()",
          "updateRewardsBatch(address[],uint256[])",
          "updateRewardsSingle(address,uint256)",
          "withdrawRewardTokens()",
          "withdrawTokensToBurn(uint8,uint256)",
          "updateWhiteListerAddress(address)",
          "updateRewardsUpdaterAddress(address)",
          "updateHyaxTokenAddress(address)",
          "pause()",
          "unpause()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UpgradeableHYAXRewards",
            "src": "contracts\\UpgradeableHYAXRewards.sol:204"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "_paused",
              "offset": 20,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:37"
            },
            {
              "label": "hyaxTokenAddress",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:101"
            },
            {
              "label": "hyaxToken",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(ERC20TokenInterface)402",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:103"
            },
            {
              "label": "growthTokensFunded",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:116"
            },
            {
              "label": "growthTokensWithdrawn",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:118"
            },
            {
              "label": "growthTokensInSmartContract",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:120"
            },
            {
              "label": "growthTokensLastWithdrawalTime",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:122"
            },
            {
              "label": "growthTokensStartFundingTime",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:124"
            },
            {
              "label": "growthTokensFundingStarted",
              "offset": 0,
              "slot": "9",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:126"
            },
            {
              "label": "teamTokensFunded",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:137"
            },
            {
              "label": "teamTokensWithdrawn",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:139"
            },
            {
              "label": "teamTokensInSmartContract",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:141"
            },
            {
              "label": "teamTokensLastWithdrawalTime",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:143"
            },
            {
              "label": "teamTokensStartFundingTime",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:145"
            },
            {
              "label": "teamTokensFundingStarted",
              "offset": 0,
              "slot": "15",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:147"
            },
            {
              "label": "rewardTokensFunded",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:160"
            },
            {
              "label": "rewardTokensDistributed",
              "offset": 0,
              "slot": "17",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:162"
            },
            {
              "label": "rewardTokensWithdrawn",
              "offset": 0,
              "slot": "18",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:164"
            },
            {
              "label": "rewardTokensInSmartContract",
              "offset": 0,
              "slot": "19",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:166"
            },
            {
              "label": "rewardTokensStartFundingTime",
              "offset": 0,
              "slot": "20",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:168"
            },
            {
              "label": "rewardTokensFundingStarted",
              "offset": 0,
              "slot": "21",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:170"
            },
            {
              "label": "whiteListerAddress",
              "offset": 1,
              "slot": "21",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:175"
            },
            {
              "label": "rewardsUpdaterAddress",
              "offset": 0,
              "slot": "22",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:177"
            },
            {
              "label": "wallets",
              "offset": 0,
              "slot": "23",
              "type": "t_mapping(t_address,t_struct(WalletData)624_storage)",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:201"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ERC20TokenInterface)402": {
              "label": "contract ERC20TokenInterface",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_struct(WalletData)624_storage)": {
              "label": "mapping(address => struct UpgradeableHYAXRewards.WalletData)",
              "numberOfBytes": "32"
            },
            "t_struct(WalletData)624_storage": {
              "label": "struct UpgradeableHYAXRewards.WalletData",
              "members": [
                {
                  "label": "hyaxHoldingAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "hyaxHoldingAmountAtWhitelistTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "totalHyaxRewardsAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "currentRewardsAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "rewardsWithdrawn",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "addedToWhitelistTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "tokenWithdrawalTimes",
                  "type": "t_uint8",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "lastRewardsWithdrawalTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "lastRewardsUpdateTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "isTeamWallet",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "isWhitelisted",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "9"
                },
                {
                  "label": "isBlacklisted",
                  "type": "t_bool",
                  "offset": 2,
                  "slot": "9"
                }
              ],
              "numberOfBytes": "320"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Pausable.sol:Pausable": {
        "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:17",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Pausable",
            "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:43"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_paused",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UpgradeableHYAXRewards.sol:ERC20TokenInterface": {
        "src": "contracts\\UpgradeableHYAXRewards.sol:12",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "balanceOf(address)",
          "symbol()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UpgradeableHYAXRewards.sol:UpgradeableHYAXRewards": {
        "src": "contracts\\UpgradeableHYAXRewards.sol:19",
        "version": {
          "withMetadata": "0e36d32b6fa6f824adf21592d85b0c85316fd8e3d7a14b46c1c100b68c44df0a",
          "withoutMetadata": "3081a28ea9d8c2894c203c8b1688d6d498465b8d3f131efb1673a61d6eb74fed",
          "linkedWithoutMetadata": "3081a28ea9d8c2894c203c8b1688d6d498465b8d3f131efb1673a61d6eb74fed"
        },
        "inherit": [
          "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "addWalletToWhitelist(address,bool,string,uint256)",
          "updateWhitelistStatus(address,bool)",
          "updateBlacklistStatus(address,bool)",
          "fundSmartContract(uint8,uint256)",
          "withdrawGrowthTokens()",
          "withdrawTeamTokens()",
          "calculateYearForTeamTokens()",
          "updateRewardsBatch(address[],uint256[])",
          "updateRewardsSingle(address,uint256)",
          "withdrawRewardTokens()",
          "withdrawTokensToBurn(uint8,uint256)",
          "updateWhiteListerAddress(address)",
          "updateRewardsUpdaterAddress(address)",
          "updateHyaxTokenAddress(address)",
          "pause()",
          "unpause()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UpgradeableHYAXRewards",
            "src": "contracts\\UpgradeableHYAXRewards.sol:207"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "_paused",
              "offset": 20,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:37"
            },
            {
              "label": "hyaxTokenAddress",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:102"
            },
            {
              "label": "hyaxToken",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(ERC20TokenInterface)402",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:104"
            },
            {
              "label": "growthTokensFunded",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:117"
            },
            {
              "label": "growthTokensWithdrawn",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:119"
            },
            {
              "label": "growthTokensInSmartContract",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:121"
            },
            {
              "label": "growthTokensLastWithdrawalTime",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:123"
            },
            {
              "label": "growthTokensStartFundingTime",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:125"
            },
            {
              "label": "growthTokensFundingStarted",
              "offset": 0,
              "slot": "9",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:127"
            },
            {
              "label": "teamTokensFunded",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:138"
            },
            {
              "label": "teamTokensWithdrawn",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:140"
            },
            {
              "label": "teamTokensInSmartContract",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:142"
            },
            {
              "label": "teamTokensLastWithdrawalTime",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:144"
            },
            {
              "label": "teamTokensStartFundingTime",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:146"
            },
            {
              "label": "teamTokensFundingStarted",
              "offset": 0,
              "slot": "15",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:148"
            },
            {
              "label": "rewardTokensFunded",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:161"
            },
            {
              "label": "rewardTokensDistributed",
              "offset": 0,
              "slot": "17",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:163"
            },
            {
              "label": "rewardTokensWithdrawn",
              "offset": 0,
              "slot": "18",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:165"
            },
            {
              "label": "rewardTokensInSmartContract",
              "offset": 0,
              "slot": "19",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:167"
            },
            {
              "label": "rewardTokensStartFundingTime",
              "offset": 0,
              "slot": "20",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:169"
            },
            {
              "label": "rewardTokensFundingStarted",
              "offset": 0,
              "slot": "21",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:171"
            },
            {
              "label": "whiteListerAddress",
              "offset": 1,
              "slot": "21",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:176"
            },
            {
              "label": "rewardsUpdaterAddress",
              "offset": 0,
              "slot": "22",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:178"
            },
            {
              "label": "wallets",
              "offset": 0,
              "slot": "23",
              "type": "t_mapping(t_address,t_struct(WalletData)628_storage)",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:204"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ERC20TokenInterface)402": {
              "label": "contract ERC20TokenInterface",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_struct(WalletData)628_storage)": {
              "label": "mapping(address => struct UpgradeableHYAXRewards.WalletData)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(WalletData)628_storage": {
              "label": "struct UpgradeableHYAXRewards.WalletData",
              "members": [
                {
                  "label": "hyaxHoldingAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "hyaxHoldingAmountAtWhitelistTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "totalHyaxRewardsAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "currentRewardsAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "rewardsWithdrawn",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "bitcoinRewardsAddress",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "addedToWhitelistTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "tokenWithdrawalTimes",
                  "type": "t_uint8",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "lastRewardsWithdrawalTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "lastRewardsUpdateTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "isTeamWallet",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "10"
                },
                {
                  "label": "isWhitelisted",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "10"
                },
                {
                  "label": "isBlacklisted",
                  "type": "t_bool",
                  "offset": 2,
                  "slot": "10"
                }
              ],
              "numberOfBytes": "352"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Pausable.sol:Pausable": {
        "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:17",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Pausable",
            "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:43"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_paused",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UpgradeableHYAXRewards.sol:ERC20TokenInterface": {
        "src": "contracts\\UpgradeableHYAXRewards.sol:12",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "balanceOf(address)",
          "symbol()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UpgradeableHYAXRewards.sol:UpgradeableHYAXRewards": {
        "src": "contracts\\UpgradeableHYAXRewards.sol:19",
        "version": {
          "withMetadata": "e9ebcb2d27427f0824682f55e69614485c530b1b2a9093787b2dd449a5dfb67d",
          "withoutMetadata": "87f7e0b83cafc557e769fa1e2ad56f5211abe0d943a97f541cba2e24de2e0a7d",
          "linkedWithoutMetadata": "87f7e0b83cafc557e769fa1e2ad56f5211abe0d943a97f541cba2e24de2e0a7d"
        },
        "inherit": [
          "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "addWalletToWhitelist(address,bool,string,uint256)",
          "updateWhitelistStatus(address,bool)",
          "updateBlacklistStatus(address,bool)",
          "fundSmartContract(uint8,uint256)",
          "withdrawGrowthTokens()",
          "withdrawTeamTokens()",
          "calculateYearForTeamTokens()",
          "updateRewardsBatch(address[],uint256[])",
          "updateRewardsSingle(address,uint256)",
          "withdrawRewardTokens()",
          "withdrawTokensToBurn(uint8,uint256)",
          "updateWhiteListerAddress(address)",
          "updateRewardsUpdaterAddress(address)",
          "updateHyaxTokenAddress(address)",
          "pause()",
          "unpause()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UpgradeableHYAXRewards",
            "src": "contracts\\UpgradeableHYAXRewards.sol:207"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "_paused",
              "offset": 20,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:37"
            },
            {
              "label": "hyaxTokenAddress",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:102"
            },
            {
              "label": "hyaxToken",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(ERC20TokenInterface)402",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:104"
            },
            {
              "label": "growthTokensFunded",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:117"
            },
            {
              "label": "growthTokensWithdrawn",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:119"
            },
            {
              "label": "growthTokensInSmartContract",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:121"
            },
            {
              "label": "growthTokensLastWithdrawalTime",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:123"
            },
            {
              "label": "growthTokensStartFundingTime",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:125"
            },
            {
              "label": "growthTokensFundingStarted",
              "offset": 0,
              "slot": "9",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:127"
            },
            {
              "label": "teamTokensFunded",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:138"
            },
            {
              "label": "teamTokensWithdrawn",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:140"
            },
            {
              "label": "teamTokensInSmartContract",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:142"
            },
            {
              "label": "teamTokensLastWithdrawalTime",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:144"
            },
            {
              "label": "teamTokensStartFundingTime",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:146"
            },
            {
              "label": "teamTokensFundingStarted",
              "offset": 0,
              "slot": "15",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:148"
            },
            {
              "label": "rewardTokensFunded",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:161"
            },
            {
              "label": "rewardTokensDistributed",
              "offset": 0,
              "slot": "17",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:163"
            },
            {
              "label": "rewardTokensWithdrawn",
              "offset": 0,
              "slot": "18",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:165"
            },
            {
              "label": "rewardTokensInSmartContract",
              "offset": 0,
              "slot": "19",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:167"
            },
            {
              "label": "rewardTokensStartFundingTime",
              "offset": 0,
              "slot": "20",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:169"
            },
            {
              "label": "rewardTokensFundingStarted",
              "offset": 0,
              "slot": "21",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:171"
            },
            {
              "label": "whiteListerAddress",
              "offset": 1,
              "slot": "21",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:176"
            },
            {
              "label": "rewardsUpdaterAddress",
              "offset": 0,
              "slot": "22",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:178"
            },
            {
              "label": "wallets",
              "offset": 0,
              "slot": "23",
              "type": "t_mapping(t_address,t_struct(WalletData)628_storage)",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:204"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ERC20TokenInterface)402": {
              "label": "contract ERC20TokenInterface",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_struct(WalletData)628_storage)": {
              "label": "mapping(address => struct UpgradeableHYAXRewards.WalletData)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(WalletData)628_storage": {
              "label": "struct UpgradeableHYAXRewards.WalletData",
              "members": [
                {
                  "label": "hyaxHoldingAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "hyaxHoldingAmountAtWhitelistTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "totalHyaxRewardsAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "currentRewardsAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "rewardsWithdrawn",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "bitcoinRewardsAddress",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "addedToWhitelistTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "tokenWithdrawalTimes",
                  "type": "t_uint8",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "lastRewardsWithdrawalTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "lastRewardsUpdateTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "isTeamWallet",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "10"
                },
                {
                  "label": "isWhitelisted",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "10"
                },
                {
                  "label": "isBlacklisted",
                  "type": "t_bool",
                  "offset": 2,
                  "slot": "10"
                }
              ],
              "numberOfBytes": "352"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Pausable.sol:Pausable": {
        "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:17",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Pausable",
            "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:43"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_paused",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UpgradeableHYAXRewards.sol:ERC20TokenInterface": {
        "src": "contracts\\UpgradeableHYAXRewards.sol:12",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "balanceOf(address)",
          "symbol()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UpgradeableHYAXRewards.sol:UpgradeableHYAXRewards": {
        "src": "contracts\\UpgradeableHYAXRewards.sol:19",
        "version": {
          "withMetadata": "43bbabcafd12e2481183907260f207340684362429845c49e2bc62e63684de5f",
          "withoutMetadata": "4d33e3ace8e3661083da28a8b202b280c55edac73e1d3ebb826b2a6c1f7ef918",
          "linkedWithoutMetadata": "4d33e3ace8e3661083da28a8b202b280c55edac73e1d3ebb826b2a6c1f7ef918"
        },
        "inherit": [
          "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "addWalletToWhitelist(address,bool,string,uint256)",
          "removeWalletFromWhitelist(address)",
          "fundSmartContract(uint8,uint256)",
          "withdrawGrowthTokens()",
          "withdrawTeamTokens()",
          "calculateYearForTeamTokens()",
          "updateRewardsBatch(address[],uint256[])",
          "updateRewardsSingle(address,uint256)",
          "withdrawRewardTokens()",
          "withdrawTokensToBurn(uint8,uint256)",
          "updateWhiteListerAddress(address)",
          "updateRewardsUpdaterAddress(address)",
          "updateHyaxTokenAddress(address)",
          "pause()",
          "unpause()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UpgradeableHYAXRewards",
            "src": "contracts\\UpgradeableHYAXRewards.sol:197"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "_paused",
              "offset": 20,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:37"
            },
            {
              "label": "hyaxTokenAddress",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:93"
            },
            {
              "label": "hyaxToken",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(ERC20TokenInterface)402",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:95"
            },
            {
              "label": "growthTokensFunded",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:108"
            },
            {
              "label": "growthTokensWithdrawn",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:110"
            },
            {
              "label": "growthTokensInSmartContract",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:112"
            },
            {
              "label": "growthTokensLastWithdrawalTime",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:114"
            },
            {
              "label": "growthTokensStartFundingTime",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:116"
            },
            {
              "label": "growthTokensFundingStarted",
              "offset": 0,
              "slot": "9",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:118"
            },
            {
              "label": "teamTokensFunded",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:129"
            },
            {
              "label": "teamTokensWithdrawn",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:131"
            },
            {
              "label": "teamTokensInSmartContract",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:133"
            },
            {
              "label": "teamTokensLastWithdrawalTime",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:135"
            },
            {
              "label": "teamTokensStartFundingTime",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:137"
            },
            {
              "label": "teamTokensFundingStarted",
              "offset": 0,
              "slot": "15",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:139"
            },
            {
              "label": "rewardTokensFunded",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:152"
            },
            {
              "label": "rewardTokensDistributed",
              "offset": 0,
              "slot": "17",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:154"
            },
            {
              "label": "rewardTokensWithdrawn",
              "offset": 0,
              "slot": "18",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:156"
            },
            {
              "label": "rewardTokensInSmartContract",
              "offset": 0,
              "slot": "19",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:158"
            },
            {
              "label": "rewardTokensStartFundingTime",
              "offset": 0,
              "slot": "20",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:160"
            },
            {
              "label": "rewardTokensFundingStarted",
              "offset": 0,
              "slot": "21",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:162"
            },
            {
              "label": "whiteListerAddress",
              "offset": 1,
              "slot": "21",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:167"
            },
            {
              "label": "rewardsUpdaterAddress",
              "offset": 0,
              "slot": "22",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:169"
            },
            {
              "label": "wallets",
              "offset": 0,
              "slot": "23",
              "type": "t_mapping(t_address,t_struct(WalletData)615_storage)",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:194"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ERC20TokenInterface)402": {
              "label": "contract ERC20TokenInterface",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_struct(WalletData)615_storage)": {
              "label": "mapping(address => struct UpgradeableHYAXRewards.WalletData)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(WalletData)615_storage": {
              "label": "struct UpgradeableHYAXRewards.WalletData",
              "members": [
                {
                  "label": "hyaxHoldingAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "hyaxHoldingAmountAtWhitelistTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "totalHyaxRewardsAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "currentRewardsAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "rewardsWithdrawn",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "bitcoinRewardsAddress",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "addedToWhitelistTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "tokenWithdrawalTimes",
                  "type": "t_uint8",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "lastRewardsWithdrawalTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "lastRewardsUpdateTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "isTeamWallet",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "10"
                },
                {
                  "label": "isWhitelisted",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "10"
                }
              ],
              "numberOfBytes": "352"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Pausable.sol:Pausable": {
        "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:17",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Pausable",
            "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:43"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_paused",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UpgradeableHYAXRewards.sol:ERC20TokenInterface": {
        "src": "contracts\\UpgradeableHYAXRewards.sol:12",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "balanceOf(address)",
          "symbol()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UpgradeableHYAXRewards.sol:UpgradeableHYAXRewards": {
        "src": "contracts\\UpgradeableHYAXRewards.sol:19",
        "version": {
          "withMetadata": "0adf12f42dd5df390940a555e895728a226f8dd605217f76939c6839f370e543",
          "withoutMetadata": "6945f8deb5ce02f90eeb0e8152e1033509d899eb5e1c62f27d5134bd27aa849a",
          "linkedWithoutMetadata": "6945f8deb5ce02f90eeb0e8152e1033509d899eb5e1c62f27d5134bd27aa849a"
        },
        "inherit": [
          "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "addWalletToWhitelist(address,bool,string,uint256)",
          "removeWalletFromWhitelist(address)",
          "fundSmartContract(uint8,uint256)",
          "withdrawGrowthTokens()",
          "withdrawTeamTokens()",
          "calculateYearForTeamTokens()",
          "updateRewardsBatch(address[],uint256[])",
          "updateRewardsSingle(address,uint256)",
          "withdrawHolderRewards()",
          "withdrawTokensToBurn(uint8,uint256)",
          "updateWhiteListerAddress(address)",
          "updateRewardsUpdaterAddress(address)",
          "updateHyaxTokenAddress(address)",
          "pause()",
          "unpause()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UpgradeableHYAXRewards",
            "src": "contracts\\UpgradeableHYAXRewards.sol:197"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "_paused",
              "offset": 20,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:37"
            },
            {
              "label": "hyaxTokenAddress",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:93"
            },
            {
              "label": "hyaxToken",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(ERC20TokenInterface)402",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:95"
            },
            {
              "label": "growthTokensFunded",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:108"
            },
            {
              "label": "growthTokensWithdrawn",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:110"
            },
            {
              "label": "growthTokensInSmartContract",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:112"
            },
            {
              "label": "growthTokensLastWithdrawalTime",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:114"
            },
            {
              "label": "growthTokensStartFundingTime",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:116"
            },
            {
              "label": "growthTokensFundingStarted",
              "offset": 0,
              "slot": "9",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:118"
            },
            {
              "label": "teamTokensFunded",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:129"
            },
            {
              "label": "teamTokensWithdrawn",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:131"
            },
            {
              "label": "teamTokensInSmartContract",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:133"
            },
            {
              "label": "teamTokensLastWithdrawalTime",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:135"
            },
            {
              "label": "teamTokensStartFundingTime",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:137"
            },
            {
              "label": "teamTokensFundingStarted",
              "offset": 0,
              "slot": "15",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:139"
            },
            {
              "label": "rewardTokensFunded",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:152"
            },
            {
              "label": "rewardTokensDistributed",
              "offset": 0,
              "slot": "17",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:154"
            },
            {
              "label": "rewardTokensWithdrawn",
              "offset": 0,
              "slot": "18",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:156"
            },
            {
              "label": "rewardTokensInSmartContract",
              "offset": 0,
              "slot": "19",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:158"
            },
            {
              "label": "rewardTokensStartFundingTime",
              "offset": 0,
              "slot": "20",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:160"
            },
            {
              "label": "rewardTokensFundingStarted",
              "offset": 0,
              "slot": "21",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:162"
            },
            {
              "label": "whiteListerAddress",
              "offset": 1,
              "slot": "21",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:167"
            },
            {
              "label": "rewardsUpdaterAddress",
              "offset": 0,
              "slot": "22",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:169"
            },
            {
              "label": "wallets",
              "offset": 0,
              "slot": "23",
              "type": "t_mapping(t_address,t_struct(WalletData)615_storage)",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:194"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ERC20TokenInterface)402": {
              "label": "contract ERC20TokenInterface",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_struct(WalletData)615_storage)": {
              "label": "mapping(address => struct UpgradeableHYAXRewards.WalletData)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(WalletData)615_storage": {
              "label": "struct UpgradeableHYAXRewards.WalletData",
              "members": [
                {
                  "label": "hyaxHoldingAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "hyaxHoldingAmountAtWhitelistTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "totalHyaxRewardsAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "currentRewardsAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "rewardsWithdrawn",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "bitcoinRewardsAddress",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "addedToWhitelistTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "tokenWithdrawalTimes",
                  "type": "t_uint8",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "lastRewardsWithdrawalTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "lastRewardsUpdateTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "isTeamWallet",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "10"
                },
                {
                  "label": "isWhitelisted",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "10"
                }
              ],
              "numberOfBytes": "352"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Pausable.sol:Pausable": {
        "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:17",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Pausable",
            "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:43"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_paused",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UpgradeableHYAXRewards.sol:ERC20TokenInterface": {
        "src": "contracts\\UpgradeableHYAXRewards.sol:12",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "balanceOf(address)",
          "symbol()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UpgradeableHYAXRewards.sol:UpgradeableHYAXRewards": {
        "src": "contracts\\UpgradeableHYAXRewards.sol:19",
        "version": {
          "withMetadata": "b9b692b75abe0bd04f6ea3f2ae233595601d4cc0946e4b27f93d3981836c3732",
          "withoutMetadata": "61c917299d0ae039c254e19e41e57aefe8227be8a4a61b8f28f67c00c5728b6c",
          "linkedWithoutMetadata": "61c917299d0ae039c254e19e41e57aefe8227be8a4a61b8f28f67c00c5728b6c"
        },
        "inherit": [
          "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "addWalletToWhitelist(address,bool,string,uint256)",
          "removeWalletFromWhitelist(address)",
          "fundSmartContract(uint8,uint256)",
          "withdrawGrowthTokens()",
          "withdrawTeamTokens()",
          "calculateYearForTeamTokens()",
          "updateRewardsBatch(address[],uint256[])",
          "updateRewardsSingle(address,uint256)",
          "withdrawHolderRewards()",
          "withdrawTokensToBurn(uint8,uint256)",
          "updateWhiteListerAddress(address)",
          "updateRewardsUpdaterAddress(address)",
          "updateHyaxTokenAddress(address)",
          "pause()",
          "unpause()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UpgradeableHYAXRewards",
            "src": "contracts\\UpgradeableHYAXRewards.sol:197"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "_paused",
              "offset": 20,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:37"
            },
            {
              "label": "hyaxTokenAddress",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:93"
            },
            {
              "label": "hyaxToken",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(ERC20TokenInterface)402",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:95"
            },
            {
              "label": "growthTokensFunded",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:108"
            },
            {
              "label": "growthTokensWithdrawn",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:110"
            },
            {
              "label": "growthTokensInSmartContract",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:112"
            },
            {
              "label": "growthTokensLastWithdrawalTime",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:114"
            },
            {
              "label": "growthTokensStartFundingTime",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:116"
            },
            {
              "label": "growthTokensFundingStarted",
              "offset": 0,
              "slot": "9",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:118"
            },
            {
              "label": "teamTokensFunded",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:129"
            },
            {
              "label": "teamTokensWithdrawn",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:131"
            },
            {
              "label": "teamTokensInSmartContract",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:133"
            },
            {
              "label": "teamTokensLastWithdrawalTime",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:135"
            },
            {
              "label": "teamTokensStartFundingTime",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:137"
            },
            {
              "label": "teamTokensFundingStarted",
              "offset": 0,
              "slot": "15",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:139"
            },
            {
              "label": "rewardTokensFunded",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:152"
            },
            {
              "label": "rewardTokensDistributed",
              "offset": 0,
              "slot": "17",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:154"
            },
            {
              "label": "rewardTokensWithdrawn",
              "offset": 0,
              "slot": "18",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:156"
            },
            {
              "label": "rewardTokensInSmartContract",
              "offset": 0,
              "slot": "19",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:158"
            },
            {
              "label": "rewardTokensStartFundingTime",
              "offset": 0,
              "slot": "20",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:160"
            },
            {
              "label": "rewardTokensFundingStarted",
              "offset": 0,
              "slot": "21",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:162"
            },
            {
              "label": "whiteListerAddress",
              "offset": 1,
              "slot": "21",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:167"
            },
            {
              "label": "rewardsUpdaterAddress",
              "offset": 0,
              "slot": "22",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:169"
            },
            {
              "label": "wallets",
              "offset": 0,
              "slot": "23",
              "type": "t_mapping(t_address,t_struct(WalletData)615_storage)",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:194"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ERC20TokenInterface)402": {
              "label": "contract ERC20TokenInterface",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_struct(WalletData)615_storage)": {
              "label": "mapping(address => struct UpgradeableHYAXRewards.WalletData)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(WalletData)615_storage": {
              "label": "struct UpgradeableHYAXRewards.WalletData",
              "members": [
                {
                  "label": "hyaxHoldingAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "hyaxHoldingAmountAtWhitelistTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "totalHyaxRewardsAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "currentRewardsAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "rewardsWithdrawn",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "bitcoinRewardsAddress",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "addedToWhitelistTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "tokenWithdrawalTimes",
                  "type": "t_uint8",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "lastRewardsWithdrawalTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "lastRewardsUpdateTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "isTeamWallet",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "10"
                },
                {
                  "label": "isWhitelisted",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "10"
                }
              ],
              "numberOfBytes": "352"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Pausable.sol:Pausable": {
        "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:17",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Pausable",
            "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:43"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_paused",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UpgradeableHYAXRewards.sol:ERC20TokenInterface": {
        "src": "contracts\\UpgradeableHYAXRewards.sol:12",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "balanceOf(address)",
          "symbol()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UpgradeableHYAXRewards.sol:UpgradeableHYAXRewards": {
        "src": "contracts\\UpgradeableHYAXRewards.sol:19",
        "version": {
          "withMetadata": "44efc6060bdd8c55855fa1a148aa6b963eb5a49c8f7fe537b13748a444c47fac",
          "withoutMetadata": "01aecf2468ee4768e7ddc1d1ce2b1c7bf09f63213ed84f843043b80000e2172f",
          "linkedWithoutMetadata": "01aecf2468ee4768e7ddc1d1ce2b1c7bf09f63213ed84f843043b80000e2172f"
        },
        "inherit": [
          "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "addWalletToWhitelist(address,bool,string,uint256)",
          "removeWalletFromWhitelist(address)",
          "fundSmartContract(uint8,uint256)",
          "withdrawGrowthTokens()",
          "withdrawTeamTokens()",
          "calculateYearForTeamTokens()",
          "updateRewardsBatch(address[],uint256[])",
          "updateRewardsSingle(address,uint256)",
          "withdrawHolderRewards()",
          "withdrawTokensToBurn(uint8,uint256)",
          "updateWhiteListerAddress(address)",
          "updateRewardsUpdaterAddress(address)",
          "updateHyaxTokenAddress(address)",
          "pause()",
          "unpause()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UpgradeableHYAXRewards",
            "src": "contracts\\UpgradeableHYAXRewards.sol:197"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "_paused",
              "offset": 20,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:37"
            },
            {
              "label": "hyaxTokenAddress",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:93"
            },
            {
              "label": "hyaxToken",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(ERC20TokenInterface)402",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:95"
            },
            {
              "label": "growthTokensFunded",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:108"
            },
            {
              "label": "growthTokensWithdrawn",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:110"
            },
            {
              "label": "growthTokensInSmartContract",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:112"
            },
            {
              "label": "growthTokensLastWithdrawalTime",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:114"
            },
            {
              "label": "growthTokensStartFundingTime",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:116"
            },
            {
              "label": "growthTokensFundingStarted",
              "offset": 0,
              "slot": "9",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:118"
            },
            {
              "label": "teamTokensFunded",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:129"
            },
            {
              "label": "teamTokensWithdrawn",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:131"
            },
            {
              "label": "teamTokensInSmartContract",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:133"
            },
            {
              "label": "teamTokensLastWithdrawalTime",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:135"
            },
            {
              "label": "teamTokensStartFundingTime",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:137"
            },
            {
              "label": "teamTokensFundingStarted",
              "offset": 0,
              "slot": "15",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:139"
            },
            {
              "label": "rewardTokensFunded",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:152"
            },
            {
              "label": "rewardTokensDistributed",
              "offset": 0,
              "slot": "17",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:154"
            },
            {
              "label": "rewardTokensWithdrawn",
              "offset": 0,
              "slot": "18",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:156"
            },
            {
              "label": "rewardTokensInSmartContract",
              "offset": 0,
              "slot": "19",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:158"
            },
            {
              "label": "rewardTokensStartFundingTime",
              "offset": 0,
              "slot": "20",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:160"
            },
            {
              "label": "rewardTokensFundingStarted",
              "offset": 0,
              "slot": "21",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:162"
            },
            {
              "label": "whiteListerAddress",
              "offset": 1,
              "slot": "21",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:167"
            },
            {
              "label": "rewardsUpdaterAddress",
              "offset": 0,
              "slot": "22",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:169"
            },
            {
              "label": "wallets",
              "offset": 0,
              "slot": "23",
              "type": "t_mapping(t_address,t_struct(WalletData)615_storage)",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:194"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ERC20TokenInterface)402": {
              "label": "contract ERC20TokenInterface",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_struct(WalletData)615_storage)": {
              "label": "mapping(address => struct UpgradeableHYAXRewards.WalletData)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(WalletData)615_storage": {
              "label": "struct UpgradeableHYAXRewards.WalletData",
              "members": [
                {
                  "label": "hyaxHoldingAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "hyaxHoldingAmountAtWhitelistTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "totalHyaxRewardsAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "currentRewardsAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "rewardsWithdrawn",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "bitcoinRewardsAddress",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "addedToWhitelistTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "tokenWithdrawalTimes",
                  "type": "t_uint8",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "lastRewardsWithdrawalTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "lastRewardsUpdateTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "isTeamWallet",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "10"
                },
                {
                  "label": "isWhitelisted",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "10"
                }
              ],
              "numberOfBytes": "352"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Pausable.sol:Pausable": {
        "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:17",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Pausable",
            "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:43"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_paused",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UpgradeableHYAXRewards.sol:ERC20TokenInterface": {
        "src": "contracts\\UpgradeableHYAXRewards.sol:12",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "balanceOf(address)",
          "symbol()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UpgradeableHYAXRewards.sol:UpgradeableHYAXRewards": {
        "src": "contracts\\UpgradeableHYAXRewards.sol:19",
        "version": {
          "withMetadata": "6a97353f3e074a1ffb922155151fdd837267e902b6cb0b9d38c4dbfaf08140a3",
          "withoutMetadata": "01aecf2468ee4768e7ddc1d1ce2b1c7bf09f63213ed84f843043b80000e2172f",
          "linkedWithoutMetadata": "01aecf2468ee4768e7ddc1d1ce2b1c7bf09f63213ed84f843043b80000e2172f"
        },
        "inherit": [
          "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "addWalletToWhitelist(address,bool,string,uint256)",
          "removeWalletFromWhitelist(address)",
          "fundSmartContract(uint8,uint256)",
          "withdrawGrowthTokens()",
          "withdrawTeamTokens()",
          "calculateYearForTeamTokens()",
          "updateRewardsBatch(address[],uint256[])",
          "updateRewardsSingle(address,uint256)",
          "withdrawHolderRewards()",
          "withdrawTokensToBurn(uint8,uint256)",
          "updateWhiteListerAddress(address)",
          "updateRewardsUpdaterAddress(address)",
          "updateHyaxTokenAddress(address)",
          "pause()",
          "unpause()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UpgradeableHYAXRewards",
            "src": "contracts\\UpgradeableHYAXRewards.sol:197"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "_paused",
              "offset": 20,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:37"
            },
            {
              "label": "hyaxTokenAddress",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:93"
            },
            {
              "label": "hyaxToken",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(ERC20TokenInterface)402",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:95"
            },
            {
              "label": "growthTokensFunded",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:108"
            },
            {
              "label": "growthTokensWithdrawn",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:110"
            },
            {
              "label": "growthTokensInSmartContract",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:112"
            },
            {
              "label": "growthTokensLastWithdrawalTime",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:114"
            },
            {
              "label": "growthTokensStartFundingTime",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:116"
            },
            {
              "label": "growthTokensFundingStarted",
              "offset": 0,
              "slot": "9",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:118"
            },
            {
              "label": "teamTokensFunded",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:129"
            },
            {
              "label": "teamTokensWithdrawn",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:131"
            },
            {
              "label": "teamTokensInSmartContract",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:133"
            },
            {
              "label": "teamTokensLastWithdrawalTime",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:135"
            },
            {
              "label": "teamTokensStartFundingTime",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:137"
            },
            {
              "label": "teamTokensFundingStarted",
              "offset": 0,
              "slot": "15",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:139"
            },
            {
              "label": "rewardTokensFunded",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:152"
            },
            {
              "label": "rewardTokensDistributed",
              "offset": 0,
              "slot": "17",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:154"
            },
            {
              "label": "rewardTokensWithdrawn",
              "offset": 0,
              "slot": "18",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:156"
            },
            {
              "label": "rewardTokensInSmartContract",
              "offset": 0,
              "slot": "19",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:158"
            },
            {
              "label": "rewardTokensStartFundingTime",
              "offset": 0,
              "slot": "20",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:160"
            },
            {
              "label": "rewardTokensFundingStarted",
              "offset": 0,
              "slot": "21",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:162"
            },
            {
              "label": "whiteListerAddress",
              "offset": 1,
              "slot": "21",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:167"
            },
            {
              "label": "rewardsUpdaterAddress",
              "offset": 0,
              "slot": "22",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:169"
            },
            {
              "label": "wallets",
              "offset": 0,
              "slot": "23",
              "type": "t_mapping(t_address,t_struct(WalletData)615_storage)",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:194"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ERC20TokenInterface)402": {
              "label": "contract ERC20TokenInterface",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_struct(WalletData)615_storage)": {
              "label": "mapping(address => struct UpgradeableHYAXRewards.WalletData)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(WalletData)615_storage": {
              "label": "struct UpgradeableHYAXRewards.WalletData",
              "members": [
                {
                  "label": "hyaxHoldingAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "hyaxHoldingAmountAtWhitelistTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "totalHyaxRewardsAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "currentRewardsAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "rewardsWithdrawn",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "bitcoinRewardsAddress",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "addedToWhitelistTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "tokenWithdrawalTimes",
                  "type": "t_uint8",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "lastRewardsWithdrawalTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "lastRewardsUpdateTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "isTeamWallet",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "10"
                },
                {
                  "label": "isWhitelisted",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "10"
                }
              ],
              "numberOfBytes": "352"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Pausable.sol:Pausable": {
        "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:17",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Pausable",
            "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:43"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_paused",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UpgradeableHYAXRewards.sol:ERC20TokenInterface": {
        "src": "contracts\\UpgradeableHYAXRewards.sol:12",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "balanceOf(address)",
          "symbol()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UpgradeableHYAXRewards.sol:UpgradeableHYAXRewards": {
        "src": "contracts\\UpgradeableHYAXRewards.sol:19",
        "version": {
          "withMetadata": "4ecd8f47299d4f7422c753c580a50536187171260cb69143da593e29118e5f16",
          "withoutMetadata": "5e2c95a58e8e85a48249e0d49df461268301c0145d323002836431da8a16db1e",
          "linkedWithoutMetadata": "5e2c95a58e8e85a48249e0d49df461268301c0145d323002836431da8a16db1e"
        },
        "inherit": [
          "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "addWalletToWhitelist(address,bool,string,uint256)",
          "removeWalletFromWhitelist(address)",
          "fundSmartContract(uint8,uint256)",
          "withdrawGrowthTokens()",
          "withdrawTeamTokens()",
          "calculateYearForTeamTokens()",
          "updateRewardsBatch(address[],uint256[])",
          "updateRewardsSingle(address,uint256)",
          "withdrawHolderRewards()",
          "withdrawTokensToBurn(uint8,uint256)",
          "updateWhiteListerAddress(address)",
          "updateRewardsUpdaterAddress(address)",
          "updateHyaxTokenAddress(address)",
          "pause()",
          "unpause()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UpgradeableHYAXRewards",
            "src": "contracts\\UpgradeableHYAXRewards.sol:197"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "_paused",
              "offset": 20,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:37"
            },
            {
              "label": "hyaxTokenAddress",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:93"
            },
            {
              "label": "hyaxToken",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(ERC20TokenInterface)402",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:95"
            },
            {
              "label": "growthTokensFunded",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:108"
            },
            {
              "label": "growthTokensWithdrawn",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:110"
            },
            {
              "label": "growthTokensInSmartContract",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:112"
            },
            {
              "label": "growthTokensLastWithdrawalTime",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:114"
            },
            {
              "label": "growthTokensStartFundingTime",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:116"
            },
            {
              "label": "growthTokensFundingStarted",
              "offset": 0,
              "slot": "9",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:118"
            },
            {
              "label": "teamTokensFunded",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:129"
            },
            {
              "label": "teamTokensWithdrawn",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:131"
            },
            {
              "label": "teamTokensInSmartContract",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:133"
            },
            {
              "label": "teamTokensLastWithdrawalTime",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:135"
            },
            {
              "label": "teamTokensStartFundingTime",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:137"
            },
            {
              "label": "teamTokensFundingStarted",
              "offset": 0,
              "slot": "15",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:139"
            },
            {
              "label": "rewardTokensFunded",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:152"
            },
            {
              "label": "rewardTokensDistributed",
              "offset": 0,
              "slot": "17",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:154"
            },
            {
              "label": "rewardTokensWithdrawn",
              "offset": 0,
              "slot": "18",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:156"
            },
            {
              "label": "rewardTokensInSmartContract",
              "offset": 0,
              "slot": "19",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:158"
            },
            {
              "label": "rewardTokensStartFundingTime",
              "offset": 0,
              "slot": "20",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:160"
            },
            {
              "label": "rewardTokensFundingStarted",
              "offset": 0,
              "slot": "21",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:162"
            },
            {
              "label": "whiteListerAddress",
              "offset": 1,
              "slot": "21",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:167"
            },
            {
              "label": "rewardsUpdaterAddress",
              "offset": 0,
              "slot": "22",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:169"
            },
            {
              "label": "wallets",
              "offset": 0,
              "slot": "23",
              "type": "t_mapping(t_address,t_struct(WalletData)615_storage)",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:194"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ERC20TokenInterface)402": {
              "label": "contract ERC20TokenInterface",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_struct(WalletData)615_storage)": {
              "label": "mapping(address => struct UpgradeableHYAXRewards.WalletData)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(WalletData)615_storage": {
              "label": "struct UpgradeableHYAXRewards.WalletData",
              "members": [
                {
                  "label": "hyaxHoldingAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "hyaxHoldingAmountAtWhitelistTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "totalHyaxRewardsAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "currentRewardsAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "rewardsWithdrawn",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "bitcoinRewardsAddress",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "addedToWhitelistTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "tokenWithdrawalTimes",
                  "type": "t_uint8",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "lastRewardsWithdrawalTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "lastRewardsUpdateTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "isTeamWallet",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "10"
                },
                {
                  "label": "isWhitelisted",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "10"
                }
              ],
              "numberOfBytes": "352"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Pausable.sol:Pausable": {
        "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:17",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Pausable",
            "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:43"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_paused",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UpgradeableHYAXRewards.sol:ERC20TokenInterface": {
        "src": "contracts\\UpgradeableHYAXRewards.sol:12",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "balanceOf(address)",
          "symbol()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UpgradeableHYAXRewards.sol:UpgradeableHYAXRewards": {
        "src": "contracts\\UpgradeableHYAXRewards.sol:19",
        "version": {
          "withMetadata": "9e602bb48edcd54ce72f35d540da39a1de88c1c43e3eb5a6a9d114d2dd3f5914",
          "withoutMetadata": "54305b3a3d89e1c09fe599b8f27db4790d174da4f5e81df07fef0f8246dbdc4c",
          "linkedWithoutMetadata": "54305b3a3d89e1c09fe599b8f27db4790d174da4f5e81df07fef0f8246dbdc4c"
        },
        "inherit": [
          "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "addWalletToWhitelist(address,bool,string,uint256)",
          "removeWalletFromWhitelist(address)",
          "fundSmartContract(uint8,uint256)",
          "withdrawGrowthTokens()",
          "withdrawTeamTokens()",
          "updateRewardsBatch(address[],uint256[])",
          "updateRewardsSingle(address,uint256)",
          "withdrawHolderRewards()",
          "withdrawTokensToBurn(uint8,uint256)",
          "updateWhiteListerAddress(address)",
          "updateRewardsUpdaterAddress(address)",
          "updateHyaxTokenAddress(address)",
          "pause()",
          "unpause()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UpgradeableHYAXRewards",
            "src": "contracts\\UpgradeableHYAXRewards.sol:195"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "_paused",
              "offset": 20,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:37"
            },
            {
              "label": "hyaxTokenAddress",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:93"
            },
            {
              "label": "hyaxToken",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(ERC20TokenInterface)402",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:95"
            },
            {
              "label": "growthTokensFunded",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:108"
            },
            {
              "label": "growthTokensWithdrawn",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:110"
            },
            {
              "label": "growthTokensInSmartContract",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:112"
            },
            {
              "label": "growthTokensLastWithdrawalTime",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:114"
            },
            {
              "label": "growthTokensStartFundingTime",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:116"
            },
            {
              "label": "growthTokensFundingStarted",
              "offset": 0,
              "slot": "9",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:118"
            },
            {
              "label": "teamTokensFunded",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:129"
            },
            {
              "label": "teamTokensWithdrawn",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:131"
            },
            {
              "label": "teamTokensInSmartContract",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:133"
            },
            {
              "label": "teamTokensStartFundingTime",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:135"
            },
            {
              "label": "teamTokensFundingStarted",
              "offset": 0,
              "slot": "14",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:137"
            },
            {
              "label": "rewardTokensFunded",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:150"
            },
            {
              "label": "rewardTokensDistributed",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:152"
            },
            {
              "label": "rewardTokensWithdrawn",
              "offset": 0,
              "slot": "17",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:154"
            },
            {
              "label": "rewardTokensInSmartContract",
              "offset": 0,
              "slot": "18",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:156"
            },
            {
              "label": "rewardTokensStartFundingTime",
              "offset": 0,
              "slot": "19",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:158"
            },
            {
              "label": "rewardTokensFundingStarted",
              "offset": 0,
              "slot": "20",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:160"
            },
            {
              "label": "whiteListerAddress",
              "offset": 1,
              "slot": "20",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:165"
            },
            {
              "label": "rewardsUpdaterAddress",
              "offset": 0,
              "slot": "21",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:167"
            },
            {
              "label": "wallets",
              "offset": 0,
              "slot": "22",
              "type": "t_mapping(t_address,t_struct(WalletData)613_storage)",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:192"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ERC20TokenInterface)402": {
              "label": "contract ERC20TokenInterface",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_struct(WalletData)613_storage)": {
              "label": "mapping(address => struct UpgradeableHYAXRewards.WalletData)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(WalletData)613_storage": {
              "label": "struct UpgradeableHYAXRewards.WalletData",
              "members": [
                {
                  "label": "hyaxHoldingAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "hyaxHoldingAmountAtWhitelistTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "totalHyaxRewardsAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "currentRewardsAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "rewardsWithdrawn",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "bitcoinRewardsAddress",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "addedToWhitelistTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "lastTokenWithdrawalTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "lastRewardsWithdrawalTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "lastRewardsUpdateTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "isTeamWallet",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "10"
                },
                {
                  "label": "isWhitelisted",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "10"
                }
              ],
              "numberOfBytes": "352"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Pausable.sol:Pausable": {
        "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:17",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Pausable",
            "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:43"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_paused",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UpgradeableHYAXRewards.sol:ERC20TokenInterface": {
        "src": "contracts\\UpgradeableHYAXRewards.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "balanceOf(address)",
          "symbol()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UpgradeableHYAXRewards.sol:UpgradeableHYAXRewards": {
        "src": "contracts\\UpgradeableHYAXRewards.sol:18",
        "version": {
          "withMetadata": "f63a7849d6f469f65fc7e9d90a37b6af4fce3cb8ff5dd0d26849ce052dfc6c74",
          "withoutMetadata": "3d96e8f0ebd6c7a61708a05734381a4d1cebf6df781c6263c41269fd0e7a837a",
          "linkedWithoutMetadata": "3d96e8f0ebd6c7a61708a05734381a4d1cebf6df781c6263c41269fd0e7a837a"
        },
        "inherit": [
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "addWalletToWhitelist(address,bool,string,uint256)",
          "removeWalletFromWhitelist(address)",
          "fundSmartContract(uint8,uint256)",
          "withdrawGrowthTokens()",
          "withdrawTeamTokens()",
          "updateRewards(address[],uint256[])",
          "withdrawHolderRewards()",
          "updateWhiteListerAddress(address)",
          "updateRewardsUpdaterAddress(address)",
          "updateHyaxTokenAddress(address)",
          "pause()",
          "unpause()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UpgradeableHYAXRewards",
            "src": "contracts\\UpgradeableHYAXRewards.sol:139"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "_paused",
              "offset": 20,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            },
            {
              "label": "hyaxTokenAddress",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:45"
            },
            {
              "label": "hyaxToken",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(ERC20TokenInterface)332",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:47"
            },
            {
              "label": "growthTokensFunded",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:60"
            },
            {
              "label": "growthTokensWithdrawn",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:62"
            },
            {
              "label": "growthTokensInSmartContract",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:64"
            },
            {
              "label": "growthTokensLastWithdrawalTime",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:66"
            },
            {
              "label": "growthTokensStartFundingTime",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:68"
            },
            {
              "label": "growthTokensFundingStarted",
              "offset": 0,
              "slot": "8",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:70"
            },
            {
              "label": "teamTokensFunded",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:81"
            },
            {
              "label": "teamTokensWithdrawn",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:83"
            },
            {
              "label": "teamTokensInSmartContract",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:85"
            },
            {
              "label": "teamTokensStartFundingTime",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:87"
            },
            {
              "label": "teamTokensFundingStarted",
              "offset": 0,
              "slot": "13",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:89"
            },
            {
              "label": "rewardTokensFunded",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:100"
            },
            {
              "label": "rewardTokensWithdrawn",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:102"
            },
            {
              "label": "rewardTokensInSmartContract",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:104"
            },
            {
              "label": "rewardTokensStartFundingTime",
              "offset": 0,
              "slot": "17",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:106"
            },
            {
              "label": "rewardTokensFundingStarted",
              "offset": 0,
              "slot": "18",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:108"
            },
            {
              "label": "whiteListerAddress",
              "offset": 1,
              "slot": "18",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:113"
            },
            {
              "label": "rewardsUpdaterAddress",
              "offset": 0,
              "slot": "19",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:115"
            },
            {
              "label": "wallets",
              "offset": 0,
              "slot": "20",
              "type": "t_mapping(t_address,t_struct(WalletData)508_storage)",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:136"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ERC20TokenInterface)332": {
              "label": "contract ERC20TokenInterface",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_struct(WalletData)508_storage)": {
              "label": "mapping(address => struct UpgradeableHYAXRewards.WalletData)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(WalletData)508_storage": {
              "label": "struct UpgradeableHYAXRewards.WalletData",
              "members": [
                {
                  "label": "hyaxHoldingAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "hyaxHoldingAmountAtWhitelistTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "totalHyaxRewardsAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "currentRewardsAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "rewardsWithdrawn",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "bitcoinRewardsAddress",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "addedToWhitelistTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "lastTokenWithdrawalTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "lastRewardsWithdrawalTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "lastRewardsUpdateTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "isTeamWallet",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "10"
                },
                {
                  "label": "isWhitelisted",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "10"
                }
              ],
              "numberOfBytes": "352"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Pausable.sol:Pausable": {
        "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:17",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Pausable",
            "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:43"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_paused",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UpgradeableHYAXRewards.sol:ERC20TokenInterface": {
        "src": "contracts\\UpgradeableHYAXRewards.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "balanceOf(address)",
          "symbol()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UpgradeableHYAXRewards.sol:UpgradeableHYAXRewards": {
        "src": "contracts\\UpgradeableHYAXRewards.sol:18",
        "version": {
          "withMetadata": "560dee93caa9fa80f2a400ae0852806a00849c6a723314164578df3856d7d5ca",
          "withoutMetadata": "8a9a4ae7135255e32965880047f65a20f3414185123fc43a8fe8dd7264e92f3b",
          "linkedWithoutMetadata": "8a9a4ae7135255e32965880047f65a20f3414185123fc43a8fe8dd7264e92f3b"
        },
        "inherit": [
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "addWalletToWhitelist(address,bool,string,uint256)",
          "removeWalletFromWhitelist(address)",
          "fundSmartContract(uint8,uint256)",
          "withdrawGrowthTokens()",
          "withdrawTeamTokens()",
          "withdrawInvestorRewards()",
          "updateWhiteListerAddress(address)",
          "updateHyaxTokenAddress(address)",
          "pause()",
          "unpause()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UpgradeableHYAXRewards",
            "src": "contracts\\UpgradeableHYAXRewards.sol:118"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "_paused",
              "offset": 20,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            },
            {
              "label": "hyaxTokenAddress",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:42"
            },
            {
              "label": "hyaxToken",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(ERC20TokenInterface)332",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:44"
            },
            {
              "label": "growthTokensFunded",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:57"
            },
            {
              "label": "growthTokensWithdrawn",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:59"
            },
            {
              "label": "growthTokensInSmartContract",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:61"
            },
            {
              "label": "growthTokensLastWithdrawalTime",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:63"
            },
            {
              "label": "growthTokensStartFundingTime",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:65"
            },
            {
              "label": "growthTokensFundingStarted",
              "offset": 0,
              "slot": "8",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:67"
            },
            {
              "label": "teamTokensFunded",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:78"
            },
            {
              "label": "teamTokensWithdrawn",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:80"
            },
            {
              "label": "teamTokensInSmartContract",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:82"
            },
            {
              "label": "teamTokensStartFundingTime",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:84"
            },
            {
              "label": "teamTokensFundingStarted",
              "offset": 0,
              "slot": "13",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:86"
            },
            {
              "label": "tokenInvestorRewards",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:91"
            },
            {
              "label": "whiteListerAddress",
              "offset": 0,
              "slot": "15",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:93"
            },
            {
              "label": "rewardsUpdaterAddress",
              "offset": 0,
              "slot": "16",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:95"
            },
            {
              "label": "wallets",
              "offset": 0,
              "slot": "17",
              "type": "t_mapping(t_address,t_struct(WalletData)473_storage)",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:115"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ERC20TokenInterface)332": {
              "label": "contract ERC20TokenInterface",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_struct(WalletData)473_storage)": {
              "label": "mapping(address => struct UpgradeableHYAXRewards.WalletData)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(WalletData)473_storage": {
              "label": "struct UpgradeableHYAXRewards.WalletData",
              "members": [
                {
                  "label": "hyaxHoldingAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "hyaxHoldingAmountAtWhitelistTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "totalHyaxRewardsAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "currentRewardsAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "rewardsWithdrawn",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "bitcoinRewardsAddress",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "addedToWhitelistTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "lastTokenWithdrawalTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "lastRewardsWithdrawalTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "isTeamWallet",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "isWhitelisted",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "9"
                }
              ],
              "numberOfBytes": "320"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC1155Errors": {
        "src": "@openzeppelin\\contracts\\interfaces\\draft-IERC6093.sol:113",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors": {
        "src": "@openzeppelin\\contracts\\interfaces\\draft-IERC6093.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC721Errors": {
        "src": "@openzeppelin\\contracts\\interfaces\\draft-IERC6093.sol:55",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:34",
        "inherit": [
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:50"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:11",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Pausable.sol:Pausable": {
        "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:17",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Pausable",
            "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:43"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_paused",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/HYAXToken.sol:HYAXToken": {
        "src": "contracts\\HYAXToken.sol:6",
        "version": {
          "withMetadata": "27d4ce8a8dac508f6897d6b4d388561a4602949e52d4aceb0e0d7b9c708c299a",
          "withoutMetadata": "71e2c006166b48e30c5c3b87e1e0c46cf859ecb5d28506e125fced85500ff9fb",
          "linkedWithoutMetadata": "71e2c006166b48e30c5c3b87e1e0c46cf859ecb5d28506e125fced85500ff9fb"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "HYAXToken",
            "src": "contracts\\HYAXToken.sol:7"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/USDCToken.sol:USDCToken": {
        "src": "contracts\\USDCToken.sol:6",
        "version": {
          "withMetadata": "de33bd5c4503ba8cc3adce208a4fb7d77882bce61d480e2a62f33505cc8bc432",
          "withoutMetadata": "e1a9238a836f134ac6a2291975a4008709cacec2c8c411698903b60ce9a1fcdc",
          "linkedWithoutMetadata": "e1a9238a836f134ac6a2291975a4008709cacec2c8c411698903b60ce9a1fcdc"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "USDCToken",
            "src": "contracts\\USDCToken.sol:7"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UpgradeableHYAXRewards.sol:ERC20TokenInterface": {
        "src": "contracts\\UpgradeableHYAXRewards.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "balanceOf(address)",
          "symbol()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UpgradeableHYAXRewards.sol:UpgradeableHYAXRewards": {
        "src": "contracts\\UpgradeableHYAXRewards.sol:18",
        "version": {
          "withMetadata": "c04127b62070b0ddf5f646ec4c7c15c00bdc7354c680c196f578c6941dbca6da",
          "withoutMetadata": "2264deecf5ad9463299a9da6444dda6e3eea56b6123fc0fbb0e73e2ad14bb9f3",
          "linkedWithoutMetadata": "2264deecf5ad9463299a9da6444dda6e3eea56b6123fc0fbb0e73e2ad14bb9f3"
        },
        "inherit": [
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "addWalletToWhitelist(address,bool,string,uint256)",
          "removeWalletFromWhitelist(address)",
          "fundSmartContract(uint8,uint256)",
          "withdrawGrowthTokens()",
          "withdrawTeamTokens()",
          "updateWhiteListerAddress(address)",
          "updateHyaxTokenAddress(address)",
          "pause()",
          "unpause()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UpgradeableHYAXRewards",
            "src": "contracts\\UpgradeableHYAXRewards.sol:115"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "_paused",
              "offset": 20,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            },
            {
              "label": "hyaxTokenAddress",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:39"
            },
            {
              "label": "hyaxToken",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(ERC20TokenInterface)1138",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:41"
            },
            {
              "label": "growthTokensFunded",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:54"
            },
            {
              "label": "growthTokensWithdrawn",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:56"
            },
            {
              "label": "growthTokensInSmartContract",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:58"
            },
            {
              "label": "growthTokensLastWithdrawalTime",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:60"
            },
            {
              "label": "growthTokensStartFundingTime",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:62"
            },
            {
              "label": "growthTokensFundingStarted",
              "offset": 0,
              "slot": "8",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:64"
            },
            {
              "label": "teamTokensFunded",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:75"
            },
            {
              "label": "teamTokensWithdrawn",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:77"
            },
            {
              "label": "teamTokensInSmartContract",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:79"
            },
            {
              "label": "teamTokensStartFundingTime",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:81"
            },
            {
              "label": "teamTokensFundingStarted",
              "offset": 0,
              "slot": "13",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:83"
            },
            {
              "label": "tokenInvestorRewards",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:88"
            },
            {
              "label": "whiteListerAddress",
              "offset": 0,
              "slot": "15",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:90"
            },
            {
              "label": "rewardsUpdaterAddress",
              "offset": 0,
              "slot": "16",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:92"
            },
            {
              "label": "wallets",
              "offset": 0,
              "slot": "17",
              "type": "t_mapping(t_address,t_struct(WalletData)1273_storage)",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:112"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ERC20TokenInterface)1138": {
              "label": "contract ERC20TokenInterface",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_struct(WalletData)1273_storage)": {
              "label": "mapping(address => struct UpgradeableHYAXRewards.WalletData)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(WalletData)1273_storage": {
              "label": "struct UpgradeableHYAXRewards.WalletData",
              "members": [
                {
                  "label": "hyaxHoldingAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "hyaxHoldingAmountAtWhitelistTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "totalHyaxRewardsAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "currentRewardsAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "rewardsWithdrawn",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "bitcoinRewardsAddress",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "addedToWhitelistTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "lastTokenWithdrawalTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "lastRewardsWithdrawalTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "isTeamWallet",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "isWhitelisted",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "9"
                }
              ],
              "numberOfBytes": "320"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Pausable.sol:Pausable": {
        "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:17",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Pausable",
            "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:43"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_paused",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UpgradeableHYAXRewards.sol:ERC20TokenInterface": {
        "src": "contracts\\UpgradeableHYAXRewards.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "balanceOf(address)",
          "symbol()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UpgradeableHYAXRewards.sol:UpgradeableHYAXRewards": {
        "src": "contracts\\UpgradeableHYAXRewards.sol:18",
        "version": {
          "withMetadata": "c04127b62070b0ddf5f646ec4c7c15c00bdc7354c680c196f578c6941dbca6da",
          "withoutMetadata": "2264deecf5ad9463299a9da6444dda6e3eea56b6123fc0fbb0e73e2ad14bb9f3",
          "linkedWithoutMetadata": "2264deecf5ad9463299a9da6444dda6e3eea56b6123fc0fbb0e73e2ad14bb9f3"
        },
        "inherit": [
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "addWalletToWhitelist(address,bool,string,uint256)",
          "removeWalletFromWhitelist(address)",
          "fundSmartContract(uint8,uint256)",
          "withdrawGrowthTokens()",
          "withdrawTeamTokens()",
          "updateWhiteListerAddress(address)",
          "updateHyaxTokenAddress(address)",
          "pause()",
          "unpause()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UpgradeableHYAXRewards",
            "src": "contracts\\UpgradeableHYAXRewards.sol:115"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "_paused",
              "offset": 20,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            },
            {
              "label": "hyaxTokenAddress",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:39"
            },
            {
              "label": "hyaxToken",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(ERC20TokenInterface)332",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:41"
            },
            {
              "label": "growthTokensFunded",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:54"
            },
            {
              "label": "growthTokensWithdrawn",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:56"
            },
            {
              "label": "growthTokensInSmartContract",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:58"
            },
            {
              "label": "growthTokensLastWithdrawalTime",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:60"
            },
            {
              "label": "growthTokensStartFundingTime",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:62"
            },
            {
              "label": "growthTokensFundingStarted",
              "offset": 0,
              "slot": "8",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:64"
            },
            {
              "label": "teamTokensFunded",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:75"
            },
            {
              "label": "teamTokensWithdrawn",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:77"
            },
            {
              "label": "teamTokensInSmartContract",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:79"
            },
            {
              "label": "teamTokensStartFundingTime",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:81"
            },
            {
              "label": "teamTokensFundingStarted",
              "offset": 0,
              "slot": "13",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:83"
            },
            {
              "label": "tokenInvestorRewards",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:88"
            },
            {
              "label": "whiteListerAddress",
              "offset": 0,
              "slot": "15",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:90"
            },
            {
              "label": "rewardsUpdaterAddress",
              "offset": 0,
              "slot": "16",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:92"
            },
            {
              "label": "wallets",
              "offset": 0,
              "slot": "17",
              "type": "t_mapping(t_address,t_struct(WalletData)467_storage)",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:112"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ERC20TokenInterface)332": {
              "label": "contract ERC20TokenInterface",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_struct(WalletData)467_storage)": {
              "label": "mapping(address => struct UpgradeableHYAXRewards.WalletData)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(WalletData)467_storage": {
              "label": "struct UpgradeableHYAXRewards.WalletData",
              "members": [
                {
                  "label": "hyaxHoldingAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "hyaxHoldingAmountAtWhitelistTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "totalHyaxRewardsAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "currentRewardsAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "rewardsWithdrawn",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "bitcoinRewardsAddress",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "addedToWhitelistTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "lastTokenWithdrawalTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "lastRewardsWithdrawalTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "isTeamWallet",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "isWhitelisted",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "9"
                }
              ],
              "numberOfBytes": "320"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Pausable.sol:Pausable": {
        "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:17",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Pausable",
            "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:43"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_paused",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UpgradeableHYAXRewards.sol:ERC20TokenInterface": {
        "src": "contracts\\UpgradeableHYAXRewards.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "balanceOf(address)",
          "symbol()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UpgradeableHYAXRewards.sol:UpgradeableHYAXRewards": {
        "src": "contracts\\UpgradeableHYAXRewards.sol:18",
        "version": {
          "withMetadata": "ee4c50ac37e8d5b5ff3bf538f661ba653c896479c8cc784943c51104ce3e4ecb",
          "withoutMetadata": "671e42e3a1e44e4cf5af73bb1256e3e08fa2841893a58440ff4f9f4002f4836e",
          "linkedWithoutMetadata": "671e42e3a1e44e4cf5af73bb1256e3e08fa2841893a58440ff4f9f4002f4836e"
        },
        "inherit": [
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "addWalletToWhitelist(address,bool,string,uint256)",
          "removeWalletFromWhitelist(address)",
          "fundSmartContract(uint8,uint256)",
          "withdrawGrowthTokens()",
          "withdrawTeamTokens()",
          "updateWhiteListerAddress(address)",
          "updateHyaxTokenAddress(address)",
          "pause()",
          "unpause()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UpgradeableHYAXRewards",
            "src": "contracts\\UpgradeableHYAXRewards.sol:113"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "_paused",
              "offset": 20,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            },
            {
              "label": "hyaxTokenAddress",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:39"
            },
            {
              "label": "hyaxToken",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(ERC20TokenInterface)332",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:41"
            },
            {
              "label": "growthTokensFunded",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:54"
            },
            {
              "label": "growthTokensWithdrawn",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:56"
            },
            {
              "label": "growthTokensInSmartContract",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:58"
            },
            {
              "label": "growthTokensLastWithdrawalTime",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:60"
            },
            {
              "label": "growthTokensStartFundingTime",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:62"
            },
            {
              "label": "growthTokensFundingStarted",
              "offset": 0,
              "slot": "8",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:64"
            },
            {
              "label": "teamTokensFunded",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:75"
            },
            {
              "label": "teamTokensWithdrawn",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:77"
            },
            {
              "label": "teamTokensInSmartContract",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:79"
            },
            {
              "label": "teamTokensStartFundingTime",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:81"
            },
            {
              "label": "teamTokensFundingStarted",
              "offset": 0,
              "slot": "13",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:83"
            },
            {
              "label": "tokenInvestorRewards",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:88"
            },
            {
              "label": "whiteListerAddress",
              "offset": 0,
              "slot": "15",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:90"
            },
            {
              "label": "wallets",
              "offset": 0,
              "slot": "16",
              "type": "t_mapping(t_address,t_struct(WalletData)465_storage)",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:110"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ERC20TokenInterface)332": {
              "label": "contract ERC20TokenInterface",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_struct(WalletData)465_storage)": {
              "label": "mapping(address => struct UpgradeableHYAXRewards.WalletData)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(WalletData)465_storage": {
              "label": "struct UpgradeableHYAXRewards.WalletData",
              "members": [
                {
                  "label": "hyaxHoldingAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "hyaxHoldingAmountAtWhitelistTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "totalHyaxRewardsAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "currentRewardsAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "rewardsWithdrawn",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "bitcoinRewardsAddress",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "addedToWhitelistTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "lastTokenWithdrawalTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "lastRewardsWithdrawalTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "isTeamWallet",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "isWhitelisted",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "9"
                }
              ],
              "numberOfBytes": "320"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Pausable.sol:Pausable": {
        "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:17",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Pausable",
            "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:43"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_paused",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UpgradeableHYAXRewards.sol:ERC20TokenInterface": {
        "src": "contracts\\UpgradeableHYAXRewards.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "balanceOf(address)",
          "symbol()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UpgradeableHYAXRewards.sol:UpgradeableHYAXRewards": {
        "src": "contracts\\UpgradeableHYAXRewards.sol:18",
        "version": {
          "withMetadata": "8ab0dc26eef1f16f2fe639a7b6d457e1a87f9b6aaf59c2ca9a7d2d24f90239bc",
          "withoutMetadata": "85b835fbd67925d00a6e101e2a59934cc7ff724e41249fa10ad0938d673eaa53",
          "linkedWithoutMetadata": "85b835fbd67925d00a6e101e2a59934cc7ff724e41249fa10ad0938d673eaa53"
        },
        "inherit": [
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "addWalletToWhitelist(address,bool,string,uint256)",
          "removeWalletFromWhitelist(address)",
          "fundSmartContract(uint8,uint256)",
          "withdrawGrowthTokens()",
          "withdrawTeamTokens()",
          "updateWhiteListerAddress(address)",
          "updateHyaxTokenAddress(address)",
          "pause()",
          "unpause()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UpgradeableHYAXRewards",
            "src": "contracts\\UpgradeableHYAXRewards.sol:113"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "_paused",
              "offset": 20,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            },
            {
              "label": "hyaxTokenAddress",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:39"
            },
            {
              "label": "hyaxToken",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(ERC20TokenInterface)332",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:41"
            },
            {
              "label": "growthTokensFunded",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:54"
            },
            {
              "label": "growthTokensWithdrawn",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:56"
            },
            {
              "label": "growthTokensInSmartContract",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:58"
            },
            {
              "label": "growthTokensLastWithdrawalTime",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:60"
            },
            {
              "label": "growthTokensStartFundingTime",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:62"
            },
            {
              "label": "growthTokensFundingStarted",
              "offset": 0,
              "slot": "8",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:64"
            },
            {
              "label": "teamTokensFunded",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:75"
            },
            {
              "label": "teamTokensWithdrawn",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:77"
            },
            {
              "label": "teamTokensInSmartContract",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:79"
            },
            {
              "label": "teamTokensStartFundingTime",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:81"
            },
            {
              "label": "teamTokensFundingStarted",
              "offset": 0,
              "slot": "13",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:83"
            },
            {
              "label": "tokenInvestorRewards",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:88"
            },
            {
              "label": "whiteListerAddress",
              "offset": 0,
              "slot": "15",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:90"
            },
            {
              "label": "wallets",
              "offset": 0,
              "slot": "16",
              "type": "t_mapping(t_address,t_struct(WalletData)465_storage)",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:110"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ERC20TokenInterface)332": {
              "label": "contract ERC20TokenInterface",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_struct(WalletData)465_storage)": {
              "label": "mapping(address => struct UpgradeableHYAXRewards.WalletData)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(WalletData)465_storage": {
              "label": "struct UpgradeableHYAXRewards.WalletData",
              "members": [
                {
                  "label": "hyaxHoldingAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "hyaxHoldingAmountAtWhitelistTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "totalHyaxRewardsAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "currentRewardsAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "rewardsWithdrawn",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "bitcoinRewardsAddress",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "addedToWhitelistTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "lastTokenWithdrawalTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "lastRewardsWithdrawalTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "isTeamWallet",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "isWhitelisted",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "9"
                }
              ],
              "numberOfBytes": "320"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Pausable.sol:Pausable": {
        "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:17",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Pausable",
            "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:43"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_paused",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UpgradeableHYAXRewards.sol:ERC20TokenInterface": {
        "src": "contracts\\UpgradeableHYAXRewards.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "balanceOf(address)",
          "symbol()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UpgradeableHYAXRewards.sol:UpgradeableHYAXRewards": {
        "src": "contracts\\UpgradeableHYAXRewards.sol:18",
        "version": {
          "withMetadata": "a530390dbb9cc4b76fa90e91aaca9f7791f8f139965af3ab51b019cb210b9b81",
          "withoutMetadata": "1ca7b881b895d49b92d7d7c7ff910aab60b2f8297bc9c1fc49aa4e064eb6fe45",
          "linkedWithoutMetadata": "1ca7b881b895d49b92d7d7c7ff910aab60b2f8297bc9c1fc49aa4e064eb6fe45"
        },
        "inherit": [
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "addWalletToWhitelist(address,bool,string,uint256)",
          "removeWalletFromWhitelist(address)",
          "fundSmartContract(uint8,uint256)",
          "withdrawGrowthTokens()",
          "withdrawTeamTokens()",
          "updateWhiteListerAddress(address)",
          "updateHyaxTokenAddress(address)",
          "pause()",
          "unpause()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UpgradeableHYAXRewards",
            "src": "contracts\\UpgradeableHYAXRewards.sol:113"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "_paused",
              "offset": 20,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            },
            {
              "label": "hyaxTokenAddress",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:39"
            },
            {
              "label": "hyaxToken",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(ERC20TokenInterface)332",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:41"
            },
            {
              "label": "growthTokensFunded",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:54"
            },
            {
              "label": "growthTokensWithdrawn",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:56"
            },
            {
              "label": "growthTokensInSmartContract",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:58"
            },
            {
              "label": "growthTokensLastWithdrawalTime",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:60"
            },
            {
              "label": "growthTokensStartFundingTime",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:62"
            },
            {
              "label": "growthTokensFundingStarted",
              "offset": 0,
              "slot": "8",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:64"
            },
            {
              "label": "teamTokensFunded",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:75"
            },
            {
              "label": "teamTokensWithdrawn",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:77"
            },
            {
              "label": "teamTokensInSmartContract",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:79"
            },
            {
              "label": "teamTokensStartFundingTime",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:81"
            },
            {
              "label": "teamTokensFundingStarted",
              "offset": 0,
              "slot": "13",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:83"
            },
            {
              "label": "tokenInvestorRewards",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:88"
            },
            {
              "label": "whiteListerAddress",
              "offset": 0,
              "slot": "15",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:90"
            },
            {
              "label": "wallets",
              "offset": 0,
              "slot": "16",
              "type": "t_mapping(t_address,t_struct(WalletData)465_storage)",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:110"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ERC20TokenInterface)332": {
              "label": "contract ERC20TokenInterface",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_struct(WalletData)465_storage)": {
              "label": "mapping(address => struct UpgradeableHYAXRewards.WalletData)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(WalletData)465_storage": {
              "label": "struct UpgradeableHYAXRewards.WalletData",
              "members": [
                {
                  "label": "hyaxHoldingAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "hyaxHoldingAmountAtWhitelistTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "totalHyaxRewardsAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "currentRewardsAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "rewardsWithdrawn",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "bitcoinRewardsAddress",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "addedToWhitelistTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "lastTokenWithdrawalTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "lastRewardsWithdrawalTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "isTeamWallet",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "isWhitelisted",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "9"
                }
              ],
              "numberOfBytes": "320"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Pausable.sol:Pausable": {
        "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:17",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Pausable",
            "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:43"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_paused",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UpgradeableHYAXRewards.sol:ERC20TokenInterface": {
        "src": "contracts\\UpgradeableHYAXRewards.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "balanceOf(address)",
          "symbol()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UpgradeableHYAXRewards.sol:UpgradeableHYAXRewards": {
        "src": "contracts\\UpgradeableHYAXRewards.sol:18",
        "version": {
          "withMetadata": "df2cf305d0ec6902c455275634a2e43a66c9a5756ab1089e1f2e844e0bb92e88",
          "withoutMetadata": "1ca7b881b895d49b92d7d7c7ff910aab60b2f8297bc9c1fc49aa4e064eb6fe45",
          "linkedWithoutMetadata": "1ca7b881b895d49b92d7d7c7ff910aab60b2f8297bc9c1fc49aa4e064eb6fe45"
        },
        "inherit": [
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "addWalletToWhitelist(address,bool,string,uint256)",
          "removeWalletFromWhitelist(address)",
          "fundSmartContract(uint8,uint256)",
          "withdrawGrowthTokens()",
          "withdrawTeamTokens()",
          "updateWhiteListerAddress(address)",
          "updateHyaxTokenAddress(address)",
          "pause()",
          "unpause()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UpgradeableHYAXRewards",
            "src": "contracts\\UpgradeableHYAXRewards.sol:113"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "_paused",
              "offset": 20,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            },
            {
              "label": "hyaxTokenAddress",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:39"
            },
            {
              "label": "hyaxToken",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(ERC20TokenInterface)332",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:41"
            },
            {
              "label": "growthTokensFunded",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:54"
            },
            {
              "label": "growthTokensWithdrawn",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:56"
            },
            {
              "label": "growthTokensInSmartContract",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:58"
            },
            {
              "label": "growthTokensLastWithdrawalTime",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:60"
            },
            {
              "label": "growthTokensStartFundingTime",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:62"
            },
            {
              "label": "growthTokensFundingStarted",
              "offset": 0,
              "slot": "8",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:64"
            },
            {
              "label": "teamTokensFunded",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:75"
            },
            {
              "label": "teamTokensWithdrawn",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:77"
            },
            {
              "label": "teamTokensInSmartContract",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:79"
            },
            {
              "label": "teamTokensStartFundingTime",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:81"
            },
            {
              "label": "teamTokensFundingStarted",
              "offset": 0,
              "slot": "13",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:83"
            },
            {
              "label": "tokenInvestorRewards",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:88"
            },
            {
              "label": "whiteListerAddress",
              "offset": 0,
              "slot": "15",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:90"
            },
            {
              "label": "wallets",
              "offset": 0,
              "slot": "16",
              "type": "t_mapping(t_address,t_struct(WalletData)465_storage)",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:110"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ERC20TokenInterface)332": {
              "label": "contract ERC20TokenInterface",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_struct(WalletData)465_storage)": {
              "label": "mapping(address => struct UpgradeableHYAXRewards.WalletData)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(WalletData)465_storage": {
              "label": "struct UpgradeableHYAXRewards.WalletData",
              "members": [
                {
                  "label": "hyaxHoldingAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "hyaxHoldingAmountAtWhitelistTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "totalHyaxRewardsAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "currentRewardsAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "rewardsWithdrawn",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "bitcoinRewardsAddress",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "addedToWhitelistTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "lastTokenWithdrawalTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "lastRewardsWithdrawalTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "isTeamWallet",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "isWhitelisted",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "9"
                }
              ],
              "numberOfBytes": "320"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Pausable.sol:Pausable": {
        "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:17",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Pausable",
            "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:43"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_paused",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UpgradeableHYAXRewards.sol:ERC20TokenInterface": {
        "src": "contracts\\UpgradeableHYAXRewards.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "balanceOf(address)",
          "symbol()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UpgradeableHYAXRewards.sol:UpgradeableHYAXRewards": {
        "src": "contracts\\UpgradeableHYAXRewards.sol:18",
        "version": {
          "withMetadata": "b025e098a96113dabe9c0056f7ef18d254802dc7643653adcd135f08929ecb52",
          "withoutMetadata": "d590ce7004dabfcd846c1bc1a76fa50206df06fb053c9ae3288c11be8f0e3c84",
          "linkedWithoutMetadata": "d590ce7004dabfcd846c1bc1a76fa50206df06fb053c9ae3288c11be8f0e3c84"
        },
        "inherit": [
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "addWalletToWhitelist(address,bool,string,uint256)",
          "removeWalletFromWhitelist(address)",
          "fundSmartContract(uint8,uint256)",
          "withdrawGrowthTokens()",
          "withdrawTeamTokens()",
          "updateWhiteListerAddress(address)",
          "updateHyaxTokenAddress(address)",
          "pause()",
          "unpause()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UpgradeableHYAXRewards",
            "src": "contracts\\UpgradeableHYAXRewards.sol:109"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "_paused",
              "offset": 20,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            },
            {
              "label": "hyaxTokenAddress",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:39"
            },
            {
              "label": "hyaxToken",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(ERC20TokenInterface)332",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:41"
            },
            {
              "label": "growthTokensFunded",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:54"
            },
            {
              "label": "growthTokensWithdrawn",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:56"
            },
            {
              "label": "growthTokensInSmartContract",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:58"
            },
            {
              "label": "growthTokensLastWithdrawalTime",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:60"
            },
            {
              "label": "growthTokensStartFundingTime",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:62"
            },
            {
              "label": "growthTokensFundingStarted",
              "offset": 0,
              "slot": "8",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:64"
            },
            {
              "label": "teamTokensFunded",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:75"
            },
            {
              "label": "teamTokensWithdrawn",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:77"
            },
            {
              "label": "teamTokensInSmartContract",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:79"
            },
            {
              "label": "teamTokensStartFundingTime",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:81"
            },
            {
              "label": "teamTokensFundingStarted",
              "offset": 0,
              "slot": "13",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:83"
            },
            {
              "label": "tokenInvestorRewards",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:88"
            },
            {
              "label": "whiteListerAddress",
              "offset": 0,
              "slot": "15",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:90"
            },
            {
              "label": "wallets",
              "offset": 0,
              "slot": "16",
              "type": "t_mapping(t_address,t_struct(WalletData)463_storage)",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:106"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ERC20TokenInterface)332": {
              "label": "contract ERC20TokenInterface",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_struct(WalletData)463_storage)": {
              "label": "mapping(address => struct UpgradeableHYAXRewards.WalletData)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(WalletData)463_storage": {
              "label": "struct UpgradeableHYAXRewards.WalletData",
              "members": [
                {
                  "label": "hyaxHoldingAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "addedToWhitelistTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "totalHyaxRewardsAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "currentRewardsAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "bitcoinRewardsAddress",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "rewardsWithdrawn",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "lastTokenWithdrawalTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "lastRewardsWithdrawalTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "isTeamWallet",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "isWhitelisted",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "8"
                }
              ],
              "numberOfBytes": "288"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Pausable.sol:Pausable": {
        "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:17",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Pausable",
            "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:43"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_paused",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UpgradeableHYAXRewards.sol:ERC20TokenInterface": {
        "src": "contracts\\UpgradeableHYAXRewards.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "balanceOf(address)",
          "symbol()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UpgradeableHYAXRewards.sol:UpgradeableHYAXRewards": {
        "src": "contracts\\UpgradeableHYAXRewards.sol:18",
        "version": {
          "withMetadata": "f3aad35af8ecbea0dcd77af06c37499b88f10001ea68b95f0c92346b5cb268c2",
          "withoutMetadata": "761a76f259d586af99ba1e3c5356957bda760a93dc7bc2258b26e6e266de6c7d",
          "linkedWithoutMetadata": "761a76f259d586af99ba1e3c5356957bda760a93dc7bc2258b26e6e266de6c7d"
        },
        "inherit": [
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "addWalletToWhitelist(address,bool,string,uint256)",
          "removeWalletFromWhitelist(address)",
          "fundSmartContract(uint8,uint256)",
          "withdrawGrowthTokens()",
          "withdrawTeamTokens()",
          "updateWhiteListerAddress(address)",
          "updateHyaxTokenAddress(address)",
          "pause()",
          "unpause()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UpgradeableHYAXRewards",
            "src": "contracts\\UpgradeableHYAXRewards.sol:109"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "_paused",
              "offset": 20,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            },
            {
              "label": "hyaxTokenAddress",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:39"
            },
            {
              "label": "hyaxToken",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(ERC20TokenInterface)332",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:41"
            },
            {
              "label": "growthTokensFunded",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:54"
            },
            {
              "label": "growthTokensWithdrawn",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:56"
            },
            {
              "label": "growthTokensInSmartContract",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:58"
            },
            {
              "label": "growthTokensLastWithdrawalTime",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:60"
            },
            {
              "label": "growthTokensStartFundingTime",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:62"
            },
            {
              "label": "growthTokensFundingStarted",
              "offset": 0,
              "slot": "8",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:64"
            },
            {
              "label": "teamTokensFunded",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:75"
            },
            {
              "label": "teamTokensWithdrawn",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:77"
            },
            {
              "label": "teamTokensInSmartContract",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:79"
            },
            {
              "label": "teamTokensStartFundingTime",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:81"
            },
            {
              "label": "teamTokensFundingStarted",
              "offset": 0,
              "slot": "13",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:83"
            },
            {
              "label": "tokenInvestorRewards",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:88"
            },
            {
              "label": "whiteListerAddress",
              "offset": 0,
              "slot": "15",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:90"
            },
            {
              "label": "wallets",
              "offset": 0,
              "slot": "16",
              "type": "t_mapping(t_address,t_struct(WalletData)463_storage)",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:106"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ERC20TokenInterface)332": {
              "label": "contract ERC20TokenInterface",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_struct(WalletData)463_storage)": {
              "label": "mapping(address => struct UpgradeableHYAXRewards.WalletData)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(WalletData)463_storage": {
              "label": "struct UpgradeableHYAXRewards.WalletData",
              "members": [
                {
                  "label": "hyaxHoldingAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "addedToWhitelistTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "totalHyaxRewardsAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "currentRewardsAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "bitcoinRewardsAddress",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "rewardsWithdrawn",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "lastTokenWithdrawalTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "lastRewardsWithdrawalTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "isTeamWallet",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "isWhitelisted",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "8"
                }
              ],
              "numberOfBytes": "288"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Pausable.sol:Pausable": {
        "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:17",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Pausable",
            "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:43"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_paused",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UpgradeableHYAXRewards.sol:ERC20TokenInterface": {
        "src": "contracts\\UpgradeableHYAXRewards.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "balanceOf(address)",
          "symbol()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UpgradeableHYAXRewards.sol:UpgradeableHYAXRewards": {
        "src": "contracts\\UpgradeableHYAXRewards.sol:18",
        "version": {
          "withMetadata": "d0c3d0d8885254c07dfb518e52c863f7bb6268b07fa8fe12aae41e2c98066e6e",
          "withoutMetadata": "761a76f259d586af99ba1e3c5356957bda760a93dc7bc2258b26e6e266de6c7d",
          "linkedWithoutMetadata": "761a76f259d586af99ba1e3c5356957bda760a93dc7bc2258b26e6e266de6c7d"
        },
        "inherit": [
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "addWalletToWhitelist(address,bool,string,uint256)",
          "removeWalletFromWhitelist(address)",
          "fundSmartContract(uint8,uint256)",
          "withdrawGrowthTokens()",
          "withdrawTeamTokens()",
          "updateWhiteListerAddress(address)",
          "updateHyaxTokenAddress(address)",
          "pause()",
          "unpause()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UpgradeableHYAXRewards",
            "src": "contracts\\UpgradeableHYAXRewards.sol:109"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "_paused",
              "offset": 20,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            },
            {
              "label": "hyaxTokenAddress",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:39"
            },
            {
              "label": "hyaxToken",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(ERC20TokenInterface)332",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:41"
            },
            {
              "label": "growthTokensFunded",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:54"
            },
            {
              "label": "growthTokensWithdrawn",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:56"
            },
            {
              "label": "growthTokensInSmartContract",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:58"
            },
            {
              "label": "growthTokensLastWithdrawalTime",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:60"
            },
            {
              "label": "growthTokensStartFundingTime",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:62"
            },
            {
              "label": "growthTokensFundingStarted",
              "offset": 0,
              "slot": "8",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:64"
            },
            {
              "label": "teamTokensFunded",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:75"
            },
            {
              "label": "teamTokensWithdrawn",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:77"
            },
            {
              "label": "teamTokensInSmartContract",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:79"
            },
            {
              "label": "teamTokensStartFundingTime",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:81"
            },
            {
              "label": "teamTokensFundingStarted",
              "offset": 0,
              "slot": "13",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:83"
            },
            {
              "label": "tokenInvestorRewards",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:88"
            },
            {
              "label": "whiteListerAddress",
              "offset": 0,
              "slot": "15",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:90"
            },
            {
              "label": "wallets",
              "offset": 0,
              "slot": "16",
              "type": "t_mapping(t_address,t_struct(WalletData)463_storage)",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:106"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ERC20TokenInterface)332": {
              "label": "contract ERC20TokenInterface",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_struct(WalletData)463_storage)": {
              "label": "mapping(address => struct UpgradeableHYAXRewards.WalletData)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(WalletData)463_storage": {
              "label": "struct UpgradeableHYAXRewards.WalletData",
              "members": [
                {
                  "label": "hyaxHoldingAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "addedToWhitelistTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "totalHyaxRewardsAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "currentRewardsAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "bitcoinRewardsAddress",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "rewardsWithdrawn",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "lastTokenWithdrawalTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "lastRewardsWithdrawalTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "isTeamWallet",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "isWhitelisted",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "8"
                }
              ],
              "numberOfBytes": "288"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Pausable.sol:Pausable": {
        "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:17",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Pausable",
            "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:43"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_paused",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UpgradeableHYAXRewards.sol:ERC20TokenInterface": {
        "src": "contracts\\UpgradeableHYAXRewards.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "balanceOf(address)",
          "symbol()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UpgradeableHYAXRewards.sol:UpgradeableHYAXRewards": {
        "src": "contracts\\UpgradeableHYAXRewards.sol:18",
        "version": {
          "withMetadata": "850fe7097c8be7f60e1794ef18f41e83ae74f6e6fd218ce40f6501c0c958bda9",
          "withoutMetadata": "f35249c1d85f0e42a07e9839c2e665a35a54c88a23416acfa1882adff5cc0f45",
          "linkedWithoutMetadata": "f35249c1d85f0e42a07e9839c2e665a35a54c88a23416acfa1882adff5cc0f45"
        },
        "inherit": [
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "addWalletToWhitelist(address,bool,string,uint256)",
          "removeWalletFromWhitelist(address)",
          "fundSmartContract(uint8,uint256)",
          "withdrawGrowthTokens()",
          "withdrawTeamTokens()",
          "updateWhiteListerAddress(address)",
          "updateHyaxTokenAddress(address)",
          "pause()",
          "unpause()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UpgradeableHYAXRewards",
            "src": "contracts\\UpgradeableHYAXRewards.sol:109"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "_paused",
              "offset": 20,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            },
            {
              "label": "hyaxTokenAddress",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:39"
            },
            {
              "label": "hyaxToken",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(ERC20TokenInterface)332",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:41"
            },
            {
              "label": "growthTokensFunded",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:54"
            },
            {
              "label": "growthTokensWithdrawn",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:56"
            },
            {
              "label": "growthTokensInSmartContract",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:58"
            },
            {
              "label": "growthTokensLastWithdrawalTime",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:60"
            },
            {
              "label": "growthTokensStartFundingTime",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:62"
            },
            {
              "label": "growthTokensFundingStarted",
              "offset": 0,
              "slot": "8",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:64"
            },
            {
              "label": "teamTokensFunded",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:75"
            },
            {
              "label": "teamTokensWithdrawn",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:77"
            },
            {
              "label": "teamTokensInSmartContract",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:79"
            },
            {
              "label": "teamTokensStartFundingTime",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:81"
            },
            {
              "label": "teamTokensFundingStarted",
              "offset": 0,
              "slot": "13",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:83"
            },
            {
              "label": "tokenInvestorRewards",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:88"
            },
            {
              "label": "whiteListerAddress",
              "offset": 0,
              "slot": "15",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:90"
            },
            {
              "label": "wallets",
              "offset": 0,
              "slot": "16",
              "type": "t_mapping(t_address,t_struct(WalletData)463_storage)",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:106"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ERC20TokenInterface)332": {
              "label": "contract ERC20TokenInterface",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_struct(WalletData)463_storage)": {
              "label": "mapping(address => struct UpgradeableHYAXRewards.WalletData)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(WalletData)463_storage": {
              "label": "struct UpgradeableHYAXRewards.WalletData",
              "members": [
                {
                  "label": "hyaxHoldingAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "addedToWhitelistTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "totalHyaxRewardsAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "currentRewardsAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "bitcoinRewardsAddress",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "rewardsWithdrawn",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "lastTokenWithdrawalTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "lastRewardsWithdrawalTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "isTeamWallet",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "isWhitelisted",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "8"
                }
              ],
              "numberOfBytes": "288"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Pausable.sol:Pausable": {
        "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:17",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Pausable",
            "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:43"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_paused",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UpgradeableHYAXRewards.sol:ERC20TokenInterface": {
        "src": "contracts\\UpgradeableHYAXRewards.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "balanceOf(address)",
          "symbol()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UpgradeableHYAXRewards.sol:UpgradeableHYAXRewards": {
        "src": "contracts\\UpgradeableHYAXRewards.sol:18",
        "version": {
          "withMetadata": "88926c12e8da8591facef82a9bf6d63ef255ff0367aad763ed086600479c7dbb",
          "withoutMetadata": "702612421e250c513d07c15057632313649ba5e2a706d335516a1a1261bb21b2",
          "linkedWithoutMetadata": "702612421e250c513d07c15057632313649ba5e2a706d335516a1a1261bb21b2"
        },
        "inherit": [
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "addWalletToWhitelist(address,bool,string,uint256)",
          "removeWalletFromWhitelist(address)",
          "fundSmartContract(uint8,uint256)",
          "withdrawGrowthTokens()",
          "withdrawTeamTokens()",
          "updateWhiteListerAddress(address)",
          "updateHyaxTokenAddress(address)",
          "pause()",
          "unpause()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UpgradeableHYAXRewards",
            "src": "contracts\\UpgradeableHYAXRewards.sol:103"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "_paused",
              "offset": 20,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            },
            {
              "label": "hyaxTokenAddress",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:33"
            },
            {
              "label": "hyaxToken",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(ERC20TokenInterface)332",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:35"
            },
            {
              "label": "growthTokensFunded",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:48"
            },
            {
              "label": "growthTokensWithdrawn",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:50"
            },
            {
              "label": "growthTokensInSmartContract",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:52"
            },
            {
              "label": "growthTokensLastWithdrawalTime",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:54"
            },
            {
              "label": "growthTokensStartFundingTime",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:56"
            },
            {
              "label": "growthTokensFundingStarted",
              "offset": 0,
              "slot": "8",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:58"
            },
            {
              "label": "teamTokensFunded",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:69"
            },
            {
              "label": "teamTokensWithdrawn",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:71"
            },
            {
              "label": "teamTokensInSmartContract",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:73"
            },
            {
              "label": "teamTokensStartFundingTime",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:75"
            },
            {
              "label": "teamTokensFundingStarted",
              "offset": 0,
              "slot": "13",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:77"
            },
            {
              "label": "tokenInvestorRewards",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:82"
            },
            {
              "label": "whiteListerAddress",
              "offset": 0,
              "slot": "15",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:84"
            },
            {
              "label": "wallets",
              "offset": 0,
              "slot": "16",
              "type": "t_mapping(t_address,t_struct(WalletData)445_storage)",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:100"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ERC20TokenInterface)332": {
              "label": "contract ERC20TokenInterface",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_struct(WalletData)445_storage)": {
              "label": "mapping(address => struct UpgradeableHYAXRewards.WalletData)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(WalletData)445_storage": {
              "label": "struct UpgradeableHYAXRewards.WalletData",
              "members": [
                {
                  "label": "hyaxHoldingAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "addedToWhitelistTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "totalHyaxRewardsAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "currentRewardsAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "bitcoinRewardsAddress",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "rewardsWithdrawn",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "lastTokenWithdrawalTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "lastRewardsWithdrawalTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "isTeamWallet",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "isWhitelisted",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "8"
                }
              ],
              "numberOfBytes": "288"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Pausable.sol:Pausable": {
        "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:17",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Pausable",
            "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:43"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_paused",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UpgradeableHYAXRewards.sol:ERC20TokenInterface": {
        "src": "contracts\\UpgradeableHYAXRewards.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "balanceOf(address)",
          "symbol()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UpgradeableHYAXRewards.sol:UpgradeableHYAXRewards": {
        "src": "contracts\\UpgradeableHYAXRewards.sol:18",
        "version": {
          "withMetadata": "430829b1b140095156d76a2224f8e9e05a719e3fc022c8f7c38d201dbde7b350",
          "withoutMetadata": "03cc5e3ca4a16ee007d2a8202f291b87bc53ee597e447b0e4b1224232261433b",
          "linkedWithoutMetadata": "03cc5e3ca4a16ee007d2a8202f291b87bc53ee597e447b0e4b1224232261433b"
        },
        "inherit": [
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "addWalletToWhitelist(address,bool,string,uint256)",
          "removeWalletFromWhitelist(address)",
          "fundSmartContract(uint8,uint256)",
          "withdrawGrowthTokens()",
          "withdrawTeamTokens()",
          "updateWhiteListerAddress(address)",
          "updateHyaxTokenAddress(address)",
          "pause()",
          "unpause()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UpgradeableHYAXRewards",
            "src": "contracts\\UpgradeableHYAXRewards.sol:103"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "_paused",
              "offset": 20,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            },
            {
              "label": "hyaxTokenAddress",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:33"
            },
            {
              "label": "hyaxToken",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(ERC20TokenInterface)332",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:35"
            },
            {
              "label": "growthTokensFunded",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:48"
            },
            {
              "label": "growthTokensWithdrawn",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:50"
            },
            {
              "label": "growthTokensInSmartContract",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:52"
            },
            {
              "label": "growthTokensLastWithdrawalTime",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:54"
            },
            {
              "label": "growthTokensStartFundingTime",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:56"
            },
            {
              "label": "growthTokensFundingStarted",
              "offset": 0,
              "slot": "8",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:58"
            },
            {
              "label": "teamTokensFunded",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:69"
            },
            {
              "label": "teamTokensWithdrawn",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:71"
            },
            {
              "label": "teamTokensInSmartContract",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:73"
            },
            {
              "label": "teamTokensStartFundingTime",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:75"
            },
            {
              "label": "teamTokensFundingStarted",
              "offset": 0,
              "slot": "13",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:77"
            },
            {
              "label": "tokenInvestorRewards",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:82"
            },
            {
              "label": "whiteListerAddress",
              "offset": 0,
              "slot": "15",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:84"
            },
            {
              "label": "wallets",
              "offset": 0,
              "slot": "16",
              "type": "t_mapping(t_address,t_struct(WalletData)445_storage)",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:100"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ERC20TokenInterface)332": {
              "label": "contract ERC20TokenInterface",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_struct(WalletData)445_storage)": {
              "label": "mapping(address => struct UpgradeableHYAXRewards.WalletData)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(WalletData)445_storage": {
              "label": "struct UpgradeableHYAXRewards.WalletData",
              "members": [
                {
                  "label": "hyaxHoldingAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "addedToWhitelistTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "totalHyaxRewardsAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "currentRewardsAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "bitcoinRewardsAddress",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "rewardsWithdrawn",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "lastTokenWithdrawalTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "lastRewardsWithdrawalTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "isTeamWallet",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "isWhitelisted",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "8"
                }
              ],
              "numberOfBytes": "288"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Pausable.sol:Pausable": {
        "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:17",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Pausable",
            "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:43"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_paused",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UpgradeableHYAXRewards.sol:ERC20TokenInterface": {
        "src": "contracts\\UpgradeableHYAXRewards.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "balanceOf(address)",
          "symbol()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UpgradeableHYAXRewards.sol:UpgradeableHYAXRewards": {
        "src": "contracts\\UpgradeableHYAXRewards.sol:18",
        "version": {
          "withMetadata": "cd20c62d59fae6b8f9f56796358d5ade45f41acb58fa28566a040845be083ea8",
          "withoutMetadata": "03cc5e3ca4a16ee007d2a8202f291b87bc53ee597e447b0e4b1224232261433b",
          "linkedWithoutMetadata": "03cc5e3ca4a16ee007d2a8202f291b87bc53ee597e447b0e4b1224232261433b"
        },
        "inherit": [
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "addWalletToWhitelist(address,bool,string,uint256)",
          "removeWalletFromWhitelist(address)",
          "fundSmartContract(uint8,uint256)",
          "withdrawGrowthTokens()",
          "withdrawTeamTokens()",
          "updateWhiteListerAddress(address)",
          "updateHyaxTokenAddress(address)",
          "pause()",
          "unpause()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UpgradeableHYAXRewards",
            "src": "contracts\\UpgradeableHYAXRewards.sol:103"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "_paused",
              "offset": 20,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            },
            {
              "label": "hyaxTokenAddress",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:33"
            },
            {
              "label": "hyaxToken",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(ERC20TokenInterface)332",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:35"
            },
            {
              "label": "growthTokensFunded",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:48"
            },
            {
              "label": "growthTokensWithdrawn",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:50"
            },
            {
              "label": "growthTokensInSmartContract",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:52"
            },
            {
              "label": "growthTokensLastWithdrawalTime",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:54"
            },
            {
              "label": "growthTokensStartFundingTime",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:56"
            },
            {
              "label": "growthTokensFundingStarted",
              "offset": 0,
              "slot": "8",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:58"
            },
            {
              "label": "teamTokensFunded",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:69"
            },
            {
              "label": "teamTokensWithdrawn",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:71"
            },
            {
              "label": "teamTokensInSmartContract",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:73"
            },
            {
              "label": "teamTokensStartFundingTime",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:75"
            },
            {
              "label": "teamTokensFundingStarted",
              "offset": 0,
              "slot": "13",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:77"
            },
            {
              "label": "tokenInvestorRewards",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:82"
            },
            {
              "label": "whiteListerAddress",
              "offset": 0,
              "slot": "15",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:84"
            },
            {
              "label": "wallets",
              "offset": 0,
              "slot": "16",
              "type": "t_mapping(t_address,t_struct(WalletData)445_storage)",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:100"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ERC20TokenInterface)332": {
              "label": "contract ERC20TokenInterface",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_struct(WalletData)445_storage)": {
              "label": "mapping(address => struct UpgradeableHYAXRewards.WalletData)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(WalletData)445_storage": {
              "label": "struct UpgradeableHYAXRewards.WalletData",
              "members": [
                {
                  "label": "hyaxHoldingAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "addedToWhitelistTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "totalHyaxRewardsAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "currentRewardsAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "bitcoinRewardsAddress",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "rewardsWithdrawn",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "lastTokenWithdrawalTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "lastRewardsWithdrawalTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "isTeamWallet",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "isWhitelisted",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "8"
                }
              ],
              "numberOfBytes": "288"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Pausable.sol:Pausable": {
        "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:17",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Pausable",
            "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:43"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_paused",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UpgradeableHYAXRewards.sol:ERC20TokenInterface": {
        "src": "contracts\\UpgradeableHYAXRewards.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "balanceOf(address)",
          "symbol()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UpgradeableHYAXRewards.sol:UpgradeableHYAXRewards": {
        "src": "contracts\\UpgradeableHYAXRewards.sol:18",
        "version": {
          "withMetadata": "acb80fdb0f64a7cf7757e137c6c75b1d22df1c0c6d89b016f51b23e5be98bd47",
          "withoutMetadata": "f11806685f98e39429da0028d03f8a50baa0f22c13a844c090ff5ce081a3804e",
          "linkedWithoutMetadata": "f11806685f98e39429da0028d03f8a50baa0f22c13a844c090ff5ce081a3804e"
        },
        "inherit": [
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "addWalletToWhitelist(address,bool,string,uint256)",
          "removeWalletFromWhitelist(address)",
          "fundSmartContract(uint8,uint256)",
          "withdrawGrowthTokens()",
          "withdrawTeamTokens()",
          "updateWhiteListerAddress(address)",
          "updateHyaxTokenAddress(address)",
          "pause()",
          "unpause()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UpgradeableHYAXRewards",
            "src": "contracts\\UpgradeableHYAXRewards.sol:103"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "_paused",
              "offset": 20,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            },
            {
              "label": "hyaxTokenAddress",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:33"
            },
            {
              "label": "hyaxToken",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(ERC20TokenInterface)332",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:35"
            },
            {
              "label": "growthTokensFunded",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:48"
            },
            {
              "label": "growthTokensWithdrawn",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:50"
            },
            {
              "label": "growthTokensInSmartContract",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:52"
            },
            {
              "label": "growthTokensLastWithdrawalTime",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:54"
            },
            {
              "label": "growthTokensStartFundingTime",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:56"
            },
            {
              "label": "growthTokensFundingStarted",
              "offset": 0,
              "slot": "8",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:58"
            },
            {
              "label": "teamTokensFunded",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:69"
            },
            {
              "label": "teamTokensWithdrawn",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:71"
            },
            {
              "label": "teamTokensInSmartContract",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:73"
            },
            {
              "label": "teamTokensStartFundingTime",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:75"
            },
            {
              "label": "teamTokensFundingStarted",
              "offset": 0,
              "slot": "13",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:77"
            },
            {
              "label": "tokenInvestorRewards",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:82"
            },
            {
              "label": "whiteListerAddress",
              "offset": 0,
              "slot": "15",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:84"
            },
            {
              "label": "wallets",
              "offset": 0,
              "slot": "16",
              "type": "t_mapping(t_address,t_struct(WalletData)445_storage)",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:100"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ERC20TokenInterface)332": {
              "label": "contract ERC20TokenInterface",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_struct(WalletData)445_storage)": {
              "label": "mapping(address => struct UpgradeableHYAXRewards.WalletData)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(WalletData)445_storage": {
              "label": "struct UpgradeableHYAXRewards.WalletData",
              "members": [
                {
                  "label": "hyaxHoldingAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "addedToWhitelistTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "totalHyaxRewardsAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "currentRewardsAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "bitcoinRewardsAddress",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "rewardsWithdrawn",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "lastTokenWithdrawalTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "lastRewardsWithdrawalTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "isTeamWallet",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "isWhitelisted",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "8"
                }
              ],
              "numberOfBytes": "288"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UpgradeableHYAXRewards.sol:ERC20TokenInterface": {
        "src": "contracts\\UpgradeableHYAXRewards.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "balanceOf(address)",
          "symbol()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UpgradeableHYAXRewards.sol:UpgradeableHYAXRewards": {
        "src": "contracts\\UpgradeableHYAXRewards.sol:17",
        "version": {
          "withMetadata": "fb695dd44850a4a358eb803f54c0a3625326029a3029caa4a87c14a4a3d47ccf",
          "withoutMetadata": "5a33f7a7ae72922412d1c06e79a8c8739dc558e8252739fe27def210e5d27071",
          "linkedWithoutMetadata": "5a33f7a7ae72922412d1c06e79a8c8739dc558e8252739fe27def210e5d27071"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "addWalletToWhitelist(address,bool,string)",
          "fundSmartContract(uint8,uint256)",
          "withdrawGrowthTokens()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UpgradeableHYAXRewards",
            "src": "contracts\\UpgradeableHYAXRewards.sol:79"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "hyaxTokenAddress",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:29"
            },
            {
              "label": "hyaxToken",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(ERC20TokenInterface)214",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:31"
            },
            {
              "label": "growthTokensFunded",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:44"
            },
            {
              "label": "growthTokensWithdrawn",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:46"
            },
            {
              "label": "growthTokensInSmartContract",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:48"
            },
            {
              "label": "growthTokensLastWithdrawalTime",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:50"
            },
            {
              "label": "growthTokensStartFundingTime",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:52"
            },
            {
              "label": "growthTokensFundingStarted",
              "offset": 0,
              "slot": "8",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:54"
            },
            {
              "label": "tokenInvestorRewards",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:59"
            },
            {
              "label": "tokenTeamRewards",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:61"
            },
            {
              "label": "whiteListerAddress",
              "offset": 0,
              "slot": "11",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:63"
            },
            {
              "label": "wallets",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_address,t_struct(WalletData)288_storage)",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:76"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ERC20TokenInterface)214": {
              "label": "contract ERC20TokenInterface",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_struct(WalletData)288_storage)": {
              "label": "mapping(address => struct UpgradeableHYAXRewards.WalletData)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(WalletData)288_storage": {
              "label": "struct UpgradeableHYAXRewards.WalletData",
              "members": [
                {
                  "label": "hyaxHoldingAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "holdingTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "totalHyaxRewardsAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "currentRewardsAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "bitcoinRewardsAddress",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "rewardsWithdrawn",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "isTeamWallet",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "isWhitelisted",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "6"
                }
              ],
              "numberOfBytes": "224"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UpgradeableHYAXRewards.sol:ERC20TokenInterface": {
        "src": "contracts\\UpgradeableHYAXRewards.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "balanceOf(address)",
          "symbol()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UpgradeableHYAXRewards.sol:UpgradeableHYAXRewards": {
        "src": "contracts\\UpgradeableHYAXRewards.sol:17",
        "version": {
          "withMetadata": "fcf90876d5edf21e23db41725f0959d90e97151955ba67aa652ccb4f2d85ac22",
          "withoutMetadata": "5a33f7a7ae72922412d1c06e79a8c8739dc558e8252739fe27def210e5d27071",
          "linkedWithoutMetadata": "5a33f7a7ae72922412d1c06e79a8c8739dc558e8252739fe27def210e5d27071"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "addWalletToWhitelist(address,bool,string)",
          "fundSmartContract(uint8,uint256)",
          "withdrawGrowthTokens()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UpgradeableHYAXRewards",
            "src": "contracts\\UpgradeableHYAXRewards.sol:79"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "hyaxTokenAddress",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:29"
            },
            {
              "label": "hyaxToken",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(ERC20TokenInterface)214",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:31"
            },
            {
              "label": "growthTokensFunded",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:44"
            },
            {
              "label": "growthTokensWithdrawn",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:46"
            },
            {
              "label": "growthTokensInSmartContract",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:48"
            },
            {
              "label": "growthTokensLastWithdrawalTime",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:50"
            },
            {
              "label": "growthTokensStartFundingTime",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:52"
            },
            {
              "label": "growthTokensFundingStarted",
              "offset": 0,
              "slot": "8",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:54"
            },
            {
              "label": "tokenInvestorRewards",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:59"
            },
            {
              "label": "tokenTeamRewards",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:61"
            },
            {
              "label": "whiteListerAddress",
              "offset": 0,
              "slot": "11",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:63"
            },
            {
              "label": "wallets",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_address,t_struct(WalletData)288_storage)",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:76"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ERC20TokenInterface)214": {
              "label": "contract ERC20TokenInterface",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_struct(WalletData)288_storage)": {
              "label": "mapping(address => struct UpgradeableHYAXRewards.WalletData)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(WalletData)288_storage": {
              "label": "struct UpgradeableHYAXRewards.WalletData",
              "members": [
                {
                  "label": "hyaxHoldingAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "holdingTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "totalHyaxRewardsAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "currentRewardsAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "bitcoinRewardsAddress",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "rewardsWithdrawn",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "isTeamWallet",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "isWhitelisted",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "6"
                }
              ],
              "numberOfBytes": "224"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UpgradeableHYAXRewards.sol:ERC20TokenInterface": {
        "src": "contracts\\UpgradeableHYAXRewards.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "balanceOf(address)",
          "symbol()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UpgradeableHYAXRewards.sol:UpgradeableHYAXRewards": {
        "src": "contracts\\UpgradeableHYAXRewards.sol:17",
        "version": {
          "withMetadata": "c42e4f553bf2238545856f2d772c3fcc408c52877ad7e8e371c63e69dfa9d41a",
          "withoutMetadata": "ddd8367be0143a21b5071333bb883a440d3c3a9c14f1ab684a903f2a0c736fb8",
          "linkedWithoutMetadata": "ddd8367be0143a21b5071333bb883a440d3c3a9c14f1ab684a903f2a0c736fb8"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "addWalletToWhitelist(address,bool,string)",
          "fundSmartContract(uint8,uint256)",
          "withdrawGrowthTokens()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UpgradeableHYAXRewards",
            "src": "contracts\\UpgradeableHYAXRewards.sol:79"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "hyaxTokenAddress",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:29"
            },
            {
              "label": "hyaxToken",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(ERC20TokenInterface)214",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:31"
            },
            {
              "label": "growthTokensFunded",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:44"
            },
            {
              "label": "growthTokensWithdrawn",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:46"
            },
            {
              "label": "growthTokensInSmartContract",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:48"
            },
            {
              "label": "growthTokensLastWithdrawalTime",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:50"
            },
            {
              "label": "growthTokensStartFundingTime",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:52"
            },
            {
              "label": "growthTokensFundingStarted",
              "offset": 0,
              "slot": "8",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:54"
            },
            {
              "label": "tokenInvestorRewards",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:59"
            },
            {
              "label": "tokenTeamRewards",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:61"
            },
            {
              "label": "whiteListerAddress",
              "offset": 0,
              "slot": "11",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:63"
            },
            {
              "label": "wallets",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_address,t_struct(WalletData)288_storage)",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:76"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ERC20TokenInterface)214": {
              "label": "contract ERC20TokenInterface",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_struct(WalletData)288_storage)": {
              "label": "mapping(address => struct UpgradeableHYAXRewards.WalletData)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(WalletData)288_storage": {
              "label": "struct UpgradeableHYAXRewards.WalletData",
              "members": [
                {
                  "label": "hyaxHoldingAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "holdingTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "totalHyaxRewardsAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "currentRewardsAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "bitcoinRewardsAddress",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "rewardsWithdrawn",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "isTeamWallet",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "isWhitelisted",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "6"
                }
              ],
              "numberOfBytes": "224"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UpgradeableHYAXRewards.sol:ERC20TokenInterface": {
        "src": "contracts\\UpgradeableHYAXRewards.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "balanceOf(address)",
          "symbol()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UpgradeableHYAXRewards.sol:UpgradeableHYAXRewards": {
        "src": "contracts\\UpgradeableHYAXRewards.sol:17",
        "version": {
          "withMetadata": "36e9560377106758c12823ee604076e6397e9ecbc955eafd2e1bb221a5363dbf",
          "withoutMetadata": "d82962281713d74192b607881b98cfbb28fb5d728262b7b4988c005d5860a864",
          "linkedWithoutMetadata": "d82962281713d74192b607881b98cfbb28fb5d728262b7b4988c005d5860a864"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "addWalletToWhitelist(address,bool,string)",
          "fundSmartContract(uint8,uint256)",
          "withdrawGrowthTokens()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UpgradeableHYAXRewards",
            "src": "contracts\\UpgradeableHYAXRewards.sol:77"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "hyaxTokenAddress",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:29"
            },
            {
              "label": "hyaxToken",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(ERC20TokenInterface)214",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:31"
            },
            {
              "label": "growthTokensFunded",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:44"
            },
            {
              "label": "growthTokensWithdrawn",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:46"
            },
            {
              "label": "growthTokensLastWithdrawalTime",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:48"
            },
            {
              "label": "growthTokensStartFundingTime",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:50"
            },
            {
              "label": "growthTokensFundingStarted",
              "offset": 0,
              "slot": "7",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:52"
            },
            {
              "label": "tokenInvestorRewards",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:57"
            },
            {
              "label": "tokenTeamRewards",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:59"
            },
            {
              "label": "whiteListerAddress",
              "offset": 0,
              "slot": "10",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:61"
            },
            {
              "label": "wallets",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_struct(WalletData)286_storage)",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:74"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ERC20TokenInterface)214": {
              "label": "contract ERC20TokenInterface",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_struct(WalletData)286_storage)": {
              "label": "mapping(address => struct UpgradeableHYAXRewards.WalletData)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(WalletData)286_storage": {
              "label": "struct UpgradeableHYAXRewards.WalletData",
              "members": [
                {
                  "label": "hyaxHoldingAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "holdingTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "totalHyaxRewardsAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "currentRewardsAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "bitcoinRewardsAddress",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "rewardsWithdrawn",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "isTeamWallet",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "isWhitelisted",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "6"
                }
              ],
              "numberOfBytes": "224"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UpgradeableHYAXRewards.sol:ERC20TokenInterface": {
        "src": "contracts\\UpgradeableHYAXRewards.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "balanceOf(address)",
          "symbol()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UpgradeableHYAXRewards.sol:UpgradeableHYAXRewards": {
        "src": "contracts\\UpgradeableHYAXRewards.sol:17",
        "version": {
          "withMetadata": "83d7ea96afa9a82fb6298b71b2b4a67a8740ba80449df0edc81d9aae82016b1f",
          "withoutMetadata": "d82962281713d74192b607881b98cfbb28fb5d728262b7b4988c005d5860a864",
          "linkedWithoutMetadata": "d82962281713d74192b607881b98cfbb28fb5d728262b7b4988c005d5860a864"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "addWalletToWhitelist(address,bool,string)",
          "fundSmartContract(uint8,uint256)",
          "withdrawGrowthTokens()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UpgradeableHYAXRewards",
            "src": "contracts\\UpgradeableHYAXRewards.sol:77"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "hyaxTokenAddress",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:29"
            },
            {
              "label": "hyaxToken",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(ERC20TokenInterface)214",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:31"
            },
            {
              "label": "growthTokensFunded",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:44"
            },
            {
              "label": "growthTokensWithdrawn",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:46"
            },
            {
              "label": "growthTokensLastWithdrawalTime",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:48"
            },
            {
              "label": "growthTokensStartFundingTime",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:50"
            },
            {
              "label": "growthTokensFundingStarted",
              "offset": 0,
              "slot": "7",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:52"
            },
            {
              "label": "tokenInvestorRewards",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:57"
            },
            {
              "label": "tokenTeamRewards",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:59"
            },
            {
              "label": "whiteListerAddress",
              "offset": 0,
              "slot": "10",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:61"
            },
            {
              "label": "wallets",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_struct(WalletData)286_storage)",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:74"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ERC20TokenInterface)214": {
              "label": "contract ERC20TokenInterface",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_struct(WalletData)286_storage)": {
              "label": "mapping(address => struct UpgradeableHYAXRewards.WalletData)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(WalletData)286_storage": {
              "label": "struct UpgradeableHYAXRewards.WalletData",
              "members": [
                {
                  "label": "hyaxHoldingAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "holdingTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "totalHyaxRewardsAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "currentRewardsAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "bitcoinRewardsAddress",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "rewardsWithdrawn",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "isTeamWallet",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "isWhitelisted",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "6"
                }
              ],
              "numberOfBytes": "224"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UpgradeableHYAXRewards.sol:ERC20TokenInterface": {
        "src": "contracts\\UpgradeableHYAXRewards.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "balanceOf(address)",
          "symbol()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UpgradeableHYAXRewards.sol:UpgradeableHYAXRewards": {
        "src": "contracts\\UpgradeableHYAXRewards.sol:17",
        "version": {
          "withMetadata": "9e0d3ff5769b5fef200f75dfd0951d4277a4bba6142cf3ed905cb3b4ea1b45f6",
          "withoutMetadata": "d82962281713d74192b607881b98cfbb28fb5d728262b7b4988c005d5860a864",
          "linkedWithoutMetadata": "d82962281713d74192b607881b98cfbb28fb5d728262b7b4988c005d5860a864"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "addWalletToWhitelist(address,bool,string)",
          "fundSmartContract(uint8,uint256)",
          "withdrawGrowthTokens()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UpgradeableHYAXRewards",
            "src": "contracts\\UpgradeableHYAXRewards.sol:77"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "hyaxTokenAddress",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:29"
            },
            {
              "label": "hyaxToken",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(ERC20TokenInterface)214",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:31"
            },
            {
              "label": "growthTokensFunded",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:44"
            },
            {
              "label": "growthTokensWithdrawn",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:46"
            },
            {
              "label": "growthTokensLastWithdrawalTime",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:48"
            },
            {
              "label": "growthTokensStartFundingTime",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:50"
            },
            {
              "label": "growthTokensFundingStarted",
              "offset": 0,
              "slot": "7",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:52"
            },
            {
              "label": "tokenInvestorRewards",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:57"
            },
            {
              "label": "tokenTeamRewards",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:59"
            },
            {
              "label": "whiteListerAddress",
              "offset": 0,
              "slot": "10",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:61"
            },
            {
              "label": "wallets",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_struct(WalletData)286_storage)",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:74"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ERC20TokenInterface)214": {
              "label": "contract ERC20TokenInterface",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_struct(WalletData)286_storage)": {
              "label": "mapping(address => struct UpgradeableHYAXRewards.WalletData)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(WalletData)286_storage": {
              "label": "struct UpgradeableHYAXRewards.WalletData",
              "members": [
                {
                  "label": "hyaxHoldingAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "holdingTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "totalHyaxRewardsAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "currentRewardsAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "bitcoinRewardsAddress",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "rewardsWithdrawn",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "isTeamWallet",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "isWhitelisted",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "6"
                }
              ],
              "numberOfBytes": "224"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UpgradeableHYAXRewards.sol:ERC20TokenInterface": {
        "src": "contracts\\UpgradeableHYAXRewards.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "balanceOf(address)",
          "symbol()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UpgradeableHYAXRewards.sol:UpgradeableHYAXRewards": {
        "src": "contracts\\UpgradeableHYAXRewards.sol:17",
        "version": {
          "withMetadata": "619b9774fe3b1abb551a4430042a0ff875461455b46722b7e8e88f00edc6a197",
          "withoutMetadata": "d554437985dad11a22f553ec487d6665fdfc889190c9811fbb4f1e90349409eb",
          "linkedWithoutMetadata": "d554437985dad11a22f553ec487d6665fdfc889190c9811fbb4f1e90349409eb"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "addWalletToWhitelist(address,bool,string)",
          "fundSmartContract(uint8,uint256)",
          "withdrawGrowthTokens()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UpgradeableHYAXRewards",
            "src": "contracts\\UpgradeableHYAXRewards.sol:77"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "hyaxTokenAddress",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:29"
            },
            {
              "label": "hyaxToken",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(ERC20TokenInterface)214",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:31"
            },
            {
              "label": "growthTokensFunded",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:44"
            },
            {
              "label": "growthTokensWithdrawn",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:46"
            },
            {
              "label": "growthTokensLastWithdrawalTime",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:48"
            },
            {
              "label": "growthTokensStartFundingTime",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:50"
            },
            {
              "label": "growthTokensFundingStarted",
              "offset": 0,
              "slot": "7",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:52"
            },
            {
              "label": "tokenInvestorRewards",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:57"
            },
            {
              "label": "tokenTeamRewards",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:59"
            },
            {
              "label": "whiteListerAddress",
              "offset": 0,
              "slot": "10",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:61"
            },
            {
              "label": "wallets",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_struct(WalletData)286_storage)",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:74"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ERC20TokenInterface)214": {
              "label": "contract ERC20TokenInterface",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_struct(WalletData)286_storage)": {
              "label": "mapping(address => struct UpgradeableHYAXRewards.WalletData)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(WalletData)286_storage": {
              "label": "struct UpgradeableHYAXRewards.WalletData",
              "members": [
                {
                  "label": "hyaxHoldingAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "holdingTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "totalHyaxRewardsAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "currentRewardsAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "bitcoinRewardsAddress",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "rewardsWithdrawn",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "isTeamWallet",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "isWhitelisted",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "6"
                }
              ],
              "numberOfBytes": "224"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      }
    },
    {
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC1155Errors": {
        "src": "@openzeppelin\\contracts\\interfaces\\draft-IERC6093.sol:113",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors": {
        "src": "@openzeppelin\\contracts\\interfaces\\draft-IERC6093.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC721Errors": {
        "src": "@openzeppelin\\contracts\\interfaces\\draft-IERC6093.sol:55",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:34",
        "inherit": [
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:50"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:11",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/HYAXToken.sol:HYAXToken": {
        "src": "contracts\\HYAXToken.sol:6",
        "version": {
          "withMetadata": "27d4ce8a8dac508f6897d6b4d388561a4602949e52d4aceb0e0d7b9c708c299a",
          "withoutMetadata": "71e2c006166b48e30c5c3b87e1e0c46cf859ecb5d28506e125fced85500ff9fb",
          "linkedWithoutMetadata": "71e2c006166b48e30c5c3b87e1e0c46cf859ecb5d28506e125fced85500ff9fb"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "HYAXToken",
            "src": "contracts\\HYAXToken.sol:7"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UpgradeableHYAXRewards.sol:ERC20TokenInterface": {
        "src": "contracts\\UpgradeableHYAXRewards.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "balanceOf(address)",
          "symbol()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UpgradeableHYAXRewards.sol:UpgradeableHYAXRewards": {
        "src": "contracts\\UpgradeableHYAXRewards.sol:17",
        "version": {
          "withMetadata": "b63cdf1ea028bdfc426130582b99d19aa47d496be7e41c23945820f93f30dac9",
          "withoutMetadata": "0033d761a1311f3df6f53f4ba6c08cd9be84a28bbe2728458474f8568366aba2",
          "linkedWithoutMetadata": "0033d761a1311f3df6f53f4ba6c08cd9be84a28bbe2728458474f8568366aba2"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "addWalletToWhitelist(address,bool,string)",
          "fundSmartContract(uint8,uint256)",
          "withdrawGrowthTokens()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UpgradeableHYAXRewards",
            "src": "contracts\\UpgradeableHYAXRewards.sol:77"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "hyaxTokenAddress",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:29"
            },
            {
              "label": "hyaxToken",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(ERC20TokenInterface)214",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:31"
            },
            {
              "label": "growthTokensFunded",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:44"
            },
            {
              "label": "growthTokensWithdrawn",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:46"
            },
            {
              "label": "growthTokensLastWithdrawalTime",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:48"
            },
            {
              "label": "growthTokensStartFundingTime",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:50"
            },
            {
              "label": "growthTokensFundingStarted",
              "offset": 0,
              "slot": "7",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:52"
            },
            {
              "label": "tokenInvestorRewards",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:57"
            },
            {
              "label": "tokenTeamRewards",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:59"
            },
            {
              "label": "whiteListerAddress",
              "offset": 0,
              "slot": "10",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:61"
            },
            {
              "label": "wallets",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_struct(WalletData)286_storage)",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:74"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ERC20TokenInterface)214": {
              "label": "contract ERC20TokenInterface",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_struct(WalletData)286_storage)": {
              "label": "mapping(address => struct UpgradeableHYAXRewards.WalletData)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(WalletData)286_storage": {
              "label": "struct UpgradeableHYAXRewards.WalletData",
              "members": [
                {
                  "label": "hyaxHoldingAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "holdingTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "totalHyaxRewardsAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "currentRewardsAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "bitcoinRewardsAddress",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "rewardsWithdrawn",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "isTeamWallet",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "isWhitelisted",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "6"
                }
              ],
              "numberOfBytes": "224"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC1155Errors": {
        "src": "@openzeppelin\\contracts\\interfaces\\draft-IERC6093.sol:113",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors": {
        "src": "@openzeppelin\\contracts\\interfaces\\draft-IERC6093.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC721Errors": {
        "src": "@openzeppelin\\contracts\\interfaces\\draft-IERC6093.sol:55",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:34",
        "inherit": [
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:50"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:11",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/USDCToken.sol:USDCToken": {
        "src": "contracts\\USDCToken.sol:6",
        "version": {
          "withMetadata": "de33bd5c4503ba8cc3adce208a4fb7d77882bce61d480e2a62f33505cc8bc432",
          "withoutMetadata": "e1a9238a836f134ac6a2291975a4008709cacec2c8c411698903b60ce9a1fcdc",
          "linkedWithoutMetadata": "e1a9238a836f134ac6a2291975a4008709cacec2c8c411698903b60ce9a1fcdc"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "USDCToken",
            "src": "contracts\\USDCToken.sol:7"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UpgradeableHYAXRewards.sol:ERC20TokenInterface": {
        "src": "contracts\\UpgradeableHYAXRewards.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "balanceOf(address)",
          "symbol()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UpgradeableHYAXRewards.sol:UpgradeableHYAXRewards": {
        "src": "contracts\\UpgradeableHYAXRewards.sol:17",
        "version": {
          "withMetadata": "f725a6c179bd9943448224565386cdea0a9ef2bc953a33aec2bb1420cfc22737",
          "withoutMetadata": "12b81b88516eb56c930544a1d52bf32a5ead218b5a33899e9a0ce549b62ebd36",
          "linkedWithoutMetadata": "12b81b88516eb56c930544a1d52bf32a5ead218b5a33899e9a0ce549b62ebd36"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "addWalletToWhitelist(address,bool,string)",
          "fundSmartContract(uint8,uint256)",
          "withdrawGrowthTokens()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UpgradeableHYAXRewards",
            "src": "contracts\\UpgradeableHYAXRewards.sol:77"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "hyaxTokenAddress",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:29"
            },
            {
              "label": "hyaxToken",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(ERC20TokenInterface)995",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:31"
            },
            {
              "label": "growthTokensFunded",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:44"
            },
            {
              "label": "growthTokensWithdrawn",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:46"
            },
            {
              "label": "growthTokensLastWithdrawalTime",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:48"
            },
            {
              "label": "growthTokensStartFundingTime",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:50"
            },
            {
              "label": "growthTokensFundingStarted",
              "offset": 0,
              "slot": "7",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:52"
            },
            {
              "label": "tokenInvestorRewards",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:57"
            },
            {
              "label": "tokenTeamRewards",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:59"
            },
            {
              "label": "whiteListerAddress",
              "offset": 0,
              "slot": "10",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:61"
            },
            {
              "label": "wallets",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_struct(WalletData)1067_storage)",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:74"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ERC20TokenInterface)995": {
              "label": "contract ERC20TokenInterface",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_struct(WalletData)1067_storage)": {
              "label": "mapping(address => struct UpgradeableHYAXRewards.WalletData)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(WalletData)1067_storage": {
              "label": "struct UpgradeableHYAXRewards.WalletData",
              "members": [
                {
                  "label": "hyaxHoldingAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "holdingTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "totalHyaxRewardsAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "currentRewardsAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "bitcoinRewardsAddress",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "rewardsWithdrawn",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "isTeamWallet",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "isWhitelisted",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "6"
                }
              ],
              "numberOfBytes": "224"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UpgradeableHYAXRewards.sol:ERC20TokenInterface": {
        "src": "contracts\\UpgradeableHYAXRewards.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "balanceOf(address)",
          "symbol()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UpgradeableHYAXRewards.sol:UpgradeableHYAXRewards": {
        "src": "contracts\\UpgradeableHYAXRewards.sol:17",
        "version": {
          "withMetadata": "082dfdba792992e0332ff104c1666fdc5f497eb6517ecb3b7fbe067159ced07b",
          "withoutMetadata": "e1a9194397093c5728bc3a09b98921a83873be604a810bfd3494d49a776462ec",
          "linkedWithoutMetadata": "e1a9194397093c5728bc3a09b98921a83873be604a810bfd3494d49a776462ec"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "addWalletToWhitelist(address,bool,string)",
          "fundSmartContract(uint8,uint256)",
          "withdrawGrowthTokens()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UpgradeableHYAXRewards",
            "src": "contracts\\UpgradeableHYAXRewards.sol:77"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "hyaxTokenAddress",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:29"
            },
            {
              "label": "hyaxToken",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(ERC20TokenInterface)214",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:31"
            },
            {
              "label": "growthTokensFunded",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:44"
            },
            {
              "label": "growthTokensWithdrawn",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:46"
            },
            {
              "label": "growthTokensLastWithdrawalTime",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:48"
            },
            {
              "label": "growthTokensStartFundingTime",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:50"
            },
            {
              "label": "growthTokensFundingStarted",
              "offset": 0,
              "slot": "7",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:52"
            },
            {
              "label": "tokenInvestorRewards",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:57"
            },
            {
              "label": "tokenTeamRewards",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:59"
            },
            {
              "label": "whiteListerAddress",
              "offset": 0,
              "slot": "10",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:61"
            },
            {
              "label": "wallets",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_struct(WalletData)286_storage)",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:74"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ERC20TokenInterface)214": {
              "label": "contract ERC20TokenInterface",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_struct(WalletData)286_storage)": {
              "label": "mapping(address => struct UpgradeableHYAXRewards.WalletData)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(WalletData)286_storage": {
              "label": "struct UpgradeableHYAXRewards.WalletData",
              "members": [
                {
                  "label": "hyaxHoldingAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "holdingTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "totalHyaxRewardsAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "currentRewardsAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "bitcoinRewardsAddress",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "rewardsWithdrawn",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "isTeamWallet",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "isWhitelisted",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "6"
                }
              ],
              "numberOfBytes": "224"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC1155Errors": {
        "src": "@openzeppelin\\contracts\\interfaces\\draft-IERC6093.sol:113",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors": {
        "src": "@openzeppelin\\contracts\\interfaces\\draft-IERC6093.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC721Errors": {
        "src": "@openzeppelin\\contracts\\interfaces\\draft-IERC6093.sol:55",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:34",
        "inherit": [
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:50"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:11",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/HYAXToken.sol:HYAXToken": {
        "src": "contracts\\HYAXToken.sol:6",
        "version": {
          "withMetadata": "4f75a805a1f266af18a20c7fbcb01f451d570e241dea2a96d6c97e2a0fa5598f",
          "withoutMetadata": "37af818ebd4d0d187dc2822e470ef41c3f4d203c14da45103937b68b0a805298",
          "linkedWithoutMetadata": "37af818ebd4d0d187dc2822e470ef41c3f4d203c14da45103937b68b0a805298"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "HYAXToken",
            "src": "contracts\\HYAXToken.sol:7"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UpgradeableHYAXRewards.sol:ERC20TokenInterface": {
        "src": "contracts\\UpgradeableHYAXRewards.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "balanceOf(address)",
          "symbol()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UpgradeableHYAXRewards.sol:UpgradeableHYAXRewards": {
        "src": "contracts\\UpgradeableHYAXRewards.sol:17",
        "version": {
          "withMetadata": "4bbbf1351b572444eb4db5a21f7044b80663ac16125722f53b9e17ac96fee2f7",
          "withoutMetadata": "12b81b88516eb56c930544a1d52bf32a5ead218b5a33899e9a0ce549b62ebd36",
          "linkedWithoutMetadata": "12b81b88516eb56c930544a1d52bf32a5ead218b5a33899e9a0ce549b62ebd36"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "addWalletToWhitelist(address,bool,string)",
          "fundSmartContract(uint8,uint256)",
          "withdrawGrowthTokens()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UpgradeableHYAXRewards",
            "src": "contracts\\UpgradeableHYAXRewards.sol:77"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "hyaxTokenAddress",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:29"
            },
            {
              "label": "hyaxToken",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(ERC20TokenInterface)995",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:31"
            },
            {
              "label": "growthTokensFunded",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:44"
            },
            {
              "label": "growthTokensWithdrawn",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:46"
            },
            {
              "label": "growthTokensLastWithdrawalTime",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:48"
            },
            {
              "label": "growthTokensStartFundingTime",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:50"
            },
            {
              "label": "growthTokensFundingStarted",
              "offset": 0,
              "slot": "7",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:52"
            },
            {
              "label": "tokenInvestorRewards",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:57"
            },
            {
              "label": "tokenTeamRewards",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:59"
            },
            {
              "label": "whiteListerAddress",
              "offset": 0,
              "slot": "10",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:61"
            },
            {
              "label": "wallets",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_struct(WalletData)1067_storage)",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:74"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ERC20TokenInterface)995": {
              "label": "contract ERC20TokenInterface",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_struct(WalletData)1067_storage)": {
              "label": "mapping(address => struct UpgradeableHYAXRewards.WalletData)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(WalletData)1067_storage": {
              "label": "struct UpgradeableHYAXRewards.WalletData",
              "members": [
                {
                  "label": "hyaxHoldingAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "holdingTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "totalHyaxRewardsAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "currentRewardsAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "bitcoinRewardsAddress",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "rewardsWithdrawn",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "isTeamWallet",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "isWhitelisted",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "6"
                }
              ],
              "numberOfBytes": "224"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UpgradeableHYAXRewards.sol:ERC20TokenInterface": {
        "src": "contracts\\UpgradeableHYAXRewards.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "balanceOf(address)",
          "symbol()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UpgradeableHYAXRewards.sol:UpgradeableHYAXRewards": {
        "src": "contracts\\UpgradeableHYAXRewards.sol:17",
        "version": {
          "withMetadata": "ad1c02cdd41f64316431f6fe6ef111456a4fa7ed91f66fd785ef9b81b5c2c370",
          "withoutMetadata": "6871eed31976ea3c8e9032370e8c66c414fc2f85e82300ea9172aa33d9af5666",
          "linkedWithoutMetadata": "6871eed31976ea3c8e9032370e8c66c414fc2f85e82300ea9172aa33d9af5666"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "addWalletToWhitelist(address,bool,string)",
          "fundSmartContract(uint8,uint256)",
          "withdrawGrowthTokens()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UpgradeableHYAXRewards",
            "src": "contracts\\UpgradeableHYAXRewards.sol:77"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "hyaxTokenAddress",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:29"
            },
            {
              "label": "hyaxToken",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(ERC20TokenInterface)214",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:31"
            },
            {
              "label": "growthTokensFunded",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:44"
            },
            {
              "label": "growthTokensWithdrawn",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:46"
            },
            {
              "label": "growthTokensLastWithdrawalTime",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:48"
            },
            {
              "label": "growthTokensStartFundingTime",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:50"
            },
            {
              "label": "growthTokensFundingStarted",
              "offset": 0,
              "slot": "7",
              "type": "t_bool",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:52"
            },
            {
              "label": "tokenInvestorRewards",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:57"
            },
            {
              "label": "tokenTeamRewards",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:59"
            },
            {
              "label": "whiteListerAddress",
              "offset": 0,
              "slot": "10",
              "type": "t_address",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:61"
            },
            {
              "label": "wallets",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_struct(WalletData)286_storage)",
              "contract": "UpgradeableHYAXRewards",
              "src": "contracts\\UpgradeableHYAXRewards.sol:74"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ERC20TokenInterface)214": {
              "label": "contract ERC20TokenInterface",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_struct(WalletData)286_storage)": {
              "label": "mapping(address => struct UpgradeableHYAXRewards.WalletData)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(WalletData)286_storage": {
              "label": "struct UpgradeableHYAXRewards.WalletData",
              "members": [
                {
                  "label": "hyaxHoldingAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "holdingTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "totalHyaxRewardsAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "currentRewardsAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "bitcoinRewardsAddress",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "rewardsWithdrawn",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "isTeamWallet",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "isWhitelisted",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "6"
                }
              ],
              "numberOfBytes": "224"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      }
    }
  ]
}